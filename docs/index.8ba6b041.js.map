{"mappings":"IqDEI,EACA,EDqFU,E,S,E,C,E,O,G,E,U,C,E,O,C,C,C,IDlCF,EF9CR,EACA,EAkFA,EErCQ,E,E,W,E,C,EFrDR,EAAU,EAAiB,CAAC,EAUhC,SAAS,IACL,MAAM,AAAI,MAAM,kCACpB,CACA,SAAS,IACL,MAAM,AAAI,MAAM,oCACpB,CAqBA,SAAS,EAAW,CAAG,EACnB,GAAI,IAAqB,WAErB,OAAO,WAAW,EAAK,GAG3B,GAAK,AAAA,CAAA,IAAqB,GAAoB,CAAC,CAAA,GAAqB,WAEhE,OADA,EAAmB,WACZ,WAAW,EAAK,GAE3B,GAAI,CAEA,OAAO,EAAiB,EAAK,EACjC,CAAE,MAAM,EAAE,CACN,GAAI,CAEA,OAAO,EAAiB,IAAI,CAAC,KAAM,EAAK,EAC5C,CAAE,MAAM,EAAE,CAEN,OAAO,EAAiB,IAAI,CAAC,IAAI,CAAE,EAAK,EAC5C,CACJ,CAGJ,EA5CC,AAAA,WACG,GAAI,CAEI,EADA,AAAsB,YAAtB,OAAO,WACY,WAEA,CAE3B,CAAE,MAAO,EAAG,CACR,EAAmB,CACvB,CACA,GAAI,CAEI,EADA,AAAwB,YAAxB,OAAO,aACc,aAEA,CAE7B,CAAE,MAAO,EAAG,CACR,EAAqB,CACzB,CACJ,IAqDA,IAAI,EAAQ,EAAE,CACV,EAAW,CAAA,EAEX,EAAa,GAEjB,SAAS,IACA,GAAa,IAGlB,EAAW,CAAA,EACP,EAAa,MAAM,CACnB,EAAQ,EAAa,MAAM,CAAC,GAE5B,EAAa,GAEb,EAAM,MAAM,EACZ,IAER,CAEA,SAAS,IACL,IAAI,GAGJ,IAAI,EAAU,EAAW,GACzB,EAAW,CAAA,EAGX,IADA,IAAI,EAAM,EAAM,MAAM,CAChB,GAAK,CAGP,IAFA,EAAe,EACf,EAAQ,EAAE,CACH,EAAE,EAAa,GACd,GACA,CAAY,CAAC,EAAW,CAAC,GAAG,GAGpC,EAAa,GACb,EAAM,EAAM,MAAM,AACtB,CACA,EAAe,KACf,EAAW,CAAA,EACX,AApEJ,SAAyB,CAAM,EAC3B,GAAI,IAAuB,aAEvB,OAAO,aAAa,GAGxB,GAAK,AAAA,CAAA,IAAuB,GAAuB,CAAC,CAAA,GAAuB,aAEvE,OADA,EAAqB,aACd,aAAa,GAExB,GAAI,CAEO,EAAmB,EAC9B,CAAE,MAAO,EAAE,CACP,GAAI,CAEA,OAAO,EAAmB,IAAI,CAAC,KAAM,EACzC,CAAE,MAAO,EAAE,CAGP,OAAO,EAAmB,IAAI,CAAC,IAAI,CAAE,EACzC,CACJ,CAIJ,EA0CoB,GACpB,CAgBA,SAAS,EAAK,CAAG,CAAE,CAAK,EACpB,IAAI,CAAC,GAAG,CAAG,EACX,IAAI,CAAC,KAAK,CAAG,CACjB,CAWA,SAAS,IAAQ,CA5BjB,EAAQ,QAAQ,CAAG,SAAU,CAAG,EAC5B,IAAI,EAAO,AAAI,MAAM,UAAU,MAAM,CAAG,GACxC,GAAI,UAAU,MAAM,CAAG,EACnB,IAAK,IAAI,EAAI,EAAG,EAAI,UAAU,MAAM,CAAE,IAClC,CAAI,CAAC,EAAI,EAAE,CAAG,SAAS,CAAC,EAAE,CAGlC,EAAM,IAAI,CAAC,IAAI,EAAK,EAAK,IACJ,IAAjB,EAAM,MAAM,EAAW,GACvB,EAAW,EAEnB,EAOA,EAAK,SAAS,CAAC,GAAG,CAAG,WACjB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAM,IAAI,CAAC,KAAK,CACnC,EACA,EAAQ,KAAK,CAAG,UAChB,EAAQ,OAAO,CAAG,CAAA,EAClB,EAAQ,GAAG,CAAG,CAAC,EACf,EAAQ,IAAI,CAAG,EAAE,CACjB,EAAQ,OAAO,CAAG,GAClB,EAAQ,QAAQ,CAAG,CAAC,EAIpB,EAAQ,EAAE,CAAG,EACb,EAAQ,WAAW,CAAG,EACtB,EAAQ,IAAI,CAAG,EACf,EAAQ,GAAG,CAAG,EACd,EAAQ,cAAc,CAAG,EACzB,EAAQ,kBAAkB,CAAG,EAC7B,EAAQ,IAAI,CAAG,EACf,EAAQ,eAAe,CAAG,EAC1B,EAAQ,mBAAmB,CAAG,EAE9B,EAAQ,SAAS,CAAG,SAAU,CAAI,EAAI,MAAO,EAAE,AAAC,EAEhD,EAAQ,OAAO,CAAG,SAAU,CAAI,EAC5B,MAAM,AAAI,MAAM,mCACpB,EAEA,EAAQ,GAAG,CAAG,WAAc,MAAO,GAAI,EACvC,EAAQ,KAAK,CAAG,SAAU,CAAG,EACzB,MAAM,AAAI,MAAM,iCACpB,EACA,EAAQ,KAAK,CAAG,WAAa,OAAO,CAAG,CrBvLvC;;;;;;;;;;;;;;;CAeG,EAEH,MAAMmoB,EAAoB,SAAU,CAAW,EAE7C,IAAM,EAAgB,EAAE,CACpB,EAAI,EACR,IAAK,IAAI,EAAI,EAAG,EAAI,EAAI,MAAM,CAAE,IAAK,CACnC,IAAI,EAAI,EAAI,UAAU,CAAC,EACnB,CAAA,EAAI,IACN,CAAG,CAAC,IAAI,CAAG,GACF,EAAI,KACb,CAAG,CAAC,IAAI,CAAG,GAAM,EAAK,KAGrB,AAAA,CAAA,AAAI,MAAJ,CAAI,GAAY,OACjB,EAAI,EAAI,EAAI,MAAM,EACjB,AAAA,CAAA,AAAwB,MAAxB,EAAI,UAAU,CAAC,EAAI,EAAK,GAAY,OAGrC,EAAI,MAAY,CAAA,AAAA,CAAA,AAAI,KAAJ,CAAI,GAAW,EAAA,EAAO,CAAA,AAAsB,KAAtB,EAAI,UAAU,CAAC,EAAE,EAAK,EAC5D,CAAG,CAAC,IAAI,CAAG,GAAM,GAAM,IACvB,CAAG,CAAC,IAAI,CAAG,GAAO,GAAM,GAAM,KAI9B,CAAG,CAAC,IAAI,CAAG,GAAM,GAAM,IACvB,CAAG,CAAC,IAAI,CAAG,GAAO,EAAK,GAAM,KAC7B,CAAG,CAAC,IAAI,CAAG,AAAK,GAAL,EAAW,IAEzB,CACD,OAAO,CACT,EAQM,EAAoB,SAAU,CAAe,EAEjD,IAAM,EAAgB,EAAE,CACpB,EAAM,EACR,EAAI,EACN,KAAO,EAAM,EAAM,MAAM,EAAE,CACzB,IAAM,EAAK,CAAK,CAAC,IAAM,CACvB,GAAI,EAAK,IACP,CAAG,CAAC,IAAI,CAAG,OAAO,YAAY,CAAC,QAC1B,GAAI,EAAK,KAAO,EAAK,IAAK,CAC/B,IAAM,EAAK,CAAK,CAAC,IAAM,AACvB,CAAA,CAAG,CAAC,IAAI,CAAG,OAAO,YAAY,CAAC,AAAE,CAAA,AAAK,GAAL,CAAK,GAAO,EAAM,AAAK,GAAL,EACpD,MAAM,GAAI,EAAK,KAAO,EAAK,IAAK,CAE/B,IAGM,EACH,AAAE,CAAA,AAAA,CAAA,AAAK,EAAL,CAAK,GAAM,GAAO,AAAC,CAAA,AAAK,GAJlB,CAAK,CAAC,IAAM,AAIM,GAAO,GAAQ,AAAA,CAAA,AAAK,GAHtC,CAAK,CAAC,IAAM,AAG0B,GAAO,EAAM,AAAK,GAFxD,CAAK,CAAC,IAAM,AAE4C,EACjE,KACF,CAAA,CAAG,CAAC,IAAI,CAAG,OAAO,YAAY,CAAC,MAAU,CAAA,GAAK,EAAA,GAC9C,CAAG,CAAC,IAAI,CAAG,OAAO,YAAY,CAAC,MAAU,CAAA,AAAI,KAAJ,CAAI,EAC9C,KAAM,CACL,IAAM,EAAK,CAAK,CAAC,IAAM,CACjB,EAAK,CAAK,CAAC,IAAM,AACvB,CAAA,CAAG,CAAC,IAAI,CAAG,OAAO,YAAY,CAC1B,AAAA,CAAA,AAAK,GAAL,CAAK,GAAO,GAAO,AAAC,CAAA,AAAK,GAAL,CAAK,GAAO,EAAM,AAAK,GAAL,EAE3C,CACF,CACD,OAAO,EAAI,IAAI,CAAC,GAClB,EAqBa,EAAiB,CAI5B,eAAgB,KAKhB,eAAgB,KAMhB,sBAAuB,KAMvB,sBAAuB,KAMvB,kBACE,iEAKF,IAAI,cAAY,CACd,OAAO,IAAI,CAAC,iBAAiB,CAAG,KACjC,EAKD,IAAI,sBAAoB,CACtB,OAAO,IAAI,CAAC,iBAAiB,CAAG,KACjC,EASD,mBAAoB,AAAgB,YAAhB,OAAO,KAW3B,gBAAgB,CAA4B,CAAE,CAAiB,EAC7D,GAAI,CAAC,MAAM,OAAO,CAAC,GACjB,MAAM,MAAM,iDAGd,IAAI,CAAC,KAAK,GAEV,IAAM,EAAgB,EAClB,IAAI,CAAC,qBAAsB,CAC3B,IAAI,CAAC,cAAe,CAElB,EAAS,EAAE,CAEjB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,GAAK,EAAG,CACxC,IAAM,EAAQ,CAAK,CAAC,EAAE,CAChB,EAAY,EAAI,EAAI,EAAM,MAAM,CAChC,EAAQ,EAAY,CAAK,CAAC,EAAI,EAAE,CAAG,EACnC,EAAY,EAAI,EAAI,EAAM,MAAM,CAChC,EAAQ,EAAY,CAAK,CAAC,EAAI,EAAE,CAAG,EAEnC,EAAW,GAAS,EACpB,EAAW,AAAE,CAAA,AAAQ,EAAR,CAAQ,GAAS,EAAM,GAAS,EAC/C,EAAW,AAAE,CAAA,AAAQ,GAAR,CAAQ,GAAS,EAAM,GAAS,EAC7C,EAAW,AAAQ,GAAR,EAEV,IACH,EAAW,GAEN,GACH,CAAA,EAAW,EADb,GAKF,EAAO,IAAI,CACT,CAAa,CAAC,EAAS,CACvB,CAAa,CAAC,EAAS,CACvB,CAAa,CAAC,EAAS,CACvB,CAAa,CAAC,EAAS,CAE1B,CAED,OAAO,EAAO,IAAI,CAAC,GACpB,EAUD,aAAa,CAAa,CAAE,CAAiB,SAG3C,AAAI,IAAI,CAAC,kBAAkB,EAAI,CAAC,EACvB,KAAK,GAEP,IAAI,CAAC,eAAe,CAACA,EAAkB,GAAQ,EACvD,EAUD,aAAa,CAAa,CAAE,CAAgB,SAG1C,AAAI,IAAI,CAAC,kBAAkB,EAAI,CAAC,EACvB,KAAK,GAEP,EAAkB,IAAI,CAAC,uBAAuB,CAAC,EAAO,GAC9D,EAiBD,wBAAwB,CAAa,CAAE,CAAgB,EACrD,IAAI,CAAC,KAAK,GAEV,IAAM,EAAgB,EAClB,IAAI,CAAC,qBAAsB,CAC3B,IAAI,CAAC,cAAe,CAElB,EAAmB,EAAE,CAE3B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,EAAI,CAClC,IAAM,EAAQ,CAAa,CAAC,EAAM,MAAM,CAAC,KAAK,CAGxC,EAAQ,AADI,EAAI,EAAM,MAAM,CACR,CAAa,CAAC,EAAM,MAAM,CAAC,GAAG,CAAG,EAIrD,EAAQ,AADI,EAAA,EAAI,EAAM,MAAM,CACR,CAAa,CAAC,EAAM,MAAM,CAAC,GAAG,CAAG,GAIrD,EAAQ,AADI,EAAA,EAAI,EAAM,MAAM,CACR,CAAa,CAAC,EAAM,MAAM,CAAC,GAAG,CAAG,GAG3D,GAFA,EAAE,EAEE,AAAS,MAAT,GAAiB,AAAS,MAAT,GAAiB,AAAS,MAAT,GAAiB,AAAS,MAAT,EACrD,MAAM,IAAI,EAGZ,IAAM,EAAY,GAAS,EAAM,GAAS,EAG1C,GAFA,EAAO,IAAI,CAAC,GAER,AAAU,KAAV,EAAc,CAChB,IAAM,EAAW,GAAW,EAAK,IAAS,GAAS,EAGnD,GAFA,EAAO,IAAI,CAAC,GAER,AAAU,KAAV,EAAc,CAChB,IAAM,EAAa,GAAS,EAAK,IAAQ,EACzC,EAAO,IAAI,CAAC,EACb,CACF,CACF,CAED,OAAO,CACR,EAOD,QACE,GAAI,CAAC,IAAI,CAAC,cAAc,CAAE,CACxB,IAAI,CAAC,cAAc,CAAG,CAAA,EACtB,IAAI,CAAC,cAAc,CAAG,CAAA,EACtB,IAAI,CAAC,qBAAqB,CAAG,CAAA,EAC7B,IAAI,CAAC,qBAAqB,CAAG,CAAA,EAG7B,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAE,IAC5C,IAAI,CAAC,cAAc,CAAC,EAAE,CAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAClD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAG,EAC9C,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,GACjE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAG,EAGxD,GAAK,IAAI,CAAC,iBAAiB,CAAC,MAAM,GACpC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAG,EAC3D,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAG,EAG/D,CACF,CACD,CAKI,OAAO,UAAgC,MAA7C,aAAA,C,K,I,WACW,IAAI,CAAA,IAAA,CAAG,yBACjB,CAAA,CAKM,MAAM,EAAe,SAAU,CAAW,EAC/C,IAAM,EAAYA,EAAkB,GACpC,OAAO,EAAO,eAAe,CAAC,EAAW,CAAA,EAC3C,EAMa,EAAgC,SAAU,CAAW,EAEhE,OAAO,EAAa,GAAK,OAAO,CAAC,MAAO,GAC1C,EAWa,EAAe,SAAU,CAAW,EAC/C,GAAI,CACF,OAAO,EAAO,YAAY,CAAC,EAAK,CAAA,EACjC,CAAC,MAAO,EAAG,CACV,QAAQ,KAAK,CAAC,wBAAyB,EACxC,CACD,OAAO,IACT,EGhUM,EAAwB,IAC5B,ADxDF;;;;;;;;;;;;;;;CAeG,EAOa,CAAA,WACd,GAAI,AAAgB,aAAhB,OAAO,KACT,OAAO,KAET,GAAI,AAAkB,aAAlB,OAAO,OACT,OAAO,OAET,GAAI,AAAkB,KAAA,IAAX,EACT,OAAO,CAET,OAAM,AAAI,MAAM,kCAClB,CAAA,ICuBc,qBAAqB,CAU7B,EAA6B,KACjC,GAAI,AAAmB,KAAA,IAAZ,GAA2B,AAAuB,KAAA,IAAhB,EAAQ,GAAG,CACtD,OAEF,IAAM,EAAN,KAAA,EACA,GAAI,EACF,OAAO,KAAK,KAAK,CAAC,EAEtB,EAEM,EAAwB,SAIxB,EAHJ,GAAI,AAAoB,aAApB,OAAO,SACT,OAGF,GAAI,CACF,EAAQ,SAAS,MAAM,CAAC,KAAK,CAAC,gCAC/B,CAAC,MAAO,EAAG,CAGV,MACD,CACD,IAAM,EAAU,GAAS,EAAa,CAAK,CAAC,EAAE,EAC9C,OAAO,GAAW,KAAK,KAAK,CAAC,EAC/B,EASa,EAAc,KACzB,GAAI,CACF,OACE,KACA,KACA,GAEH,CAAC,MAAO,EAAG,CAOV,QAAQ,IAAI,CAAC,CAAA,4CAAA,EAA+C,EAAC,CAAE,EAC/D,MACD,CACH,EA2Ca,EAAsB,KAAyC,IAAA,EAC1E,OAAA,AAAa,OAAb,CAAA,EAAA,GAAA,GAAa,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAE,MAAM,AAAA,CChKvB;;;;;;;;;;;;;;;CAeG,EAEU,MAAA,EAIX,aAAA,CAFA,IAAA,CAAA,MAAM,CAA8B,KAAK,EACzC,IAAA,CAAA,OAAO,CAA8B,KAAK,EAExC,IAAI,CAAC,OAAO,CAAG,IAAI,QAAQ,CAAC,EAAS,KACnC,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,MAAM,CAAG,CAChB,EACD,CAOD,aACE,CAAqD,CAAA,CAErD,MAAO,CAAC,EAAO,KACT,EACF,IAAI,CAAC,MAAM,CAAC,GAEZ,IAAI,CAAC,OAAO,CAAC,GAES,YAApB,OAAO,IAGT,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAIpB,AAAoB,IAApB,EAAS,MAAM,CACjB,EAAS,GAET,EAAS,EAAO,GAGtB,CACD,CACF,CGgBK,MAAO,UAAsB,MAIjC,YAEW,CAAY,CACrB,CAAe,CAER,CAAoC,CAAA,CAE3C,KAAK,CAAC,GALG,IAAI,CAAA,IAAA,CAAJ,EAGF,IAAU,CAAA,UAAA,CAAV,EAPA,IAAI,CAAA,IAAA,CAdI,gBA2Bf,OAAO,cAAc,CAAC,IAAI,CAAE,EAAc,SAAS,EAI/C,MAAM,iBAAiB,EACzB,MAAM,iBAAiB,CAAC,IAAI,CAAE,EAAa,SAAS,CAAC,MAAM,CAE9D,CACF,CAEY,MAAA,EAIX,YACmB,CAAe,CACf,CAAmB,CACnB,CAA2B,CAAA,CAF3B,IAAO,CAAA,OAAA,CAAP,EACA,IAAW,CAAA,WAAA,CAAX,EACA,IAAM,CAAA,MAAA,CAAN,CACf,CAEJ,OACE,CAAO,CACP,GAAG,CAAyD,CAAA,CAE5D,IAAM,EAAc,CAAI,CAAC,EAAgB,EAAI,CAAA,EACvC,EAAW,CAAG,EAAA,IAAI,CAAC,OAAO,CAAA,CAAA,EAAI,EAAI,CAAE,CACpC,EAAW,IAAI,CAAC,MAAM,CAAC,EAAK,CAE5B,EAAU,EAWX,AAXsC,EAW7B,OAAO,CAAC,EAAS,CAAC,EAAG,KACnC,IAAM,EAAQ,AAZuC,CAYnC,CAAC,EAAI,CACvB,OAAO,AAAS,MAAT,EAAgB,OAAO,GAAS,CAAI,CAAA,EAAA,EAAG,EAAA,CAAI,AACpD,GAdqE,QAE7D,EAAc,CAAA,EAAG,IAAI,CAAC,WAAW,CAAA,EAAA,EAAK,EAAO,EAAA,EAAK,EAAQ,EAAA,CAAI,CAIpE,OAFc,IAAI,EAAc,EAAU,EAAa,EAGxD,CACF,CASD,MAAM,EAAU,gBG3EA,SAAA,EAAU,CAAS,CAAE,CAAS,EAC5C,GAAI,IAAM,EACR,MAAO,CAAA,EAGT,IAAM,EAAQ,OAAO,IAAI,CAAC,GACpB,EAAQ,OAAO,IAAI,CAAC,GAC1B,IAAK,IAAM,KAAK,EAAO,CACrB,GAAI,CAAC,EAAM,QAAQ,CAAC,GAClB,MAAO,CAAA,EAGT,IAAM,EAAS,CAA6B,CAAC,EAAE,CACzC,EAAS,CAA6B,CAAC,EAAE,CAC/C,GAAI,EAAS,IAAU,EAAS,GAC9B,CAAA,GAAI,CAAC,EAAU,EAAO,GACpB,MAAO,CAAA,CADT,MAGK,GAAI,IAAU,EACnB,MAAO,CAAA,CAEV,CAED,IAAK,IAAM,KAAK,EACd,GAAI,CAAC,EAAM,QAAQ,CAAC,GAClB,MAAO,CAAA,EAGX,MAAO,CAAA,CACT,CAEA,SAAS,EAAS,CAAc,EAC9B,OAAO,AAAU,OAAV,GAAkB,AAAiB,UAAjB,OAAO,CAClC,CjB/Da,MAAA,EAiBX,YACW,CAAO,CACP,CAAmC,CACnC,CAAmB,CAAA,CAFnB,IAAI,CAAA,IAAA,CAAJ,EACA,IAAe,CAAA,eAAA,CAAf,EACA,IAAI,CAAA,IAAA,CAAJ,EAnBX,IAAiB,CAAA,iBAAA,CAAG,CAAA,EAIpB,IAAY,CAAA,YAAA,CAAe,CAAA,EAE3B,IAAA,CAAA,iBAAiB,CAA0B,OAE3C,IAAiB,CAAA,iBAAA,CAAwC,IAYrD,CAEJ,qBAAqB,CAAuB,CAAA,CAE1C,OADA,IAAI,CAAC,iBAAiB,CAAG,EAClB,IAAI,AACZ,CAED,qBAAqB,CAA0B,CAAA,CAE7C,OADA,IAAI,CAAC,iBAAiB,CAAG,EAClB,IAAI,AACZ,CAED,gBAAgB,CAAiB,CAAA,CAE/B,OADA,IAAI,CAAC,YAAY,CAAG,EACb,IAAI,AACZ,CAED,2BAA2B,CAAsC,CAAA,CAE/D,OADA,IAAI,CAAC,iBAAiB,CAAG,EAClB,IAAI,AACZ,CACF,CCtED;;;;;;;;;;;;;;;CAeG,EAEI,MAAM,EAAqB,WCjBlC;;;;;;;;;;;;;;;CAeG,EAkBU,MAAA,EAWX,YACmB,CAAO,CACP,CAA6B,CAAA,CAD7B,IAAI,CAAA,IAAA,CAAJ,EACA,IAAS,CAAA,SAAA,CAAT,EAZX,IAAS,CAAA,SAAA,CAAwB,KACxB,IAAA,CAAA,SAAS,CAAuC,IAAI,IACpD,IAAA,CAAA,iBAAiB,CAG9B,IAAI,IACS,IAAA,CAAA,gBAAgB,CAC/B,IAAI,IACE,IAAA,CAAA,eAAe,CAAwC,IAAI,GAK/D,CAMJ,IAAI,CAAmB,CAAA,CAErB,IAAM,EAAuB,IAAI,CAAC,2BAA2B,CAAC,GAE9D,GAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,GAAuB,CACrD,IAAM,EAAW,IAAI,EAGrB,GAFA,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAsB,GAG/C,IAAI,CAAC,aAAa,CAAC,IACnB,IAAI,CAAC,oBAAoB,GAGzB,GAAI,CACF,IAAM,EAAW,IAAI,CAAC,sBAAsB,CAAC,CAC3C,mBAAoB,CACrB,GACG,GACF,EAAS,OAAO,CAAC,EAEpB,CAAC,MAAO,EAAG,CAGX,CAEJ,CAED,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,GAAuB,OAAO,AACjE,CAkBD,aAAa,CAGZ,CAAA,C,I,EAEC,IAAM,EAAuB,IAAI,CAAC,2BAA2B,CAC3D,MAAA,EAAA,KAAA,EAAA,EAAS,UAAU,EAEf,EAAW,AAAqB,OAArB,CAAA,EAAA,MAAA,EAAA,KAAA,EAAA,EAAS,QAAQ,AAAR,GAAY,AAAA,KAAA,IAAA,GAAA,EAEtC,GACE,IAAI,CAAC,aAAa,CAAC,IACnB,IAAI,CAAC,oBAAoB,GAEzB,GAAI,CACF,OAAO,IAAI,CAAC,sBAAsB,CAAC,CACjC,mBAAoB,CACrB,EACF,CAAC,MAAO,EAAG,CACV,GAAI,EACF,OAAO,IAEP,OAAM,CAET,KACI,CAEL,GAAI,EACF,OAAO,IAEP,OAAM,MAAM,CAAW,QAAA,EAAA,IAAI,CAAC,IAAI,CAAA,iBAAA,CAAmB,CAEtD,CACF,CAED,cAAY,CACV,OAAO,IAAI,CAAC,SAAS,AACtB,CAED,aAAa,CAAuB,CAAA,CAClC,GAAI,EAAU,IAAI,GAAK,IAAI,CAAC,IAAI,CAC9B,MAAM,MACJ,CAAyB,sBAAA,EAAA,EAAU,IAAI,CAAiB,cAAA,EAAA,IAAI,CAAC,IAAI,CAAG,CAAA,CAAA,EAIxE,GAAI,IAAI,CAAC,SAAS,CAChB,MAAM,MAAM,CAAiB,cAAA,EAAA,IAAI,CAAC,IAAI,CAAA,0BAAA,CAA4B,EAMpE,GAHA,IAAI,CAAC,SAAS,CAAG,EAGZ,IAAI,CAAC,oBAAoB,IAK9B,GA2NK,AAA2B,UAA3B,AA3NgB,EA2NN,iBAAiB,CA1N9B,GAAI,CACF,IAAI,CAAC,sBAAsB,CAAC,CAAE,mBAAoB,CAAkB,EACrE,CAAC,MAAO,EAAG,CAKX,CAMH,IAAK,GAAM,CACT,EACA,EACD,GAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO,GAAI,CACrC,IAAM,EACJ,IAAI,CAAC,2BAA2B,CAAC,GAEnC,GAAI,CAEF,IAAM,EAAW,IAAI,CAAC,sBAAsB,CAAC,CAC3C,mBAAoB,CACrB,GACD,EAAiB,OAAO,CAAC,EAC1B,CAAC,MAAO,EAAG,CAGX,CACF,EACF,CAED,cAAc,EAAqB,CAAkB,CAAA,CACnD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAC9B,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EACvB,CAID,MAAM,QAAM,CACV,IAAM,EAAW,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAEjD,OAAM,QAAQ,GAAG,CAAC,IACb,EACA,MAAM,CAAC,AAAA,GAAW,aAAc,GAEhC,GAAG,CAAC,AAAA,GAAY,EAAgB,QAAS,CAAC,MAAM,OAChD,EACA,MAAM,CAAC,AAAA,GAAW,YAAa,GAE/B,GAAG,CAAC,AAAA,GAAY,EAAgB,OAAO,IAC3C,CACF,CAED,gBAAc,CACZ,OAAO,AAAkB,MAAlB,IAAI,CAAC,SAAS,AACtB,CAED,cAAc,EAAqB,CAAkB,CAAA,CACnD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAC3B,CAED,WAAW,EAAqB,CAAkB,CAAA,CAChD,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAe,CAAA,CACjD,CAED,WAAW,EAA0B,CAAA,CAAE,CAAA,CACrC,GAAM,CAAA,QAAE,EAAU,CAAA,CAAA,CAAI,CAAG,EACnB,EAAuB,IAAI,CAAC,2BAA2B,CAC3D,EAAK,kBAAkB,EAEzB,GAAI,IAAI,CAAC,aAAa,CAAC,GACrB,MAAM,MACJ,CAAA,EAAG,IAAI,CAAC,IAAI,CAAI,CAAA,EAAA,EAAoD,8BAAA,CAAA,EAIxE,GAAI,CAAC,IAAI,CAAC,cAAc,GACtB,MAAM,MAAM,CAAa,UAAA,EAAA,IAAI,CAAC,IAAI,CAAA,4BAAA,CAA8B,EAGlE,IAAM,EAAW,IAAI,CAAC,sBAAsB,CAAC,CAC3C,mBAAoB,EACpB,QAAA,CACD,GAGD,IAAK,GAAM,CACT,EACA,EACD,GAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO,GAG7B,IADF,IAAI,CAAC,2BAA2B,CAAC,IAEjC,EAAiB,OAAO,CAAC,GAI7B,OAAO,CACR,CAUD,OAAO,CAA2B,CAAE,CAAmB,CAAA,C,I,EACrD,IAAM,EAAuB,IAAI,CAAC,2BAA2B,CAAC,GACxD,EACJ,AAA8C,OAA9C,CAAA,EAAA,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAA,GAAqB,AAAA,KAAA,IAAA,EAAA,EAC9C,IAAI,IACN,EAAkB,GAAG,CAAC,GACtB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAsB,GAE/C,IAAM,EAAmB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAK5C,OAJI,GACF,EAAS,EAAkB,GAGtB,KACL,EAAkB,MAAM,CAAC,EAC3B,CACD,CAMO,sBACN,CAA+B,CAC/B,CAAkB,CAAA,CAElB,IAAM,EAAY,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAC3C,GAAK,EAGL,IAAK,IAAM,KAAY,EACrB,GAAI,CACF,EAAS,EAAU,EACpB,CAAC,MAAM,EAAA,CAEP,CAEJ,CAEO,uBAAuB,CAAA,mBAC7B,CAAkB,CAAA,QAClB,EAAU,CAAA,CAAA,CAIX,CAAA,CACC,IAAI,EAAW,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAClC,GAAI,CAAC,GAAY,IAAI,CAAC,SAAS,GAC7B,EAAW,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAE,CACxD,mBAsDC,AAtDiD,IAsDlC,EAAqB,KAAA,EAtDa,EAClD,QAAA,CACD,GACD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAoB,GACvC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAoB,GAO9C,IAAI,CAAC,qBAAqB,CAAC,EAAU,GAOjC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAClC,GAAI,CACF,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAC9B,IAAI,CAAC,SAAS,CACd,EACA,EAEH,CAAC,MAAM,EAAA,CAEP,CAIL,OAAO,GAAY,IACpB,CAEO,4BACN,EAAqB,CAAkB,CAAA,QAEvC,AAAI,IAAI,CAAC,SAAS,CACT,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAG,EAAa,EAEhD,CAEV,CAEO,sBAAoB,CAC1B,MACE,CAAC,CAAC,IAAI,CAAC,SAAS,EAChB,AAAgC,aAAhC,IAAI,CAAC,SAAS,CAAC,iBAAiB,AAEnC,CACF,CChXD;;;;;;;;;;;;;;;CAeG,EASU,MAAA,EAGX,YAA6B,CAAY,CAAA,CAAZ,IAAI,CAAA,IAAA,CAAJ,EAFZ,IAAA,CAAA,SAAS,CAAG,IAAI,GAEY,CAW7C,aAA6B,CAAuB,CAAA,CAClD,IAAM,EAAW,IAAI,CAAC,WAAW,CAAC,EAAU,IAAI,EAChD,GAAI,EAAS,cAAc,GACzB,MAAM,AAAI,MACR,CAAA,UAAA,EAAa,EAAU,IAAI,CAAA,kCAAA,EAAqC,IAAI,CAAC,IAAI,CAAA,CAAE,EAI/E,EAAS,YAAY,CAAC,EACvB,CAED,wBAAwC,CAAuB,CAAA,CAEzD,AADa,IAAI,CAAC,WAAW,CAAC,EAAU,IAAI,EACnC,cAAc,IAEzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAU,IAAI,EAGtC,IAAI,CAAC,YAAY,CAAC,EACnB,CASD,YAA4B,CAAO,CAAA,CACjC,GAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GACrB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAI5B,IAAM,EAAW,IAAI,EAAY,EAAM,IAAI,EAG3C,OAFA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAM,GAElB,CACR,CAED,cAAY,CACV,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GACxC,CACF,C2BjFD;;;;;;;;;;;;;;;CAeG,EA0BI,MAAM,EAAsB,EAAE,AAcnC,EADU,EAAA,GAAA,CAAA,EAOX,CAAA,CAAA,EANC,CAAA,EAAA,KAAA,CAAA,EAAA,CAAA,QACA,CAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,UACA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,OACA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,OACA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,CAAA,QACA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,SAGF,MAAM,EAA2D,CAC/D,MAAS,EAAS,KAAK,CACvB,QAAW,EAAS,OAAO,CAC3B,KAAQ,EAAS,IAAI,CACrB,KAAQ,EAAS,IAAI,CACrB,MAAS,EAAS,KAAK,CACvB,OAAU,EAAS,MAAM,AAC1B,EAKK,EAA4B,EAAS,IAAI,CAmBzC,EAAgB,CACpB,CAAC,EAAS,KAAK,CAAA,CAAG,MAClB,CAAC,EAAS,OAAO,CAAA,CAAG,MACpB,CAAC,EAAS,IAAI,CAAA,CAAG,OACjB,CAAC,EAAS,IAAI,CAAA,CAAG,OACjB,CAAC,EAAS,KAAK,CAAA,CAAG,OACnB,EAOK,EAAgC,CAAC,EAAU,EAAS,GAAG,KAC3D,GAAI,EAAU,EAAS,QAAQ,CAC7B,OAEF,IAAM,EAAM,IAAI,OAAO,WAAW,GAC5B,EAAS,CAAa,CAAC,EAAsC,CACnE,GAAI,EACF,OAAO,CAAC,EAA4C,CAClD,CAAA,CAAA,EAAI,EAAG,GAAA,EAAM,EAAS,IAAI,CAAG,CAAA,CAAA,IAC1B,QAGL,MAAM,AAAI,MACR,CAAA,2DAAA,EAA8D,EAAO,CAAA,CAAG,CAG9E,EE3HM,EAAgB,CAAC,EAAQ,IAAiB,EAAa,IAAI,CAAC,AAAC,GAAM,aAAkB,GAwBrF,EAAmB,IAAI,QACvB,EAAqB,IAAI,QACzB,EAA2B,IAAI,QAC/B,EAAiB,IAAI,QACrB,GAAwB,IAAI,QA0DlC,IAAI,GAAgB,CAChB,IAAI,CAAM,CAAE,CAAI,CAAE,CAAQ,EACtB,GAAI,aAAkB,eAAgB,CAElC,GAAI,AAAS,SAAT,EACA,OAAO,EAAmB,GAAG,CAAC,GAElC,GAAI,AAAS,qBAAT,EACA,OAAO,EAAO,gBAAgB,EAAI,EAAyB,GAAG,CAAC,GAGnE,GAAI,AAAS,UAAT,EACA,OAAO,EAAS,gBAAgB,CAAC,EAAE,CAC7B,KAAA,EACA,EAAS,WAAW,CAAC,EAAS,gBAAgB,CAAC,EAAE,CAE/D,CAEA,OAAO,GAAK,CAAM,CAAC,EAAK,CAC5B,EACA,IAAA,CAAI,EAAQ,EAAM,KACd,CAAM,CAAC,EAAK,CAAG,EACR,CAAA,GAEX,IAAA,CAAI,EAAQ,IACR,AAAI,aAAkB,gBACjB,CAAA,AAAS,SAAT,GAAmB,AAAS,UAAT,CAAS,GAG1B,KAAQ,CAEvB,EA+CA,SAAS,GAAK,CAAK,MAZa,EAe5B,GAAI,aAAiB,WACjB,OAAO,AA3If,SAA0B,CAAO,EAC7B,IAAM,EAAU,IAAI,QAAQ,CAAC,EAAS,KAClC,IAAM,EAAW,KACb,EAAQ,mBAAmB,CAAC,UAAW,GACvC,EAAQ,mBAAmB,CAAC,QAAS,EACzC,EACM,EAAU,KACZ,EAAQ,GAAK,EAAQ,MAAM,GAC3B,GACJ,EACM,EAAQ,KACV,EAAO,EAAQ,KAAK,EACpB,GACJ,EACA,EAAQ,gBAAgB,CAAC,UAAW,GACpC,EAAQ,gBAAgB,CAAC,QAAS,EACtC,GAcA,OAbA,EACK,IAAI,CAAC,AAAC,IAGH,aAAiB,WACjB,EAAiB,GAAG,CAAC,EAAO,EAGpC,GACK,KAAK,CAAC,KAAQ,GAGnB,GAAsB,GAAG,CAAC,EAAS,GAC5B,CACX,EA4GgC,GAG5B,GAAI,EAAe,GAAG,CAAC,GACnB,OAAO,EAAe,GAAG,CAAC,GAC9B,IAAM,EApBN,AAAI,AAAiB,YAAjB,OADwB,EAqBY,GAhDxC,AAAI,AA6BoB,IA7BX,YAAY,SAAS,CAAC,WAAW,EACxC,qBAAsB,eAAe,SAAQ,CAY/C,AAzHI,CAAA,GACH,CAAA,EAAuB,CACpB,UAAU,SAAS,CAAC,OAAO,CAC3B,UAAU,SAAS,CAAC,QAAQ,CAC5B,UAAU,SAAS,CAAC,kBAAkB,CAC1C,AAAC,CAAD,EAoH0B,QAAQ,CAgBd,GAfb,SAAU,GAAG,CAAI,EAIpB,OADA,AAYgB,EAZX,KAAK,CAAC,GAAO,IAAI,EAAG,GAClB,GAAK,EAAiB,GAAG,CAAC,IAAI,EACzC,EAEG,SAAU,GAAG,CAAI,EAGpB,OAAO,GAAK,AAKQ,EALH,KAAK,CAAC,GAAO,IAAI,EAAG,GACzC,EAvBW,SAAU,CAAU,CAAE,GAAG,CAAI,EAChC,IAAM,EAAK,AA0BK,EA1BA,IAAI,CAAC,GAAO,IAAI,EAAG,KAAe,GAElD,OADA,EAAyB,GAAG,CAAC,EAAI,EAAW,IAAI,CAAG,EAAW,IAAI,GAAK,CAAC,EAAW,EAC5E,GAAK,EAChB,EA4BJ,CAFI,aAAiB,gBACjB,AAjGR,SAAwC,CAAE,EAEtC,GAAI,EAAmB,GAAG,CAAC,GACvB,OACJ,IAAM,EAAO,IAAI,QAAQ,CAAC,EAAS,KAC/B,IAAM,EAAW,KACb,EAAG,mBAAmB,CAAC,WAAY,GACnC,EAAG,mBAAmB,CAAC,QAAS,GAChC,EAAG,mBAAmB,CAAC,QAAS,EACpC,EACM,EAAW,KACb,IACA,GACJ,EACM,EAAQ,KACV,EAAO,EAAG,KAAK,EAAI,IAAI,aAAa,aAAc,eAClD,GACJ,EACA,EAAG,gBAAgB,CAAC,WAAY,GAChC,EAAG,gBAAgB,CAAC,QAAS,GAC7B,EAAG,gBAAgB,CAAC,QAAS,EACjC,GAEA,EAAmB,GAAG,CAAC,EAAI,EAC/B,EAyEuC,GAC/B,EAAc,EAzJV,GACH,CAAA,EAAoB,CACjB,YACA,eACA,SACA,UACA,eACJ,AAAC,IAmJM,IAAI,MAAM,EAAO,IAErB,EAkBP,OAJI,IAAa,IACb,EAAe,GAAG,CAAC,EAAO,GAC1B,GAAsB,GAAG,CAAC,EAAU,IAEjC,CACX,CACA,MAAM,GAAS,AAAC,GAAU,GAAsB,GAAG,CAAC,GDrI9C,GAAc,CAAC,MAAO,SAAU,SAAU,aAAc,QAAQ,CAChE,GAAe,CAAC,MAAO,MAAO,SAAU,QAAQ,CAChD,GAAgB,IAAI,IAC1B,SAAS,GAAU,CAAM,CAAE,CAAI,EAC3B,GAAI,CAAE,CAAA,aAAkB,aACpB,CAAE,CAAA,KAAQ,CAAA,GACV,AAAgB,UAAhB,OAAO,CAAS,EAChB,OAEJ,GAAI,GAAc,GAAG,CAAC,GAClB,OAAO,GAAc,GAAG,CAAC,GAC7B,IAAM,EAAiB,EAAK,OAAO,CAAC,aAAc,IAC5C,EAAW,IAAS,EACpB,EAAU,GAAa,QAAQ,CAAC,GACtC,GAEA,CAAE,CAAA,IAAmB,AAAA,CAAA,EAAW,SAAW,cAAA,EAAgB,SAAS,AAAT,GACvD,CAAE,CAAA,GAAW,GAAY,QAAQ,CAAC,EAAA,EAClC,OAEJ,IAAM,EAAS,eAAgB,CAAS,CAAE,GAAG,CAAI,EAE7C,IAAM,EAAK,IAAI,CAAC,WAAW,CAAC,EAAW,EAAU,YAAc,YAC3D,EAAS,EAAG,KAAK,CAQrB,OAPI,GACA,CAAA,EAAS,EAAO,KAAK,CAAC,EAAK,KAAK,GADpC,EAOQ,AAAA,CAAA,MAAM,QAAQ,GAAG,CAAC,CACtB,CAAM,CAAC,EAAe,IAAI,GAC1B,GAAW,EAAG,IAAI,CACrB,CAAA,CAAE,CAAC,EAAE,AACV,EAEA,OADA,GAAc,GAAG,CAAC,EAAM,GACjB,CACX,CCgCI,GD/BwB,IAAd,EC+Be,ED9BzB,CACA,IAAK,CAAC,EAAQ,EAAM,IAAa,GAAU,EAAQ,IAAS,EAAS,GAAG,CAAC,EAAQ,EAAM,GACvF,IAAK,CAAC,EAAQ,IAAS,CAAC,CAAC,GAAU,EAAQ,IAAS,EAAS,GAAG,CAAC,EAAQ,EAC7E,C5C5FA;;;;;;;;;;;;;;;CAeG,EAUU,MAAA,GACX,YAA6B,CAA6B,CAAA,CAA7B,IAAS,CAAA,SAAA,CAAT,CAAiC,CAG9D,uBAAqB,CAInB,OAAO,AAHW,IAAI,CAAC,SAAS,CAAC,YAAY,GAI1C,GAAG,CAAC,AAAA,IACH,IAAI,AAmBZ,SAAkC,CAAwB,EACxD,IAAM,EAAY,EAAS,YAAY,GACvC,MAAO,AAAA,CAAA,MAAA,EAAS,KAAA,EAAT,EAAW,IAAA,AAAA,IAAI,SACxB,EAtBqC,GAI3B,OAAO,IAJ+B,EACtC,IAAM,EAAU,EAAS,YAAY,GACrC,MAAO,CAAA,EAAG,EAAQ,OAAO,CAAA,CAAA,EAAI,EAAQ,OAAO,CAAA,CAAE,AAC/C,CAGH,GACC,MAAM,CAAC,AAAA,GAAa,GACpB,IAAI,CAAC,IACT,CACF,C,M,G,gB,G,SC1BY,GAAS,I0C0GT,MAOX,YAAmB,CAAY,CAAA,CAAZ,IAAI,CAAA,IAAA,CAAJ,EAUX,IAAS,CAAA,SAAA,CAAG,EAsBZ,IAAW,CAAA,WAAA,CAAe,EAc1B,IAAe,CAAA,eAAA,CAAsB,KA1C3C,EAAU,IAAI,CAAC,IAAI,CACpB,CAOD,IAAI,UAAQ,CACV,OAAO,IAAI,CAAC,SAAS,AACtB,CAED,IAAI,SAAS,CAAa,CAAA,CACxB,GAAI,CAAE,CAAA,KAAO,CAAA,EACX,MAAM,AAAI,UAAU,CAAA,eAAA,EAAkB,EAAG,0BAAA,CAA4B,CAEvE,CAAA,IAAI,CAAC,SAAS,CAAG,CAClB,CAGD,YAAY,CAA8B,CAAA,CACxC,IAAI,CAAC,SAAS,CAAG,AAAe,UAAf,OAAO,EAAmB,CAAiB,CAAC,EAAI,CAAG,CACrE,CAOD,IAAI,YAAU,CACZ,OAAO,IAAI,CAAC,WAAW,AACxB,CACD,IAAI,WAAW,CAAe,CAAA,CAC5B,GAAI,AAAe,YAAf,OAAO,EACT,MAAM,AAAI,UAAU,oDAEtB,CAAA,IAAI,CAAC,WAAW,CAAG,CACpB,CAMD,IAAI,gBAAc,CAChB,OAAO,IAAI,CAAC,eAAe,AAC5B,CACD,IAAI,eAAe,CAAsB,CAAA,CACvC,IAAI,CAAC,eAAe,CAAG,CACxB,CAMD,MAAM,GAAG,CAAe,CAAA,CACtB,IAAI,CAAC,eAAe,EAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,EAAS,KAAK,IAAK,GACtE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,EAAS,KAAK,IAAK,EAC3C,CACD,IAAI,GAAG,CAAe,CAAA,CACpB,IAAI,CAAC,eAAe,EAClB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,EAAS,OAAO,IAAK,GAClD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,EAAS,OAAO,IAAK,EAC7C,CACD,KAAK,GAAG,CAAe,CAAA,CACrB,IAAI,CAAC,eAAe,EAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,EAAS,IAAI,IAAK,GACrE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,EAAS,IAAI,IAAK,EAC1C,CACD,KAAK,GAAG,CAAe,CAAA,CACrB,IAAI,CAAC,eAAe,EAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,EAAS,IAAI,IAAK,GACrE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,EAAS,IAAI,IAAK,EAC1C,CACD,MAAM,GAAG,CAAe,CAAA,CACtB,IAAI,CAAC,eAAe,EAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,EAAS,KAAK,IAAK,GACtE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,EAAS,KAAK,IAAK,EAC3C,CACF,E1ChMgC,iBC+BpB,GAAsB,CACjC,CAAC9Q,GAAO,CAAG,Y,uBACM,mB,sBACA,iB,6BACM,wB,sBACP,iB,6BACM,wB,iBACV,Y,wBACM,mB,qBACF,Y,4BACM,mB,sBACL,U,6BACM,iB,0BACF,W,iCACM,kB,sBACV,W,6BACM,kB,wBACJ,Y,+BACM,mB,0BACL,U,iCACM,iB,oBACX,W,2BACM,kB,sBACJ,W,6BACM,kBACvB,UAAW,U,SACI,aACP,EC9CG,GAAQ,IAAI,IAKZ,GAAc,IAAI,IAQlB,GAAc,IAAI,IAOf,SAAA,GACd,CAAgB,CAChB,CAAuB,EAEvB,GAAI,CACD,EAAwB,SAAS,CAAC,YAAY,CAAC,EACjD,CAAC,MAAO,EAAG,CACV,GAAO,KAAK,CACV,CAAA,UAAA,EAAa,EAAU,IAAI,CAAwC,qCAAA,EAAA,EAAI,IAAI,CAAA,CAAE,CAC7E,EAEH,CACH,CAoBM,SAAU,GACd,CAAuB,EAEvB,IAAM,EAAgB,EAAU,IAAI,CACpC,GAAI,GAAY,GAAG,CAAC,GAKlB,OAJA,GAAO,KAAK,CACV,CAAA,mDAAA,EAAsD,EAAa,CAAA,CAAG,EAGjE,CAAA,EAMT,IAAK,IAAM,KAHX,GAAY,GAAG,CAAC,EAAe,GAGb,GAAM,MAAM,IAC5B,GAAc,EAAwB,GAGxC,IAAK,IAAM,KAAa,GAAY,MAAM,GACxC,GAAc,EAAoC,GAGpD,MAAO,CAAA,CACT,CC5BO,MAAM,GAAgB,IAAI,EAC/B,MACA,WA7CiC,CACjC,SACE,6EAEF,eAAyB,iCACzB,gBACE,kFACF,cAAwB,kDACxB,qBAA+B,uCAC/B,aACE,0EACF,uBACE,6EAEF,uBACE,wDACF,WACE,gFACF,UACE,qFACF,UACE,mFACF,aACE,sFACF,sCACE,0GACF,iCACE,2DACH,EChED;;;;;;;;;;;;;;;CAeG,EAcU,MAAA,GAcX,YACE,CAAwB,CACxB,CAAqC,CACrC,CAA6B,CAAA,CANrB,IAAU,CAAA,UAAA,CAAG,CAAA,EAQrB,IAAI,CAAC,QAAQ,CAAQ,OAAA,MAAA,CAAA,CAAA,EAAA,GACrB,IAAI,CAAC,OAAO,CAAQ,OAAA,MAAA,CAAA,CAAA,EAAA,GACpB,IAAI,CAAC,KAAK,CAAG,EAAO,IAAI,CACxB,IAAI,CAAC,+BAA+B,CAClC,EAAO,8BAA8B,CACvC,IAAI,CAAC,UAAU,CAAG,EAClB,IAAI,CAAC,SAAS,CAAC,YAAY,CACzB,IAAI,EAAU,MAAO,IAAM,IAAI,CAAA,UAElC,CAED,IAAI,gCAA8B,CAEhC,OADA,IAAI,CAAC,cAAc,GACZ,IAAI,CAAC,+BAA+B,AAC5C,CAED,IAAI,+BAA+B,CAAY,CAAA,CAC7C,IAAI,CAAC,cAAc,GACnB,IAAI,CAAC,+BAA+B,CAAG,CACxC,CAED,IAAI,MAAI,CAEN,OADA,IAAI,CAAC,cAAc,GACZ,IAAI,CAAC,KAAK,AAClB,CAED,IAAI,SAAO,CAET,OADA,IAAI,CAAC,cAAc,GACZ,IAAI,CAAC,QAAQ,AACrB,CAED,IAAI,QAAM,CAER,OADA,IAAI,CAAC,cAAc,GACZ,IAAI,CAAC,OAAO,AACpB,CAED,IAAI,WAAS,CACX,OAAO,IAAI,CAAC,UAAU,AACvB,CAED,IAAI,WAAS,CACX,OAAO,IAAI,CAAC,UAAU,AACvB,CAED,IAAI,UAAU,CAAY,CAAA,CACxB,IAAI,CAAC,UAAU,CAAG,CACnB,CAMS,gBAAc,CACtB,GAAI,IAAI,CAAC,SAAS,CAChB,MAAM,GAAc,MAAM,CAAA,cAAuB,CAAE,QAAS,IAAI,CAAC,KAAK,AAAA,EAEzE,CACF,CEuSe,SAAA,GACd,CAAwB,CACxB,CAAe,CACf,CAAgB,E,I,EAIhB,IAAI,EAAU,AAAyC,OAAzC,CAAA,EAAA,EAAmB,CAAC,EAAiB,AAAjB,GAAqB,AAAA,KAAA,IAAA,EAAA,EAAA,EACnD,GACF,CAAA,GAAW,CAAA,CAAA,EAAI,EAAO,CAAE,AAAF,EAExB,IAAM,EAAkB,EAAQ,KAAK,CAAC,SAChC,EAAkB,EAAQ,KAAK,CAAC,SACtC,GAAI,GAAmB,EAAiB,CACtC,IAAM,EAAU,CACd,CAA+B,4BAAA,EAAA,EAA0B,gBAAA,EAAA,EAAW,EAAA,CAAA,CACrE,CACG,GACF,EAAQ,IAAI,CACV,CAAA,cAAA,EAAiB,EAAO,iDAAA,CAAmD,EAG3E,GAAmB,GACrB,EAAQ,IAAI,CAAC,OAEX,GACF,EAAQ,IAAI,CACV,CAAA,cAAA,EAAiB,EAAO,iDAAA,CAAmD,EAG/E,GAAO,IAAI,CAAC,EAAQ,IAAI,CAAC,MACzB,MACD,CACD,GACE,IAAI,EACF,CAAA,EAAG,EAAO,QAAA,CAAkB,CAC5B,IAAO,CAAA,CAAE,QAAA,EAAS,QAAA,CAAO,CAAA,EAAG,WAIlC,CC9ZA,MAAM,GAAa,2BASnB,IAAI,GAAiD,KACrD,SAAS,KA2BP,OA1BK,IACH,CAAA,GAAY,AoC5BhB,CAAA,SAAgB,CAAI,CAAE,CAAO,CAAE,CAAA,QAAE,CAAO,CAAA,QAAE,CAAO,CAAA,SAAE,CAAQ,CAAA,WAAE,CAAU,CAAE,CAAG,CAAC,CAAC,EAC1E,IAAM,EAAU,UAAU,IAAI,CAAC,EpCchB,GoCbT,EAAc,AAAA,GAAK,GAoBzB,OAnBI,GACA,EAAQ,gBAAgB,CAAC,gBAAiB,AAAC,IACvC,EAAQ,AAAA,GAAK,EAAQ,MAAM,EAAG,EAAM,UAAU,CAAE,EAAM,UAAU,CAAE,AAAA,GAAK,EAAQ,WAAW,EAAG,EACjG,GAEA,GACA,EAAQ,gBAAgB,CAAC,UAAW,AAAC,GAAU,EAE/C,EAAM,UAAU,CAAE,EAAM,UAAU,CAAE,IAExC,EACK,IAAI,CAAC,AAAC,IACH,GACA,EAAG,gBAAgB,CAAC,QAAS,IAAM,KACnC,GACA,EAAG,gBAAgB,CAAC,gBAAiB,AAAC,GAAU,EAAS,EAAM,UAAU,CAAE,EAAM,UAAU,CAAE,GAErG,GACK,KAAK,CAAC,KAAQ,GACZ,CACX,CAAA,EpCTgB,8BACG,EAagC,CAC7C,QAAS,CAAC,EAAI,KAMZ,GACO,IADC,EAEJ,GAAI,CACF,EAAG,iBAAiB,CAAC,GACtB,CAAC,MAAO,EAAG,CAIV,QAAQ,IAAI,CAAC,EACd,CAEN,CACF,GAAE,KAAK,CAAC,AAAA,IACP,MAAM,GAAc,MAAM,CAAoB,WAAA,CAC5C,qBAAsB,EAAE,OAAO,AAChC,EACH,EAAA,EAEK,EACT,CAEO,eAAe,GACpB,CAAgB,EAEhB,GAAI,CAEF,IAAM,EAAK,AADA,CAAA,MAAM,IAAjB,EACc,WAAW,CAAC,IACpB,EAAS,MAAM,EAAG,WAAW,CAAC,IAAY,GAAG,CAAC,GAAW,IAI/D,OADA,MAAM,EAAG,IAAI,CACN,CACR,CAAC,MAAO,EAAG,CACV,GAAI,aAAa,EACf,GAAO,IAAI,CAAC,EAAE,OAAO,MAChB,CACL,IAAM,EAAc,GAAc,MAAM,CAAmB,UAAA,CACzD,qBAAuB,MAAA,EAAA,KAAA,EAAA,EAAa,OAAO,AAC5C,GACD,GAAO,IAAI,CAAC,EAAY,OAAO,CAChC,CACF,CACH,CAEO,eAAe,GACpB,CAAgB,CAChB,CAAsC,EAEtC,GAAI,CAEF,IAAM,EAAK,AADA,CAAA,MAAM,IAAjB,EACc,WAAW,CAAC,GAAY,aAChC,EAAc,EAAG,WAAW,CAAC,GACnC,OAAM,EAAY,GAAG,CAAC,EAAiB,GAAW,IAClD,MAAM,EAAG,IAAI,AACd,CAAC,MAAO,EAAG,CACV,GAAI,aAAa,EACf,GAAO,IAAI,CAAC,EAAE,OAAO,MAChB,CACL,IAAM,EAAc,GAAc,MAAM,CAAqB,UAAA,CAC3D,qBAAuB,MAAA,EAAA,KAAA,EAAA,EAAa,OAAO,AAC5C,GACD,GAAO,IAAI,CAAC,EAAY,OAAO,CAChC,CACF,CACH,CAEA,SAAS,GAAW,CAAgB,EAClC,MAAO,CAAA,EAAG,EAAI,IAAI,CAAA,CAAA,EAAI,EAAI,OAAO,CAAC,KAAK,CAAA,CAAE,AAC3C,CCzEa,MAAA,GAyBX,YAA6B,CAA6B,CAAA,CAA7B,IAAS,CAAA,SAAA,CAAT,EAT7B,IAAgB,CAAA,gBAAA,CAAiC,KAU/C,IAAM,EAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,YAAY,EAC1D,CAAA,IAAI,CAAC,QAAQ,CAAG,IAAI,GAAqB,GACzC,IAAI,CAAC,uBAAuB,CAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,AAAA,IACvD,IAAI,CAAC,gBAAgB,CAAG,EACjB,GAEV,CASD,MAAM,kBAAgB,C,I,E,EAOpB,IAAM,EAAQ,AANS,IAAI,CAAC,SAAS,CAClC,WAAW,CAAC,mBACZ,YAAY,GAIc,qBAAqB,GAC5C,EAAO,WACb,AAAI,AAAA,CAAA,AAAuB,OAAvB,CAAA,EAAA,IAAI,CAAC,gBAAA,AAAA,GAAkB,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAA,UAAA,AAAA,GAAc,OACvC,IAAI,CAAC,gBAAgB,CAAG,MAAM,IAAI,CAAC,uBAAuB,CAEtD,AAAA,CAAA,AAAuB,OAAvB,CAAA,EAAA,IAAI,CAAC,gBAAA,AAAA,GAAkB,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAA,UAAA,AAAA,GAAc,MACvC,KAAA,EAMF,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,GAAK,GAChD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CACnC,AAAA,GAAuB,EAAoB,IAAI,GAAK,GAGtD,KAAA,GAGA,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAE,KAAA,EAAM,MAAA,CAAK,GAGrD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,MAAM,CACxE,AAAA,IACE,IAAM,EAAc,IAAI,KAAK,EAAoB,IAAI,EAAE,OAAO,GAE9D,OAAO,AADK,KAAK,GAAG,GACP,GA7EyB,MA8ExC,GAEK,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,EACrD,CASD,MAAM,qBAAmB,C,I,EAKvB,GAJ8B,OAA1B,IAAI,CAAC,gBAAgB,EACvB,MAAM,IAAI,CAAC,uBAAuB,CAIlC,AAAA,CAAA,AAAuB,OAAvB,CAAA,EAAA,IAAI,CAAC,gBAAA,AAAA,GAAkB,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAA,UAAU,AAAV,GAAc,MACrC,AAA4C,IAA5C,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,MAAM,CAEvC,MAAO,GAET,IAAM,EAAO,KAEP,CAAA,iBAAE,CAAgB,CAAA,cAAE,CAAa,CAAE,CAAG,AA8BhC,SACd,CAAsC,CACtC,EAzIuB,IAyIG,EAO1B,IAAM,EAA4C,EAAE,CAEhD,EAAgB,EAAgB,KAAK,GACzC,IAAK,IAAM,KAAuB,EAAiB,CAEjD,IAAM,EAAiB,EAAiB,IAAI,CAC1C,AAAA,GAAM,EAAG,KAAK,GAAK,EAAoB,KAAK,EAE9C,GAAK,EAgBH,CAAA,GAHA,EAAe,KAAK,CAAC,IAAI,CAAC,EAAoB,IAAI,EAG9C,GAAW,GAAoB,EAAS,CAC1C,EAAe,KAAK,CAAC,GAAG,GACxB,KACD,CAAA,MAbD,GAJA,EAAiB,IAAI,CAAC,CACpB,MAAO,EAAoB,KAAK,CAChC,MAAO,CAAC,EAAoB,IAAI,CAAC,AAClC,GACG,GAAW,GAAoB,EAAS,CAG1C,EAAiB,GAAG,GACpB,KACD,CAYH,EAAgB,EAAc,KAAK,CAAC,EACrC,CACD,MAAO,CACL,iBAAA,EACA,cAAA,CACD,CACH,EA3EM,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAE5B,EAAe,AAAA,EACnB,KAAK,SAAS,CAAC,CAAE,QAAS,EAAG,WAAY,CAAgB,IAgB3D,OAbA,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAG,EAC1C,EAAc,MAAM,CAAG,GAEzB,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAG,EAInC,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,IAEnD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAG,EAAE,CAEhC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,GAE7C,CACR,CACF,CAED,SAAS,KAGP,OAAO,AAFO,IAAI,OAEL,WAAW,GAAG,SAAS,CAAC,EAAG,GAC1C,CAkDa,MAAA,GAEX,YAAmB,CAAgB,CAAA,CAAhB,IAAG,CAAA,GAAA,CAAH,EACjB,IAAI,CAAC,uBAAuB,CAAG,IAAI,CAAC,4BAA4B,EACjE,CACD,MAAM,8BAA4B,OAChC,CAAI,CAAC,AiB3EO,WACd,GAAI,CACF,MAAO,AAAqB,UAArB,OAAO,SACf,CAAC,MAAO,EAAG,CACV,MAAO,CAAA,CACR,CACH,KjBwEa,AiB9DJ,IAAI,QAAQ,CAAC,EAAS,KAC3B,GAAI,CACF,IAAI,EAAoB,CAAA,EAClB,EACJ,0DACI,EAAU,KAAK,SAAS,CAAC,IAAI,CAAC,EACpC,CAAA,EAAQ,SAAS,CAAG,KAClB,EAAQ,MAAM,CAAC,KAAK,GAEf,GACH,KAAK,SAAS,CAAC,cAAc,CAAC,GAEhC,EAAQ,CAAA,EACV,EACA,EAAQ,eAAe,CAAG,KACxB,EAAW,CAAA,CACb,EAEA,EAAQ,OAAO,CAAG,K,I,EAChB,EAAO,AAAA,CAAA,AAAa,OAAb,CAAA,EAAA,EAAQ,KAAK,AAAL,GAAK,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAE,OAAA,AAAA,GAAW,GACnC,CACD,CAAC,MAAO,EAAO,CACd,EAAO,EACR,CACH,GjBuCO,IAAI,CAAC,IAAM,CAAA,GACX,KAAK,CAAC,IAAM,CAAA,EAElB,CAID,MAAM,MAAI,CAER,GAAI,CADoB,MAAM,IAAI,CAAC,uBAAuB,CAExD,MAAO,CAAE,WAAY,EAAE,AAAA,CAClB,EACL,IAAM,EAAqB,MAAM,GAA4B,IAAI,CAAC,GAAG,QACrE,AAAI,CAAA,MAAA,EAAkB,KAAA,EAAlB,EAAoB,UAAU,AAAV,EACf,EAEA,CAAE,WAAY,EAAE,AAAA,CAE1B,CACF,CAED,MAAM,UAAU,CAAuC,CAAA,C,I,EAErD,GADwB,MAAM,IAAI,CAAC,uBAAuB,CAGnD,CACL,IAAM,EAA2B,MAAM,IAAI,CAAC,IAAI,GAChD,OAAO,GAA2B,IAAI,CAAC,GAAG,CAAE,CAC1C,sBACE,AACA,OADA,CAAA,EAAA,EAAiB,qBAAqB,AAArB,GACjB,AAAA,KAAA,IAAA,EAAA,EAAA,EAAyB,qBAAqB,CAChD,WAAY,EAAiB,UAAU,AACxC,EACF,CACF,CAED,MAAM,IAAI,CAAuC,CAAA,C,I,EAE/C,GADwB,MAAM,IAAI,CAAC,uBAAuB,CAGnD,CACL,IAAM,EAA2B,MAAM,IAAI,CAAC,IAAI,GAChD,OAAO,GAA2B,IAAI,CAAC,GAAG,CAAE,CAC1C,sBACE,AACA,OADA,CAAA,EAAA,EAAiB,qBAAqB,AAArB,GACjB,AAAA,KAAA,IAAA,EAAA,EAAA,EAAyB,qBAAqB,CAChD,WAAY,IACP,EAAyB,UAAU,IACnC,EAAiB,UAAU,CAC/B,AACF,EACF,CACF,CACF,CAOK,SAAU,GAAW,CAAwC,EAEjE,OAAO,AAAA,EAEL,KAAK,SAAS,CAAC,CAAE,QAAS,EAAG,WAAY,CAAe,IACxD,MAAM,AACV,CqCnSO,SAAS,KACZ,IAAM,EAA0B,SAAS,cAAc,CAAC,qBAClD,EAAW,SAAS,cAAc,CAAC,cACnC,EAAQ,SAAS,cAAc,CAAC,SAChC,EAAkB,SAAS,cAAc,CAAC,mBAC1C,EAAU,SAAS,cAAc,CAAC,WAClC,EAAiB,SAAS,cAAc,CAAC,kBACzC,EAAgB,SAAS,cAAc,CAAC,iBAGxC,EAAe,AAAA,KACrB,GAAI,EAAc,CACd,IAAM,EAAU,EAAa,EAAE,CAC/B,EAAc,gBAAgB,CAAC,QAAS,KACxC,AAAA,GAAW,GACX,MAAM,mBACN,EACJ,MACI,QAAQ,KAAK,CAAC,mBAmBlB,eAAe,IACX,IAAM,EAAe,AAAA,KACrB,GAAI,EAAc,KASK,EARnB,IAAM,EAAS,EAAa,EAAE,CAQX,EAPC,MAAM,AAAA,GAAoB,GAQlD,EAAe,SAAS,CAAG,GAE3B,EAAY,OAAO,CAAC,AAAA,IAChB,IAAM,EAAU,SAAS,aAAa,CAAC,OACvC,EAAQ,SAAS,CAAC,GAAG,CAAC,QAEtB,IAAM,EAAU,SAAS,aAAa,CAAC,KACvC,CAAA,EAAQ,WAAW,CAAG,EAAK,KAAK,CAEhC,IAAM,EAAY,SAAS,aAAa,CAAC,IACzC,CAAA,EAAU,WAAW,CAAG,EAAK,OAAO,CAEpC,EAAQ,WAAW,CAAC,GACpB,EAAQ,WAAW,CAAC,GAEpB,EAAe,WAAW,CAAC,EAC/B,EAtBA,MACI,QAAQ,KAAK,CAAC,2BAEtB,CAsBA,AA/CA,CAAA,iBACI,IAAM,EAAe,AAAA,KACrB,GAAI,EAAc,CACd,IAAM,EAAS,EAAa,QAAQ,CAC9B,EAAc,MAAM,AAAA,GAAe,EACrC,AAAgB,QAAhB,EACA,EAAS,SAAS,CAAG,EAErB,EAAS,SAAS,CAAG,2BAE7B,MACI,QAAQ,KAAK,CAAC,2BAEpB,CAAA,IAmCF,IAEA,EAAwB,gBAAgB,CAAC,QAAS,KAC9C,EAAM,KAAK,CAAC,OAAO,CAAG,QACtB,EAAwB,KAAK,CAAC,OAAO,CAAG,OACxC,EAAS,SAAS,CAAG,EACzB,GAEA,EAAM,gBAAgB,CAAC,SAAU,MAAO,IACpC,EAAM,cAAc,GACpB,EAAM,KAAK,CAAC,OAAO,CAAG,OACtB,EAAwB,KAAK,CAAC,OAAO,CAAG,QAExC,IAAM,EAAiB,EAAgB,KAAK,AAG5C,OAAM,AAAA,GAAgB,GAEtB,EAAS,SAAS,CAAG,CACzB,GACA,EAAQ,KAAK,CAAC,OAAO,CAAG,QAExB,IAAM,EAAS,SAAS,cAAc,CAAC,UACjC,EAAS,SAAS,cAAc,CAAC,UACjC,EAAS,SAAS,cAAc,CAAC,UACjC,EAAU,SAAS,cAAc,CAAC,WAE5C,SAAS,EAAY,CAAwB,EACzC,EAAM,gBAAgB,CAAC,QAAS,KAC5B,EAAQ,KAAK,CAAC,OAAO,CAAG,MAC5B,EACJ,CACA,EAAW,GACX,EAAW,GACX,EAAW,GACX,EAAW,EACX,ClDjFE,eAAe,GAAU,CAAiB,CAAE,CAAoB,EAG9D,GAAI,CACF,IAAM,EAAW,MAAM,MAHR,2FAIT,EAA4D,MAAM,EAAS,IAAI,GAEjF,EAA+B,KAEnC,IAAK,IAAM,KAAU,EAAW,CAC9B,IAAM,EAAO,CAAS,CAAC,EAAO,CAC9B,GAAI,EAAK,SAAS,GAAK,GAAa,EAAK,YAAY,GAAK,EAAc,CACtE,QAAQ,GAAG,CAAC,+BACZ,EAAe,CAAE,GAAG,CAAI,CAAE,GAAI,CAAO,EACrC,AAmCV,WACE,IAAM,EAAe,SAAS,cAAc,CAAC,aACvC,EAAe,SAAS,cAAc,CAAC,cACzC,GACA,CAAA,EAAY,KAAK,CAAC,OAAO,CAAG,MADhC,EAGI,GACF,CAAA,EAAY,KAAK,CAAC,OAAO,CAAG,MAD9B,CAGF,IA3CU,AA8CV,WACE,IAAM,EAAsB,SAAS,cAAc,CAAC,uBAC9C,EAAO,SAAS,cAAc,CAAC,OACrC,CAAA,EAAoB,KAAK,CAAC,OAAO,CAAG,OAEpC,EAAoB,SAAS,CAAG,GAChC,IAAM,EAAc,aAAa,OAAO,CAAC,oBAEzC,GAAI,EAAa,CAEf,IAAM,EAAmB,SAAS,cAAc,CAAC,GACjD,GAAI,GAAoB,aAA4B,iBAAkB,CAEpE,IAAM,EAAY,SAAS,aAAa,CAAC,MACzC,CAAA,EAAU,GAAG,CAAG,EAAiB,GAAG,CACpC,EAAU,SAAS,CAAC,GAAG,CAAC,UACxB,EAAoB,WAAW,CAAC,GAChC,IAAM,EAAgB,EAAU,SAAS,CAAC,CAAA,GAC1C,EAAK,WAAW,CAAC,EACnB,MACE,QAAQ,KAAK,CAAC,oDAAqD,EAEvE,MACE,QAAQ,KAAK,CAAC,+CAEhB,IAAM,EAAe,aAAa,OAAO,CAAC,gBAE1C,GAAI,EAAc,CAEhB,IAAM,EAAW,KAAK,KAAK,CAAC,GAGtB,EAAkB,SAAS,aAAa,CAAC,MAC/C,CAAA,EAAgB,WAAW,CAAG,EAAS,QAAQ,CAG/C,EAAoB,WAAW,CAAC,EAClC,MACE,QAAQ,KAAK,CAAC,2CAGlB,IAtFU,AAAA,KAEA,aAAa,OAAO,CAAC,eAAgB,KAAK,SAAS,CAAC,IAEpD,MACF,CACF,CACA,MAAM,6BACN,QAAQ,GAAG,CAAC,4BACd,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,6BAA8B,EAC9C,CACF,CAIF,SAAS,KACP,IAAM,EAAW,aAAa,OAAO,CAAC,gBACtC,IAAI,EAUF,OAAO,IAVK,EACZ,IAAM,EAAe,KAAK,KAAK,CAAC,SAEhC,AAAI,OAAQ,EACH,EAGA,IAEX,CAGF,CA0DE,eAAe,GAAW,CAAgB,EAGxC,IAAM,EAAmB,IAAI,QAU7B,OATA,EAAQ,GAAG,CAAC,eAAgB,oBAC5B,EAAQ,GAAG,CAAC,SAAU,oBAQf,MANsB,IAAI,QANX,0FAMkC,CACtD,OAAQ,OACR,QAAS,EACT,KAAM,KAAK,SAAS,CAAC,EACvB,IAGG,IAAI,CAAC,AAAA,IACJ,QAAQ,GAAG,CAAC,gBAAiB,EAC/B,EACJ,CDhGF,eAAe,GAAa,CAAY,CAAE,CAAe,EACvD,IAAM,EAAe,AAAA,KACrB,GAAI,CAAC,EAAc,CACjB,QAAQ,KAAK,CAAC,4BACd,MACF,CAEA,IAAM,EAAS,EAAa,EAAE,AAC9B,CAAA,EAAQ,MAAM,CAAG,EAIjB,IAAM,EAAM,gFAAa,QAAc,CAEjC,EAAmB,IAAI,QAU7B,OATA,EAAQ,GAAG,CAAC,eAAgB,oBAC5B,EAAQ,GAAG,CAAC,SAAU,oBAQf,MANsB,IAAI,QAAQ,EAAK,CAC5C,OAAQ,OACR,QAAS,EACT,KAAM,KAAK,SAAS,CAAC,EACvB,IAGG,IAAI,CAAC,AAAA,IACJ,QAAQ,GAAG,CAAC,kBAAmB,EACjC,EACJ,CAGA,eAAe,GAAY,CAAe,EAExC,IAAM,EAAM,gFAAa,QAAc,CAEjC,EAAM,MAAM,MAAM,GAClB,EAAO,MAAM,EAAI,IAAI,UAE3B,AAAK,EAKmB,OAAO,IAAI,CAAC,GAAM,GAAG,CAAC,AAAA,IAC5C,IAAM,EAAU,CAAI,CAAC,EAAI,CACzB,MAAO,CAAE,GAAG,CAAO,CAAE,SAAU,EAAQ,QAAQ,AAAC,CAClD,IAPE,QAAQ,KAAK,CAAC,CAAC,4BAA4B,EAAE,EAAQ,CAAC,CAAC,EAChD,EAAE,CASb,CA4BA,eAAe,GAAc,CAAiB,CAAE,CAAe,EAE7D,IAAM,EAAM,gFAAa,KAAW,QAAgB,CAE9C,EAAmB,IAAI,QAQ7B,OAPA,EAAQ,GAAG,CAAC,eAAgB,oBAOrB,MALsB,IAAI,QAAQ,EAAK,CAC5C,OAAQ,SACR,QAAS,CACX,IAGG,IAAI,CAAC,AAAA,IACJ,QAAQ,GAAG,CAAC,gBAAiB,EAC/B,EACJ,CAEO,eAAe,GAAgB,CAAmB,EACvD,IAAM,EAAe,AAAA,KACrB,GAAI,CAAC,EAAc,CACjB,QAAQ,KAAK,CAAC,4BACd,MACF,CAEA,IAAM,EAAS,EAAa,QAAQ,CAG9B,EAAM,sFAAmB,oBAAyB,CAElD,EAAmB,IAAI,QAU7B,OATA,EAAQ,GAAG,CAAC,eAAgB,oBAC5B,EAAQ,GAAG,CAAC,SAAU,oBAQf,MANsB,IAAI,QAAQ,EAAK,CAC5C,OAAQ,MACR,QAAS,EACT,KAAM,KAAK,SAAS,CAAC,CAAE,YAAa,CAAY,EAClD,IAGG,IAAI,CAAC,AAAA,IACJ,QAAQ,GAAG,CAAC,sBAAuB,EACrC,EACJ,CAIO,eAAe,GAAe,CAAc,EAEjD,IAAM,EAAM,sFAAmB,oBAAyB,CAExD,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,GACvB,EAAO,MAAM,EAAS,IAAI,GAEhC,GAAI,AAAS,OAAT,GAAiB,gBAAiB,EACpC,OAAO,EAAK,WAAW,CAEvB,OAAO,IAEX,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,+BAAgC,GACvC,IACT,CACF,CAEA,eAAe,KAEb,IAAM,EAAsB,EAAE,CAE9B,GAAI,CACF,IAAM,EAAW,MAAM,MAJR,2FAKT,EAA2C,MAAM,EAAS,IAAI,GAEpE,IAAK,IAAM,KAAU,EAAW,CAC9B,IAAM,EAAO,CAAS,CAAC,EAAO,CAC9B,EAAU,IAAI,CAAC,EAAK,QAAQ,CAC9B,CAEA,OAAO,CACT,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,6BAA8B,GACrC,EAAE,AACX,CACF,CAEA,eAAe,GAAW,CAAc,EACtC,IAAM,EAAgB,CAAC,mFAAmF,EAAE,EAAO,KAAK,CAAC,CAEnH,EAAmB,IAAI,QAC7B,EAAQ,GAAG,CAAC,eAAgB,oBAC5B,EAAQ,GAAG,CAAC,SAAU,oBAEtB,IAAM,EAAuB,IAAI,QAAQ,EAAe,CACtD,OAAQ,SACR,QAAS,CACX,GAEA,GAAI,CAEE,AADa,CAAA,MAAM,MAAM,EAA7B,EACa,EAAE,CACb,QAAQ,GAAG,CAAC,CAAC,aAAa,EAAE,EAAO,sBAAsB,CAAC,EAE1D,QAAQ,KAAK,CAAC,CAAC,8BAA8B,EAAE,EAAO,CAAC,CAAC,CAE5D,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,uBAAwB,EACxC,CACF,CetNE,GACE,IAAI,EACF,kBACA,AAAA,GAAa,IAAI,GAA0B,GAAU,YAIzD,GACE,IAAI,EACF,YACA,AAAA,GAAa,IAAI,GAAqB,GAAU,YAMpD,GAAgBrT,GAAMZ,GCXD,IDarB,GAAgBY,GAAMZ,GAAS,WAE/B,GAAgB,UAAW,IZ1B7B,AAAA,G,W,UAA+B,OFDnB,AW6GI,SACd,CAA0B,CAC1B,EAAY,CAAA,CAAE,EAEd,IAAI,EAAU,CAEW,CAAA,UAArB,OAAO,GAET,CAAA,EAAY,CAAE,KADD,CACK,CAAA,EAGpB,IAAM,EAAM,OAAA,MAAA,CAAA,CACV,KL3F8B,YK4F9B,+BAAgC,CAAA,CAAK,EAClC,GAEC,EAAO,EAAO,IAAI,CAExB,GAAI,AAAgB,UAAhB,OAAO,GAAqB,CAAC,EAC/B,MAAM,GAAc,MAAM,CAAwB,eAAA,CAChD,QAAS,OAAO,EACjB,GAKH,GAFA,GAAA,CAAA,EAAY,AAAA,GAAA,EAER,CAAC,EACH,MAAM,GAAc,MAAM,CAAA,cAG5B,IAAM,EAAc,GAAM,GAAG,CAAC,GAC9B,GAAI,EAAa,CAEf,GACE,AAAA,EAAU,EAAS,EAAY,OAAO,GACtC,AAAA,EAAU,EAAQ,EAAY,MAAM,EAEpC,MAEA,OAAM,GAAc,MAAM,CAAyB,gBAAA,CAAE,QAAS,CAAI,EAErE,CAED,IAAM,EAAY,IAAI,EAAmB,GACzC,IAAK,IAAM,KAAa,GAAY,MAAM,GACxC,EAAU,YAAY,CAAC,GAGzB,IAAM,EAAS,IAAI,GAAgB,EAAS,EAAQ,GAEpD,GAAM,GAAG,CAAC,EAAM,EAGlB,EX7KuB,CACrB,OAAQ,0CACR,WAAY,wCACZ,YAAa,+EACb,UAAW,wBACX,cAAe,oCACf,kBAAmB,gBACnB,MAAO,6CACP,cAAe,cACjB,GA2JA,SAAS,gBAAgB,CAAC,yBAAyB,OAAO,CAAC,AAAA,IACzD,EAAI,gBAAgB,CAAC,QAAS,KAE5B,SAAS,gBAAgB,CAAC,yBAAyB,OAAO,CAAC,AAAA,IACzD,EAAI,SAAS,CAAC,MAAM,CAAC,SACvB,GAEA,EAAI,SAAS,CAAC,GAAG,CAAC,UAElB,aAAa,OAAO,CAAC,mBAAoB,EAAI,EAAE,CACjD,EACF,G,I,G,C,EmDtLA,GAAiB,IAAA,IAAoB,oCAAA,YAAA,GAAA,EAAqC,QAAQ,G,I,G,C,ECAlF,GAAiB,IAAA,IAAoB,qCAAA,YAAA,GAAA,EAAsC,QAAQ,G,I,G,C,ECAnF,GAAiB,IAAA,IAAoB,oCAAA,YAAA,GAAA,EAAqC,QAAQ,GvDMlF,IAAI,GAA6B,KAC7B,GAAe,AAAA,KAEZ,eAAe,GAAY,CAAe,EAC7C,IAAM,EAAiB,SAAS,cAAc,CAAC,CAAC,EAAE,EAAQ,SAAS,CAAC,EACpE,GAAI,CAAC,GAED,KAAgB,EAFC,MAIrB,CAAA,EAAe,SAAS,CAAG,GAE3B,IAAM,EAAW,MAAM,AAAA,GAAY,GAE7B,EAAY,CAAC;kBACL,EAAE,EAAQ;;;;;;eAMb,CAAC,CAEZ,EAAe,kBAAkB,CAAC,cAAe,GAEjD,GAAc,EAEV,EAAS,MAAM,CAAG,GAClB,EAAS,OAAO,CAAC,AAAA,GAAW,GAAgB,EAAS,EAAgB,IAGzE,IAAM,EAAO,SAAS,cAAc,CAAC,CAAC,EAAE,EAAQ,IAAI,CAAC,EAErD,GAAM,iBAAiB,SAAU,MAAO,IACpC,EAAM,cAAc,GAEpB,IAAM,EAAa,EAAK,aAAa,CAAC,uBAChC,EAAe,EAAK,aAAa,CAAC,4BAClC,EAAQ,EAAW,KAAK,CACxB,EAAU,EAAa,KAAK,CAC5B,EAAW,GAAe,GAAa,QAAQ,CAAG,QAGlD,EAAkB,CACpB,OAHW,GAAe,GAAa,EAAE,CAAE,GAI3C,SAAU,EACV,MAAO,EACP,QAAS,EACT,UAAW,EACf,CAYA,OAAM,AAAA,GAAa,EAAY,GAE/B,EAAW,KAAK,CAAG,GACnB,EAAa,KAAK,CAAG,GAErB,GAAgB,EAAY,EAAgB,EAChD,EACJ,CAEO,eAAe,GAAa,CAAe,EAC9C,IAAM,EAAW,MAAM,AAAA,GAAY,GAC7B,EAAY,SAAS,cAAc,CAAC,CAAC,EAAE,EAAQ,SAAS,CAAC,EAC3D,IAGA,AADsB,CAAC,SAAU,SAAU,SAAS,CAAC,MAAM,CAAC,AAAA,GAAM,IAAO,GAC3D,OAAO,CAAC,AAAA,IAClB,IAAM,EAAiB,SAAS,cAAc,CAAC,CAAC,EAAE,EAAG,SAAS,CAAC,EAC3D,GACA,CAAA,EAAe,SAAS,CAAG,EAD/B,CAGJ,GAEA,EAAU,SAAS,CAAG,GACtB,EAAS,OAAO,CAAC,AAAA,GAAW,GAAgB,EAAS,EAAW,IAExE,CAMA,SAAS,GAAgB,CAAY,CAAE,CAAsB,CAAE,CAAe,EAC1E,IAAM,EAAa,SAAS,aAAa,CAAC,OAC1C,EAAW,SAAS,CAAC,GAAG,CAAC,kBAAmB,CAAC,MAAM,EAAE,EAAQ,SAAS,CAAC,EAEvE,IAAM,EAAiB,SAAS,aAAa,CAAC,OAC9C,EAAe,SAAS,CAAC,GAAG,CAAC,mBAE7B,IAAM,EAAa,SAAS,aAAa,CAAC,KAC1C,CAAA,EAAW,WAAW,CAAG,EAAQ,QAAQ,CAEzC,IAAM,EAAe,AAAA,KACrB,GAAI,EAAc,CAEhB,IAAM,EAAe,SAAS,aAAa,CAAC,OACtC,EAAa,aAAa,OAAO,CAAC,oBACpC,IACE,AAAc,iBAAd,EACF,EAAa,GAAG,CAAG,EAAA,IACX,AAAc,iBAAd,EACR,EAAa,GAAG,CAAG,EAAA,IACG,kBAAd,GACR,CAAA,EAAa,GAAG,CAAG,EAAA,GAAa,EAElC,EAAa,SAAS,CAAC,GAAG,CAAC,YAC3B,QAAQ,GAAG,CAAC,aAAa,OAAO,CAAC,sBAEnC,EAAe,WAAW,CAAC,EAC7B,CAEA,IAAM,EAAU,SAAS,aAAa,CAAC,KACvC,CAAA,EAAQ,WAAW,CAAG,EAAQ,KAAK,CAEnC,IAAM,EAAY,SAAS,aAAa,CAAC,KAGzC,GAFA,EAAU,WAAW,CAAG,EAAQ,OAAO,CAEnC,EAAQ,MAAM,GAAK,GAAc,GAAI,CACrC,IAAM,EAAY,SAAS,aAAa,CAAC,SACzC,CAAA,EAAU,WAAW,CAAE,IACvB,EAAU,gBAAgB,CAAC,QAAS,UAChC,MAAM,AAAA,GAAc,EAAQ,SAAS,CAAE,GACvC,EAAU,WAAW,CAAC,EAE9B,GACA,EAAW,WAAW,CAAC,EAC3B,CAEI,EAAe,WAAW,CAAC,GAC3B,EAAW,WAAW,CAAC,GACvB,EAAW,WAAW,CAAC,GACvB,EAAW,WAAW,CAAC,GACvB,EAAU,OAAO,CAAC,EACtB,CAEO,eAAe,GAAoB,CAAc,EAIpD,OAAO,QAAQ,GAAG,CAFD,AADA,CAAC,SAAU,SAAU,SAAS,CACrB,GAAG,CAAC,AAAA,GAAW,AAAA,GAAY,KAGlD,IAAI,CAAC,AAAA,GAEmB,AADH,EAAc,IAAI,GACH,MAAM,CAAC,AAAA,GAAW,EAAQ,MAAM,GAAK,IAGzE,KAAK,CAAC,AAAA,IACL,QAAQ,KAAK,CAAC,sCAAuC,GAC9C,EAAE,EAEjB,CAEA,eAAe,GAAsB,CAAgB,CAAE,CAAe,EAKlE,MAFqB,AAFD,CAAA,MAAM,AAAA,GAAY,EAAtC,EAEiC,MAAM,CAAC,AAAA,GAAW,EAAQ,QAAQ,GAAK,EAG1E,CAIF,SAAS,KACL,CAAC,SAAU,SAAU,SAAS,CAAC,OAAO,CAAC,AAAA,IACnC,IAAM,EAAY,SAAS,cAAc,CAAC,CAAC,EAAE,EAAQ,SAAS,CAAC,EAC3D,GACA,CAAA,EAAU,SAAS,CAAG,EAD1B,CAGJ,EACJ,CAiBA,eAAe,KACX,IAAM,EAAqB,SAAS,cAAc,CAAC,qBAEnD,CADmB,SAAS,cAAc,CAAC,cAChC,KAAK,CAAC,OAAO,CAAG,QAC3B,KAEA,IAAM,EAAY,SAAS,aAAa,CAAC,eACrC,GACA,CAAA,EAAU,KAAK,CAAC,OAAO,CAAG,MAD9B,EAIK,GAIL,AAFkB,CAAA,MAAM,AAAA,IAAxB,EAEU,OAAO,CAAC,MAAM,IACpB,IAAM,EAAkB,SAAS,aAAa,CAAC,MAC/C,CAAA,EAAgB,WAAW,CAAG,EAC9B,EAAgB,gBAAgB,CAAC,QAAS,UAEtC,IAAM,EAAmB,AADR,CAAC,SAAU,SAAU,SAAS,CACb,GAAG,CAAC,AAAA,GAAW,GAAsB,EAAU,IAGjF,QAAQ,GAAG,CAAC,CAAC,YAAY,EAAE,EAAS,iBAAiB,CAAC,CADlC,AADE,CAAA,MAAM,QAAQ,GAAG,CAAC,EAAxC,EACkC,IAAI,GAE1C,GACA,EAAmB,WAAW,CAAC,EACnC,EACJ,CAxCA,AAFe,SAAS,cAAc,CAAC,UAEhC,gBAAgB,CAAC,QAAS,KAC7B,IAAM,EAAY,SAAS,aAAa,CAAC,eACnC,EAAa,SAAS,cAAc,CAAC,cAEvC,IACA,EAAU,KAAK,CAAC,OAAO,CAAG,OAC1B,MAEA,GACA,CAAA,EAAW,KAAK,CAAC,OAAO,CAAG,MAD/B,CAGJ,GAoCE,AAFsB,SAAS,cAAc,CAAC,WAEhC,gBAAgB,CAAC,QAAS,IAExC,MAAM,GAAS,SAAS,cAAc,CAAC,UACjC,GAAS,SAAS,cAAc,CAAC,UACjC,GAAS,SAAS,cAAc,CAAC,UAEvC,SAAS,GAAe,CAAwB,EAC9C,EAAM,gBAAgB,CAAC,QAAS,KAE5B,AADmB,SAAS,cAAc,CAAC,cAChC,KAAK,CAAC,OAAO,CAAG,MAC/B,EACJ,CAEA,GAAc,IACd,GAAc,IACd,GAAc,IDrPd,MAAM,GAAe,AAAA,KACjB,GACF,QAAQ,GAAG,CAAC,kBAAmB,GAAa,QAAQ,EAElD,QAAQ,GAAG,CAAC,sBAEhB,MAAM,GAAS,SAAS,cAAc,CAAC,UAEvC,SAAS,gBAAgB,CAAC,mBAAoB,UAC1C,IAAI,EAA+B,KAInC,IAAK,IAAM,IAFM,CAAC,SAAU,SAAU,SAAS,CAEf,CAC5B,IAAM,EAAc,SAAS,cAAc,CAAC,GACxC,GACA,EAAY,gBAAgB,CAAC,QAAS,UAClC,GAAI,IAAkB,EAClB,MAAM,AAAA,GAAa,OAChB,CACH,GAAI,GCsEb,KDtE4C,EAAgB,CAC/C,IAAM,EAAe,SAAS,cAAc,CAAC,CAAC,EAAE,EAAc,IAAI,CAAC,EAC/D,GACA,EAAa,MAAM,EAE3B,CCiET,KDhE4B,GACf,MAAM,AAAA,GAAY,GAEtB,MAAM,AAAA,GAAa,GAEnB,EAAgB,CACpB,CACJ,EAER,CAEJ,GAIM,AAFmB,SAAS,cAAc,CAAC,aAEjC,gBAAgB,CAAC,QAAS,AAAC,IACnC,EAAM,cAAc,GACpB,IAAM,EAAU,SAAU,cAAc,CAAC,WAAgC,KAAK,CACxE,EAAW,SAAU,cAAc,CAAC,YAAiC,KAAK,CAC1E,EAAc,SAAU,cAAc,CAAC,UAA+B,KAAK,CAC3E,EAAa,SAAS,aAAa,CAAC,oBACpC,EAAc,SAAS,cAAc,CAAC,cAE5C,AAAA,GAAW,CAAE,SAAU,CAAC,EAAE,EAAQ,CAAC,CAAE,UAAW,CAAC,EAAE,EAAS,CAAC,CAAE,aAAc,CAAC,EAAE,EAAY,CAAC,CAAE,GAAI,EAAE,GAEpG,IAAI,CAAC,KACN,QAAQ,GAAG,CAAC,iBACZ,EAAU,KAAK,CAAC,OAAO,CAAG,OAC1B,EAAW,KAAK,CAAC,OAAO,CAAG,MAC3B,EAEN,GAGM,AADkB,SAAS,cAAc,CAAC,YACjC,gBAAgB,CAAC,QAAS,AAAC,IAIhC,AAFmB,SAAS,aAAa,CAAC,oBAEhC,KAAK,CAAC,OAAO,CAAG,MAE9B,GAGA,AADkB,SAAS,cAAc,CAAC,aAChC,gBAAgB,CAAC,QAAS,AAAC,IACjC,EAAM,cAAc,GACpB,IAAM,EAAc,SAAS,cAAc,CAAC,aAE5C,CADmB,SAAS,aAAa,CAAC,oBAChC,KAAK,CAAC,OAAO,CAAG,OAC1B,EAAW,KAAK,CAAC,OAAO,CAAG,MAC/B,GAGA,AADkB,SAAS,cAAc,CAAC,YACjC,gBAAgB,CAAC,QAAS,AAAC,IAIhC,AAFmB,SAAS,aAAa,CAAC,oBAEhC,KAAK,CAAC,OAAO,CAAG,MAC9B,GAGA,AADmB,SAAS,cAAc,CAAC,aACjC,gBAAgB,CAAC,QAAS,AAAC,IAIjC,AAFmB,SAAS,aAAa,CAAC,eAEhC,KAAK,CAAC,OAAO,CAAG,MAC9B,GAGA,AADmB,SAAS,cAAc,CAAC,aACjC,gBAAgB,CAAC,QAAS,MAAO,IACvC,EAAM,cAAc,GAEpB,IAAM,EAAQ,SAAU,cAAc,CAAC,cAAmC,KAAK,CACzE,EAAW,SAAU,cAAc,CAAC,iBAAsC,KAAK,CACrF,AAAA,KACA,GAAI,CACA,MAAM,AAAA,GAAU,EAAO,GACvB,GAAO,gBAAgB,CAAC,QAAS,GACnC,CACA,MAAO,EAAO,CACb,QAAQ,GAAG,CAAC,gBACb,CACN","sources":["<anon>","src/main.ts","src/modules/displayForum.ts","src/modules/fetchdata.ts","src/modules/login.ts","node_modules/firebase/app/dist/esm/index.esm.js","node_modules/firebase/app/index.ts","node_modules/@firebase/app/dist/esm/index.esm2017.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/constants.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/errors.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/firebaseServerApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/app/src/registerCoreComponents.ts","node_modules/@firebase/app/src/index.ts","node_modules/@firebase/component/dist/esm/index.esm2017.js","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/constants.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/util/dist/index.esm2017.js","node_modules/@firebase/util/src/constants.ts","node_modules/@firebase/util/src/assert.ts","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/global.ts","node_modules/@firebase/util/src/defaults.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/promise.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/uuid.ts","node_modules/@firebase/util/src/exponential_backoff.ts","node_modules/@firebase/util/src/formatters.ts","node_modules/@firebase/util/src/compat.ts","node_modules/process/browser.js","node_modules/@firebase/logger/dist/esm/index.esm2017.js","node_modules/@firebase/logger/src/logger.ts","node_modules/idb/build/index.js","node_modules/idb/build/wrap-idb-value.js","src/modules/profile.ts","node_modules/@parcel/runtime-js/lib/runtime-764f3437d257c2fe.js","node_modules/@parcel/runtime-js/lib/runtime-2ee50e39bb4631d6.js","node_modules/@parcel/runtime-js/lib/runtime-dd3c52823cf67391.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    /**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */ var $cfae44f0dfdf62c0$exports = {};\n// shim for using process in browser\nvar $cfae44f0dfdf62c0$var$process = $cfae44f0dfdf62c0$exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar $cfae44f0dfdf62c0$var$cachedSetTimeout;\nvar $cfae44f0dfdf62c0$var$cachedClearTimeout;\nfunction $cfae44f0dfdf62c0$var$defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction $cfae44f0dfdf62c0$var$defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        else $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        else $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    }\n})();\nfunction $cfae44f0dfdf62c0$var$runTimeout(fun) {\n    if ($cfae44f0dfdf62c0$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedSetTimeout === $cfae44f0dfdf62c0$var$defaultSetTimout || !$cfae44f0dfdf62c0$var$cachedSetTimeout) && setTimeout) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction $cfae44f0dfdf62c0$var$runClearTimeout(marker) {\n    if ($cfae44f0dfdf62c0$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedClearTimeout === $cfae44f0dfdf62c0$var$defaultClearTimeout || !$cfae44f0dfdf62c0$var$cachedClearTimeout) && clearTimeout) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar $cfae44f0dfdf62c0$var$queue = [];\nvar $cfae44f0dfdf62c0$var$draining = false;\nvar $cfae44f0dfdf62c0$var$currentQueue;\nvar $cfae44f0dfdf62c0$var$queueIndex = -1;\nfunction $cfae44f0dfdf62c0$var$cleanUpNextTick() {\n    if (!$cfae44f0dfdf62c0$var$draining || !$cfae44f0dfdf62c0$var$currentQueue) return;\n    $cfae44f0dfdf62c0$var$draining = false;\n    if ($cfae44f0dfdf62c0$var$currentQueue.length) $cfae44f0dfdf62c0$var$queue = $cfae44f0dfdf62c0$var$currentQueue.concat($cfae44f0dfdf62c0$var$queue);\n    else $cfae44f0dfdf62c0$var$queueIndex = -1;\n    if ($cfae44f0dfdf62c0$var$queue.length) $cfae44f0dfdf62c0$var$drainQueue();\n}\nfunction $cfae44f0dfdf62c0$var$drainQueue() {\n    if ($cfae44f0dfdf62c0$var$draining) return;\n    var timeout = $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$cleanUpNextTick);\n    $cfae44f0dfdf62c0$var$draining = true;\n    var len = $cfae44f0dfdf62c0$var$queue.length;\n    while(len){\n        $cfae44f0dfdf62c0$var$currentQueue = $cfae44f0dfdf62c0$var$queue;\n        $cfae44f0dfdf62c0$var$queue = [];\n        while(++$cfae44f0dfdf62c0$var$queueIndex < len)if ($cfae44f0dfdf62c0$var$currentQueue) $cfae44f0dfdf62c0$var$currentQueue[$cfae44f0dfdf62c0$var$queueIndex].run();\n        $cfae44f0dfdf62c0$var$queueIndex = -1;\n        len = $cfae44f0dfdf62c0$var$queue.length;\n    }\n    $cfae44f0dfdf62c0$var$currentQueue = null;\n    $cfae44f0dfdf62c0$var$draining = false;\n    $cfae44f0dfdf62c0$var$runClearTimeout(timeout);\n}\n$cfae44f0dfdf62c0$var$process.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    $cfae44f0dfdf62c0$var$queue.push(new $cfae44f0dfdf62c0$var$Item(fun, args));\n    if ($cfae44f0dfdf62c0$var$queue.length === 1 && !$cfae44f0dfdf62c0$var$draining) $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$drainQueue);\n};\n// v8 likes predictible objects\nfunction $cfae44f0dfdf62c0$var$Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\n$cfae44f0dfdf62c0$var$Item.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\n$cfae44f0dfdf62c0$var$process.title = \"browser\";\n$cfae44f0dfdf62c0$var$process.browser = true;\n$cfae44f0dfdf62c0$var$process.env = {};\n$cfae44f0dfdf62c0$var$process.argv = [];\n$cfae44f0dfdf62c0$var$process.version = \"\"; // empty string to avoid regexp issues\n$cfae44f0dfdf62c0$var$process.versions = {};\nfunction $cfae44f0dfdf62c0$var$noop() {}\n$cfae44f0dfdf62c0$var$process.on = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.addListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.once = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.off = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeAllListeners = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.emit = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependOnceListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.listeners = function(name) {\n    return [];\n};\n$cfae44f0dfdf62c0$var$process.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\n$cfae44f0dfdf62c0$var$process.cwd = function() {\n    return \"/\";\n};\n$cfae44f0dfdf62c0$var$process.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\n$cfae44f0dfdf62c0$var$process.umask = function() {\n    return 0;\n};\n\n\nconst $c38e0f42709c826a$export$588c7fdda06fbb0a = {\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */ NODE_CLIENT: false,\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */ NODE_ADMIN: false,\n    /**\r\n     * Firebase SDK Version\r\n     */ SDK_VERSION: \"${JSCORE_VERSION}\"\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Throws an error if the provided assertion is falsy\r\n */ const $c38e0f42709c826a$export$a7a9523472993e97 = function(assertion, message) {\n    if (!assertion) throw $c38e0f42709c826a$export$a39cad550e7ab28a(message);\n};\n/**\r\n * Returns an Error object suitable for throwing.\r\n */ const $c38e0f42709c826a$export$a39cad550e7ab28a = function(message) {\n    return new Error(\"Firebase Database (\" + $c38e0f42709c826a$export$588c7fdda06fbb0a.SDK_VERSION + \") INTERNAL ASSERT FAILED: \" + message);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ const $c38e0f42709c826a$var$stringToByteArray$1 = function(str) {\n    // TODO(user): Use native implementations if/when available\n    const out = [];\n    let p = 0;\n    for(let i = 0; i < str.length; i++){\n        let c = str.charCodeAt(i);\n        if (c < 128) out[p++] = c;\n        else if (c < 2048) {\n            out[p++] = c >> 6 | 192;\n            out[p++] = c & 63 | 128;\n        } else if ((c & 0xfc00) === 0xd800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            // Surrogate Pair\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n            out[p++] = c >> 18 | 240;\n            out[p++] = c >> 12 & 63 | 128;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        } else {\n            out[p++] = c >> 12 | 224;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        }\n    }\n    return out;\n};\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */ const $c38e0f42709c826a$var$byteArrayToString = function(bytes) {\n    // TODO(user): Use native implementations if/when available\n    const out = [];\n    let pos = 0, c = 0;\n    while(pos < bytes.length){\n        const c1 = bytes[pos++];\n        if (c1 < 128) out[c++] = String.fromCharCode(c1);\n        else if (c1 > 191 && c1 < 224) {\n            const c2 = bytes[pos++];\n            out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);\n        } else if (c1 > 239 && c1 < 365) {\n            // Surrogate Pair\n            const c2 = bytes[pos++];\n            const c3 = bytes[pos++];\n            const c4 = bytes[pos++];\n            const u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 0x10000;\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n        } else {\n            const c2 = bytes[pos++];\n            const c3 = bytes[pos++];\n            out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n        }\n    }\n    return out.join(\"\");\n};\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nconst $c38e0f42709c826a$export$b3b2de96497acc47 = {\n    /**\r\n     * Maps bytes to characters.\r\n     */ byteToCharMap_: null,\n    /**\r\n     * Maps characters to bytes.\r\n     */ charToByteMap_: null,\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */ byteToCharMapWebSafe_: null,\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */ charToByteMapWebSafe_: null,\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */ ENCODED_VALS_BASE: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */ get ENCODED_VALS () {\n        return this.ENCODED_VALS_BASE + \"+/=\";\n    },\n    /**\r\n     * Our websafe alphabet.\r\n     */ get ENCODED_VALS_WEBSAFE () {\n        return this.ENCODED_VALS_BASE + \"-_.\";\n    },\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */ HAS_NATIVE_SUPPORT: typeof atob === \"function\",\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */ encodeByteArray (input, webSafe) {\n        if (!Array.isArray(input)) throw Error(\"encodeByteArray takes an array as a parameter\");\n        this.init_();\n        const byteToCharMap = webSafe ? this.byteToCharMapWebSafe_ : this.byteToCharMap_;\n        const output = [];\n        for(let i = 0; i < input.length; i += 3){\n            const byte1 = input[i];\n            const haveByte2 = i + 1 < input.length;\n            const byte2 = haveByte2 ? input[i + 1] : 0;\n            const haveByte3 = i + 2 < input.length;\n            const byte3 = haveByte3 ? input[i + 2] : 0;\n            const outByte1 = byte1 >> 2;\n            const outByte2 = (byte1 & 0x03) << 4 | byte2 >> 4;\n            let outByte3 = (byte2 & 0x0f) << 2 | byte3 >> 6;\n            let outByte4 = byte3 & 0x3f;\n            if (!haveByte3) {\n                outByte4 = 64;\n                if (!haveByte2) outByte3 = 64;\n            }\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\n        }\n        return output.join(\"\");\n    },\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */ encodeString (input, webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) return btoa(input);\n        return this.encodeByteArray($c38e0f42709c826a$var$stringToByteArray$1(input), webSafe);\n    },\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */ decodeString (input, webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) return atob(input);\n        return $c38e0f42709c826a$var$byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n    },\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */ decodeStringToByteArray (input, webSafe) {\n        this.init_();\n        const charToByteMap = webSafe ? this.charToByteMapWebSafe_ : this.charToByteMap_;\n        const output = [];\n        for(let i = 0; i < input.length;){\n            const byte1 = charToByteMap[input.charAt(i++)];\n            const haveByte2 = i < input.length;\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n            ++i;\n            const haveByte3 = i < input.length;\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            const haveByte4 = i < input.length;\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) throw new $c38e0f42709c826a$export$55ca9d4bee46aeb3();\n            const outByte1 = byte1 << 2 | byte2 >> 4;\n            output.push(outByte1);\n            if (byte3 !== 64) {\n                const outByte2 = byte2 << 4 & 0xf0 | byte3 >> 2;\n                output.push(outByte2);\n                if (byte4 !== 64) {\n                    const outByte3 = byte3 << 6 & 0xc0 | byte4;\n                    output.push(outByte3);\n                }\n            }\n        }\n        return output;\n    },\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */ init_ () {\n        if (!this.byteToCharMap_) {\n            this.byteToCharMap_ = {};\n            this.charToByteMap_ = {};\n            this.byteToCharMapWebSafe_ = {};\n            this.charToByteMapWebSafe_ = {};\n            // We want quick mappings back and forth, so we precompute two maps.\n            for(let i = 0; i < this.ENCODED_VALS.length; i++){\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n                // Be forgiving when decoding and correctly decode both encodings.\n                if (i >= this.ENCODED_VALS_BASE.length) {\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n                }\n            }\n        }\n    }\n};\n/**\r\n * An error encountered while decoding base64 string.\r\n */ class $c38e0f42709c826a$export$55ca9d4bee46aeb3 extends Error {\n    constructor(){\n        super(...arguments);\n        this.name = \"DecodeBase64StringError\";\n    }\n}\n/**\r\n * URL-safe base64 encoding\r\n */ const $c38e0f42709c826a$export$e510a73ee562749 = function(str) {\n    const utf8Bytes = $c38e0f42709c826a$var$stringToByteArray$1(str);\n    return $c38e0f42709c826a$export$b3b2de96497acc47.encodeByteArray(utf8Bytes, true);\n};\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */ const $c38e0f42709c826a$export$4b5284a3025a455 = function(str) {\n    // Use base64url encoding and remove padding in the end (dot characters).\n    return $c38e0f42709c826a$export$e510a73ee562749(str).replace(/\\./g, \"\");\n};\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */ const $c38e0f42709c826a$export$c62426fdd000a97e = function(str) {\n    try {\n        return $c38e0f42709c826a$export$b3b2de96497acc47.decodeString(str, true);\n    } catch (e) {\n        console.error(\"base64Decode failed: \", e);\n    }\n    return null;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */ function $c38e0f42709c826a$export$6c40052bed430212(value) {\n    return $c38e0f42709c826a$export$54e9fb29908872fa(undefined, value);\n}\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */ function $c38e0f42709c826a$export$54e9fb29908872fa(target, source) {\n    if (!(source instanceof Object)) return source;\n    switch(source.constructor){\n        case Date:\n            // Treat Dates like scalars; if the target date object had any child\n            // properties - they will be lost!\n            const dateValue = source;\n            return new Date(dateValue.getTime());\n        case Object:\n            if (target === undefined) target = {};\n            break;\n        case Array:\n            // Always copy the array source and overwrite the target.\n            target = [];\n            break;\n        default:\n            // Not a plain Object - treat it as a scalar.\n            return source;\n    }\n    for(const prop in source){\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n        if (!source.hasOwnProperty(prop) || !$c38e0f42709c826a$var$isValidKey(prop)) continue;\n        target[prop] = $c38e0f42709c826a$export$54e9fb29908872fa(target[prop], source[prop]);\n    }\n    return target;\n}\nfunction $c38e0f42709c826a$var$isValidKey(key) {\n    return key !== \"__proto__\";\n}\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */ function $c38e0f42709c826a$export$a4e55266d2135a7f() {\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof $parcel$global !== \"undefined\") return $parcel$global;\n    throw new Error(\"Unable to locate global object.\");\n}\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ const $c38e0f42709c826a$var$getDefaultsFromGlobal = ()=>$c38e0f42709c826a$export$a4e55266d2135a7f().__FIREBASE_DEFAULTS__;\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */ const $c38e0f42709c826a$var$getDefaultsFromEnvVariable = ()=>{\n    if (typeof $cfae44f0dfdf62c0$exports === \"undefined\" || typeof $cfae44f0dfdf62c0$exports.env === \"undefined\") return;\n    const defaultsJsonString = undefined;\n    if (defaultsJsonString) return JSON.parse(defaultsJsonString);\n};\nconst $c38e0f42709c826a$var$getDefaultsFromCookie = ()=>{\n    if (typeof document === \"undefined\") return;\n    let match;\n    try {\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n    } catch (e) {\n        // Some environments such as Angular Universal SSR have a\n        // `document` object but error on accessing `document.cookie`.\n        return;\n    }\n    const decoded = match && $c38e0f42709c826a$export$c62426fdd000a97e(match[1]);\n    return decoded && JSON.parse(decoded);\n};\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */ const $c38e0f42709c826a$export$212bb2fc580a90a8 = ()=>{\n    try {\n        return $c38e0f42709c826a$var$getDefaultsFromGlobal() || $c38e0f42709c826a$var$getDefaultsFromEnvVariable() || $c38e0f42709c826a$var$getDefaultsFromCookie();\n    } catch (e) {\n        /**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */ console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n        return;\n    }\n};\n/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */ const $c38e0f42709c826a$export$9c11895284c8adad = (productName)=>{\n    var _a, _b;\n    return (_b = (_a = $c38e0f42709c826a$export$212bb2fc580a90a8()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName];\n};\n/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */ const $c38e0f42709c826a$export$a3febcf1f14a3a0c = (productName)=>{\n    const host = $c38e0f42709c826a$export$9c11895284c8adad(productName);\n    if (!host) return undefined;\n    const separatorIndex = host.lastIndexOf(\":\"); // Finding the last since IPv6 addr also has colons.\n    if (separatorIndex <= 0 || separatorIndex + 1 === host.length) throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n    // eslint-disable-next-line no-restricted-globals\n    const port = parseInt(host.substring(separatorIndex + 1), 10);\n    if (host[0] === \"[\") // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [\n        host.substring(1, separatorIndex - 1),\n        port\n    ];\n    else return [\n        host.substring(0, separatorIndex),\n        port\n    ];\n};\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */ const $c38e0f42709c826a$export$3dfb6827a9f89756 = ()=>{\n    var _a;\n    return (_a = $c38e0f42709c826a$export$212bb2fc580a90a8()) === null || _a === void 0 ? void 0 : _a.config;\n};\n/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */ const $c38e0f42709c826a$export$5539a1a3afe87d6 = (name)=>{\n    var _a;\n    return (_a = $c38e0f42709c826a$export$212bb2fc580a90a8()) === null || _a === void 0 ? void 0 : _a[`_${name}`];\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ class $c38e0f42709c826a$export$85f6557964517f1a {\n    constructor(){\n        this.reject = ()=>{};\n        this.resolve = ()=>{};\n        this.promise = new Promise((resolve, reject)=>{\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */ wrapCallback(callback) {\n        return (error, value)=>{\n            if (error) this.reject(error);\n            else this.resolve(value);\n            if (typeof callback === \"function\") {\n                // Attaching noop handler just in case developer wasn't expecting\n                // promises\n                this.promise.catch(()=>{});\n                // Some of our callbacks don't expect a value and our own tests\n                // assert that the parameter length is 1\n                if (callback.length === 1) callback(error);\n                else callback(error, value);\n            }\n        };\n    }\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ function $c38e0f42709c826a$export$367bf224123348f1(token, projectId) {\n    if (token.uid) throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\n    // Unsecured JWTs use \"none\" as the algorithm.\n    const header = {\n        alg: \"none\",\n        type: \"JWT\"\n    };\n    const project = projectId || \"demo-project\";\n    const iat = token.iat || 0;\n    const sub = token.sub || token.user_id;\n    if (!sub) throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n    const payload = Object.assign({\n        // Set all required fields to decent defaults\n        iss: `https://securetoken.google.com/${project}`,\n        aud: project,\n        iat: iat,\n        exp: iat + 3600,\n        auth_time: iat,\n        sub: sub,\n        user_id: sub,\n        firebase: {\n            sign_in_provider: \"custom\",\n            identities: {}\n        }\n    }, token);\n    // Unsecured JWTs use the empty string as a signature.\n    const signature = \"\";\n    return [\n        $c38e0f42709c826a$export$4b5284a3025a455(JSON.stringify(header)),\n        $c38e0f42709c826a$export$4b5284a3025a455(JSON.stringify(payload)),\n        signature\n    ].join(\".\");\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */ function $c38e0f42709c826a$export$c36915b22ce77c19() {\n    if (typeof navigator !== \"undefined\" && typeof navigator[\"userAgent\"] === \"string\") return navigator[\"userAgent\"];\n    else return \"\";\n}\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */ function $c38e0f42709c826a$export$872f8323f01d7ae0() {\n    return typeof window !== \"undefined\" && // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window[\"cordova\"] || window[\"phonegap\"] || window[\"PhoneGap\"]) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test($c38e0f42709c826a$export$c36915b22ce77c19());\n}\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected or specified.\r\n */ // Node detection logic from: https://github.com/iliakan/detect-node/\nfunction $c38e0f42709c826a$export$8ee0fc9ee280b4ee() {\n    var _a;\n    const forceEnvironment = (_a = $c38e0f42709c826a$export$212bb2fc580a90a8()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\n    if (forceEnvironment === \"node\") return true;\n    else if (forceEnvironment === \"browser\") return false;\n    try {\n        return Object.prototype.toString.call($parcel$global.process) === \"[object process]\";\n    } catch (e) {\n        return false;\n    }\n}\n/**\r\n * Detect Browser Environment\r\n */ function $c38e0f42709c826a$export$4e09c449d6c407f7() {\n    return typeof self === \"object\" && self.self === self;\n}\nfunction $c38e0f42709c826a$export$caa8774a9107a58e() {\n    const runtime = typeof chrome === \"object\" ? chrome.runtime : typeof browser === \"object\" ? browser.runtime : undefined;\n    return typeof runtime === \"object\" && runtime.id !== undefined;\n}\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */ function $c38e0f42709c826a$export$f7a1e23e542d38e3() {\n    return typeof navigator === \"object\" && navigator[\"product\"] === \"ReactNative\";\n}\n/** Detects Electron apps. */ function $c38e0f42709c826a$export$f2f6a8999f8ebd30() {\n    return $c38e0f42709c826a$export$c36915b22ce77c19().indexOf(\"Electron/\") >= 0;\n}\n/** Detects Internet Explorer. */ function $c38e0f42709c826a$export$7e7b1a9668aaed8() {\n    const ua = $c38e0f42709c826a$export$c36915b22ce77c19();\n    return ua.indexOf(\"MSIE \") >= 0 || ua.indexOf(\"Trident/\") >= 0;\n}\n/** Detects Universal Windows Platform apps. */ function $c38e0f42709c826a$export$202944b2d2824246() {\n    return $c38e0f42709c826a$export$c36915b22ce77c19().indexOf(\"MSAppHost/\") >= 0;\n}\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */ function $c38e0f42709c826a$export$5d1d834fbbf8bab7() {\n    return $c38e0f42709c826a$export$588c7fdda06fbb0a.NODE_CLIENT === true || $c38e0f42709c826a$export$588c7fdda06fbb0a.NODE_ADMIN === true;\n}\n/** Returns true if we are running in Safari. */ function $c38e0f42709c826a$export$95df08bae54cb4df() {\n    return !$c38e0f42709c826a$export$8ee0fc9ee280b4ee() && !!navigator.userAgent && navigator.userAgent.includes(\"Safari\") && !navigator.userAgent.includes(\"Chrome\");\n}\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */ function $c38e0f42709c826a$export$3865db50535c2055() {\n    try {\n        return typeof indexedDB === \"object\";\n    } catch (e) {\n        return false;\n    }\n}\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */ function $c38e0f42709c826a$export$a8a3018f3d187a4d() {\n    return new Promise((resolve, reject)=>{\n        try {\n            let preExist = true;\n            const DB_CHECK_NAME = \"validate-browser-context-for-indexeddb-analytics-module\";\n            const request = self.indexedDB.open(DB_CHECK_NAME);\n            request.onsuccess = ()=>{\n                request.result.close();\n                // delete database only when it doesn't pre-exist\n                if (!preExist) self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n                resolve(true);\n            };\n            request.onupgradeneeded = ()=>{\n                preExist = false;\n            };\n            request.onerror = ()=>{\n                var _a;\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || \"\");\n            };\n        } catch (error) {\n            reject(error);\n        }\n    });\n}\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */ function $c38e0f42709c826a$export$f172b7eb6cf60599() {\n    if (typeof navigator === \"undefined\" || !navigator.cookieEnabled) return false;\n    return true;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */ const $c38e0f42709c826a$var$ERROR_NAME = \"FirebaseError\";\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nclass $c38e0f42709c826a$export$dd24e9cd51226c56 extends Error {\n    constructor(/** The error code for this error. */ code, message, /** Custom data for this error. */ customData){\n        super(message);\n        this.code = code;\n        this.customData = customData;\n        /** The custom name for all FirebaseErrors. */ this.name = $c38e0f42709c826a$var$ERROR_NAME;\n        // Fix For ES5\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, $c38e0f42709c826a$export$dd24e9cd51226c56.prototype);\n        // Maintains proper stack trace for where our error was thrown.\n        // Only available on V8.\n        if (Error.captureStackTrace) Error.captureStackTrace(this, $c38e0f42709c826a$export$3fa6e1b18a3b2d40.prototype.create);\n    }\n}\nclass $c38e0f42709c826a$export$3fa6e1b18a3b2d40 {\n    constructor(service, serviceName, errors){\n        this.service = service;\n        this.serviceName = serviceName;\n        this.errors = errors;\n    }\n    create(code, ...data) {\n        const customData = data[0] || {};\n        const fullCode = `${this.service}/${code}`;\n        const template = this.errors[code];\n        const message = template ? $c38e0f42709c826a$var$replaceTemplate(template, customData) : \"Error\";\n        // Service Name: Error message (service/code).\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n        const error = new $c38e0f42709c826a$export$dd24e9cd51226c56(fullCode, fullMessage, customData);\n        return error;\n    }\n}\nfunction $c38e0f42709c826a$var$replaceTemplate(template, data) {\n    return template.replace($c38e0f42709c826a$var$PATTERN, (_, key)=>{\n        const value = data[key];\n        return value != null ? String(value) : `<${key}?>`;\n    });\n}\nconst $c38e0f42709c826a$var$PATTERN = /\\{\\$([^}]+)}/g;\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */ function $c38e0f42709c826a$export$c5a53ce6a17cf18d(str) {\n    return JSON.parse(str);\n}\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */ function $c38e0f42709c826a$export$fac44ee5b035f737(data) {\n    return JSON.stringify(data);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */ const $c38e0f42709c826a$export$2f872c0f2117be69 = function(token) {\n    let header = {}, claims = {}, data = {}, signature = \"\";\n    try {\n        const parts = token.split(\".\");\n        header = $c38e0f42709c826a$export$c5a53ce6a17cf18d($c38e0f42709c826a$export$c62426fdd000a97e(parts[0]) || \"\");\n        claims = $c38e0f42709c826a$export$c5a53ce6a17cf18d($c38e0f42709c826a$export$c62426fdd000a97e(parts[1]) || \"\");\n        signature = parts[2];\n        data = claims[\"d\"] || {};\n        delete claims[\"d\"];\n    } catch (e) {}\n    return {\n        header: header,\n        claims: claims,\n        data: data,\n        signature: signature\n    };\n};\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */ const $c38e0f42709c826a$export$5f870fcca7ae6a88 = function(token) {\n    const claims = $c38e0f42709c826a$export$2f872c0f2117be69(token).claims;\n    const now = Math.floor(new Date().getTime() / 1000);\n    let validSince = 0, validUntil = 0;\n    if (typeof claims === \"object\") {\n        if (claims.hasOwnProperty(\"nbf\")) validSince = claims[\"nbf\"];\n        else if (claims.hasOwnProperty(\"iat\")) validSince = claims[\"iat\"];\n        if (claims.hasOwnProperty(\"exp\")) validUntil = claims[\"exp\"];\n        else // token will expire after 24h by default\n        validUntil = validSince + 86400;\n    }\n    return !!now && !!validSince && !!validUntil && now >= validSince && now <= validUntil;\n};\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */ const $c38e0f42709c826a$export$701c661ec91095f2 = function(token) {\n    const claims = $c38e0f42709c826a$export$2f872c0f2117be69(token).claims;\n    if (typeof claims === \"object\" && claims.hasOwnProperty(\"iat\")) return claims[\"iat\"];\n    return null;\n};\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */ const $c38e0f42709c826a$export$9565ca3d387f8aa0 = function(token) {\n    const decoded = $c38e0f42709c826a$export$2f872c0f2117be69(token), claims = decoded.claims;\n    return !!claims && typeof claims === \"object\" && claims.hasOwnProperty(\"iat\");\n};\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */ const $c38e0f42709c826a$export$fc970ed23da99565 = function(token) {\n    const claims = $c38e0f42709c826a$export$2f872c0f2117be69(token).claims;\n    return typeof claims === \"object\" && claims[\"admin\"] === true;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ function $c38e0f42709c826a$export$2344b14b097df817(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction $c38e0f42709c826a$export$e51ae4db7b428f67(obj, key) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) return obj[key];\n    else return undefined;\n}\nfunction $c38e0f42709c826a$export$dd1bc94b04021eeb(obj) {\n    for(const key in obj){\n        if (Object.prototype.hasOwnProperty.call(obj, key)) return false;\n    }\n    return true;\n}\nfunction $c38e0f42709c826a$export$871de8747c9eaa88(obj, fn, contextObj) {\n    const res = {};\n    for(const key in obj)if (Object.prototype.hasOwnProperty.call(obj, key)) res[key] = fn.call(contextObj, obj[key], key, obj);\n    return res;\n}\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */ function $c38e0f42709c826a$export$9cb4719e2e525b7a(a, b) {\n    if (a === b) return true;\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    for (const k of aKeys){\n        if (!bKeys.includes(k)) return false;\n        const aProp = a[k];\n        const bProp = b[k];\n        if ($c38e0f42709c826a$var$isObject(aProp) && $c38e0f42709c826a$var$isObject(bProp)) {\n            if (!$c38e0f42709c826a$export$9cb4719e2e525b7a(aProp, bProp)) return false;\n        } else if (aProp !== bProp) return false;\n    }\n    for (const k of bKeys){\n        if (!aKeys.includes(k)) return false;\n    }\n    return true;\n}\nfunction $c38e0f42709c826a$var$isObject(thing) {\n    return thing !== null && typeof thing === \"object\";\n}\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */ function $c38e0f42709c826a$export$a9cd205a244d9f54(promise, timeInMS = 2000) {\n    const deferredPromise = new $c38e0f42709c826a$export$85f6557964517f1a();\n    setTimeout(()=>deferredPromise.reject(\"timeout!\"), timeInMS);\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\n    return deferredPromise.promise;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */ function $c38e0f42709c826a$export$ac4103b836844853(querystringParams) {\n    const params = [];\n    for (const [key, value] of Object.entries(querystringParams))if (Array.isArray(value)) value.forEach((arrayVal)=>{\n        params.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(arrayVal));\n    });\n    else params.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(value));\n    return params.length ? \"&\" + params.join(\"&\") : \"\";\n}\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */ function $c38e0f42709c826a$export$c1271ca4c8a70741(querystring) {\n    const obj = {};\n    const tokens = querystring.replace(/^\\?/, \"\").split(\"&\");\n    tokens.forEach((token)=>{\n        if (token) {\n            const [key, value] = token.split(\"=\");\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\n        }\n    });\n    return obj;\n}\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */ function $c38e0f42709c826a$export$1a8408415472d8ed(url) {\n    const queryStart = url.indexOf(\"?\");\n    if (!queryStart) return \"\";\n    const fragmentStart = url.indexOf(\"#\", queryStart);\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */ /**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */ class $c38e0f42709c826a$export$c85d589bf4e25fef {\n    constructor(){\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */ this.chain_ = [];\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */ this.buf_ = [];\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */ this.W_ = [];\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */ this.pad_ = [];\n        /**\r\n         * @private {number}\r\n         */ this.inbuf_ = 0;\n        /**\r\n         * @private {number}\r\n         */ this.total_ = 0;\n        this.blockSize = 64;\n        this.pad_[0] = 128;\n        for(let i = 1; i < this.blockSize; ++i)this.pad_[i] = 0;\n        this.reset();\n    }\n    reset() {\n        this.chain_[0] = 0x67452301;\n        this.chain_[1] = 0xefcdab89;\n        this.chain_[2] = 0x98badcfe;\n        this.chain_[3] = 0x10325476;\n        this.chain_[4] = 0xc3d2e1f0;\n        this.inbuf_ = 0;\n        this.total_ = 0;\n    }\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */ compress_(buf, offset) {\n        if (!offset) offset = 0;\n        const W = this.W_;\n        // get 16 big endian words\n        if (typeof buf === \"string\") for(let i = 0; i < 16; i++){\n            // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n            // have a bug that turns the post-increment ++ operator into pre-increment\n            // during JIT compilation.  We have code that depends heavily on SHA-1 for\n            // correctness and which is affected by this bug, so I've removed all uses\n            // of post-increment ++ in which the result value is used.  We can revert\n            // this change once the Safari bug\n            // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n            // most clients have been updated.\n            W[i] = buf.charCodeAt(offset) << 24 | buf.charCodeAt(offset + 1) << 16 | buf.charCodeAt(offset + 2) << 8 | buf.charCodeAt(offset + 3);\n            offset += 4;\n        }\n        else for(let i = 0; i < 16; i++){\n            W[i] = buf[offset] << 24 | buf[offset + 1] << 16 | buf[offset + 2] << 8 | buf[offset + 3];\n            offset += 4;\n        }\n        // expand to 80 words\n        for(let i = 16; i < 80; i++){\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n            W[i] = (t << 1 | t >>> 31) & 0xffffffff;\n        }\n        let a = this.chain_[0];\n        let b = this.chain_[1];\n        let c = this.chain_[2];\n        let d = this.chain_[3];\n        let e = this.chain_[4];\n        let f, k;\n        // TODO(user): Try to unroll this loop to speed up the computation.\n        for(let i = 0; i < 80; i++){\n            if (i < 40) {\n                if (i < 20) {\n                    f = d ^ b & (c ^ d);\n                    k = 0x5a827999;\n                } else {\n                    f = b ^ c ^ d;\n                    k = 0x6ed9eba1;\n                }\n            } else if (i < 60) {\n                f = b & c | d & (b | c);\n                k = 0x8f1bbcdc;\n            } else {\n                f = b ^ c ^ d;\n                k = 0xca62c1d6;\n            }\n            const t = (a << 5 | a >>> 27) + f + e + k + W[i] & 0xffffffff;\n            e = d;\n            d = c;\n            c = (b << 30 | b >>> 2) & 0xffffffff;\n            b = a;\n            a = t;\n        }\n        this.chain_[0] = this.chain_[0] + a & 0xffffffff;\n        this.chain_[1] = this.chain_[1] + b & 0xffffffff;\n        this.chain_[2] = this.chain_[2] + c & 0xffffffff;\n        this.chain_[3] = this.chain_[3] + d & 0xffffffff;\n        this.chain_[4] = this.chain_[4] + e & 0xffffffff;\n    }\n    update(bytes, length) {\n        // TODO(johnlenz): tighten the function signature and remove this check\n        if (bytes == null) return;\n        if (length === undefined) length = bytes.length;\n        const lengthMinusBlock = length - this.blockSize;\n        let n = 0;\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\n        const buf = this.buf_;\n        let inbuf = this.inbuf_;\n        // The outer while loop should execute at most twice.\n        while(n < length){\n            // When we have no data in the block to top up, we can directly process the\n            // input buffer (assuming it contains sufficient data). This gives ~25%\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n            // the data is provided in large chunks (or in multiples of 64 bytes).\n            if (inbuf === 0) while(n <= lengthMinusBlock){\n                this.compress_(bytes, n);\n                n += this.blockSize;\n            }\n            if (typeof bytes === \"string\") while(n < length){\n                buf[inbuf] = bytes.charCodeAt(n);\n                ++inbuf;\n                ++n;\n                if (inbuf === this.blockSize) {\n                    this.compress_(buf);\n                    inbuf = 0;\n                    break;\n                }\n            }\n            else while(n < length){\n                buf[inbuf] = bytes[n];\n                ++inbuf;\n                ++n;\n                if (inbuf === this.blockSize) {\n                    this.compress_(buf);\n                    inbuf = 0;\n                    break;\n                }\n            }\n        }\n        this.inbuf_ = inbuf;\n        this.total_ += length;\n    }\n    /** @override */ digest() {\n        const digest = [];\n        let totalBits = this.total_ * 8;\n        // Add pad 0x80 0x00*.\n        if (this.inbuf_ < 56) this.update(this.pad_, 56 - this.inbuf_);\n        else this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n        // Add # bits.\n        for(let i = this.blockSize - 1; i >= 56; i--){\n            this.buf_[i] = totalBits & 255;\n            totalBits /= 256; // Don't use bit-shifting here!\n        }\n        this.compress_(this.buf_);\n        let n = 0;\n        for(let i = 0; i < 5; i++)for(let j = 24; j >= 0; j -= 8){\n            digest[n] = this.chain_[i] >> j & 255;\n            ++n;\n        }\n        return digest;\n    }\n}\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */ function $c38e0f42709c826a$export$364097d812234b3f(executor, onNoObservers) {\n    const proxy = new $c38e0f42709c826a$var$ObserverProxy(executor, onNoObservers);\n    return proxy.subscribe.bind(proxy);\n}\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */ class $c38e0f42709c826a$var$ObserverProxy {\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */ constructor(executor, onNoObservers){\n        this.observers = [];\n        this.unsubscribes = [];\n        this.observerCount = 0;\n        // Micro-task scheduling by calling task.then().\n        this.task = Promise.resolve();\n        this.finalized = false;\n        this.onNoObservers = onNoObservers;\n        // Call the executor asynchronously so subscribers that are called\n        // synchronously after the creation of the subscribe function\n        // can still receive the very first value generated in the executor.\n        this.task.then(()=>{\n            executor(this);\n        }).catch((e)=>{\n            this.error(e);\n        });\n    }\n    next(value) {\n        this.forEachObserver((observer)=>{\n            observer.next(value);\n        });\n    }\n    error(error) {\n        this.forEachObserver((observer)=>{\n            observer.error(error);\n        });\n        this.close(error);\n    }\n    complete() {\n        this.forEachObserver((observer)=>{\n            observer.complete();\n        });\n        this.close();\n    }\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */ subscribe(nextOrObserver, error, complete) {\n        let observer;\n        if (nextOrObserver === undefined && error === undefined && complete === undefined) throw new Error(\"Missing Observer.\");\n        // Assemble an Observer object when passed as callback functions.\n        if ($c38e0f42709c826a$var$implementsAnyMethods(nextOrObserver, [\n            \"next\",\n            \"error\",\n            \"complete\"\n        ])) observer = nextOrObserver;\n        else observer = {\n            next: nextOrObserver,\n            error: error,\n            complete: complete\n        };\n        if (observer.next === undefined) observer.next = $c38e0f42709c826a$var$noop;\n        if (observer.error === undefined) observer.error = $c38e0f42709c826a$var$noop;\n        if (observer.complete === undefined) observer.complete = $c38e0f42709c826a$var$noop;\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\n        // Attempt to subscribe to a terminated Observable - we\n        // just respond to the Observer with the final error or complete\n        // event.\n        if (this.finalized) // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.task.then(()=>{\n            try {\n                if (this.finalError) observer.error(this.finalError);\n                else observer.complete();\n            } catch (e) {\n            // nothing\n            }\n            return;\n        });\n        this.observers.push(observer);\n        return unsub;\n    }\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\n    // any unsubscribed Observer.\n    unsubscribeOne(i) {\n        if (this.observers === undefined || this.observers[i] === undefined) return;\n        delete this.observers[i];\n        this.observerCount -= 1;\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) this.onNoObservers(this);\n    }\n    forEachObserver(fn) {\n        if (this.finalized) // Already closed by previous event....just eat the additional values.\n        return;\n        // Since sendOne calls asynchronously - there is no chance that\n        // this.observers will become undefined.\n        for(let i = 0; i < this.observers.length; i++)this.sendOne(i, fn);\n    }\n    // Call the Observer via one of it's callback function. We are careful to\n    // confirm that the observe has not been unsubscribed since this asynchronous\n    // function had been queued.\n    sendOne(i, fn) {\n        // Execute the callback asynchronously\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.task.then(()=>{\n            if (this.observers !== undefined && this.observers[i] !== undefined) try {\n                fn(this.observers[i]);\n            } catch (e) {\n                // Ignore exceptions raised in Observers or missing methods of an\n                // Observer.\n                // Log error to console. b/31404806\n                if (typeof console !== \"undefined\" && console.error) console.error(e);\n            }\n        });\n    }\n    close(err) {\n        if (this.finalized) return;\n        this.finalized = true;\n        if (err !== undefined) this.finalError = err;\n        // Proxy is no longer needed - garbage collect references\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.task.then(()=>{\n            this.observers = undefined;\n            this.onNoObservers = undefined;\n        });\n    }\n}\n/** Turn synchronous function into one called asynchronously. */ // eslint-disable-next-line @typescript-eslint/ban-types\nfunction $c38e0f42709c826a$export$12af436354f1a4f7(fn, onError) {\n    return (...args)=>{\n        Promise.resolve(true).then(()=>{\n            fn(...args);\n        }).catch((error)=>{\n            if (onError) onError(error);\n        });\n    };\n}\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */ function $c38e0f42709c826a$var$implementsAnyMethods(obj, methods) {\n    if (typeof obj !== \"object\" || obj === null) return false;\n    for (const method of methods){\n        if (method in obj && typeof obj[method] === \"function\") return true;\n    }\n    return false;\n}\nfunction $c38e0f42709c826a$var$noop() {\n// do nothing\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */ const $c38e0f42709c826a$export$20164226a0ed35c3 = function(fnName, minCount, maxCount, argCount) {\n    let argError;\n    if (argCount < minCount) argError = \"at least \" + minCount;\n    else if (argCount > maxCount) argError = maxCount === 0 ? \"none\" : \"no more than \" + maxCount;\n    if (argError) {\n        const error = fnName + \" failed: Was called with \" + argCount + (argCount === 1 ? \" argument.\" : \" arguments.\") + \" Expects \" + argError + \".\";\n        throw new Error(error);\n    }\n};\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */ function $c38e0f42709c826a$export$adea4917e02d93dc(fnName, argName) {\n    return `${fnName} failed: ${argName} argument `;\n}\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */ function $c38e0f42709c826a$export$8eef22622e725943(fnName, namespace, optional) {\n    if (optional && !namespace) return;\n    if (typeof namespace !== \"string\") //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error($c38e0f42709c826a$export$adea4917e02d93dc(fnName, \"namespace\") + \"must be a valid firebase namespace.\");\n}\nfunction $c38e0f42709c826a$export$5bcd2a2eb6640dfa(fnName, argumentName, // eslint-disable-next-line @typescript-eslint/ban-types\ncallback, optional) {\n    if (optional && !callback) return;\n    if (typeof callback !== \"function\") throw new Error($c38e0f42709c826a$export$adea4917e02d93dc(fnName, argumentName) + \"must be a valid function.\");\n}\nfunction $c38e0f42709c826a$export$df77539402cfb523(fnName, argumentName, context, optional) {\n    if (optional && !context) return;\n    if (typeof context !== \"object\" || context === null) throw new Error($c38e0f42709c826a$export$adea4917e02d93dc(fnName, argumentName) + \"must be a valid context object.\");\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */ const $c38e0f42709c826a$export$655666783217a925 = function(str) {\n    const out = [];\n    let p = 0;\n    for(let i = 0; i < str.length; i++){\n        let c = str.charCodeAt(i);\n        // Is this the lead surrogate in a surrogate pair?\n        if (c >= 0xd800 && c <= 0xdbff) {\n            const high = c - 0xd800; // the high 10 bits.\n            i++;\n            $c38e0f42709c826a$export$a7a9523472993e97(i < str.length, \"Surrogate pair missing trail surrogate.\");\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n            c = 0x10000 + (high << 10) + low;\n        }\n        if (c < 128) out[p++] = c;\n        else if (c < 2048) {\n            out[p++] = c >> 6 | 192;\n            out[p++] = c & 63 | 128;\n        } else if (c < 65536) {\n            out[p++] = c >> 12 | 224;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        } else {\n            out[p++] = c >> 18 | 240;\n            out[p++] = c >> 12 & 63 | 128;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        }\n    }\n    return out;\n};\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */ const $c38e0f42709c826a$export$9536dc0a75b20bf9 = function(str) {\n    let p = 0;\n    for(let i = 0; i < str.length; i++){\n        const c = str.charCodeAt(i);\n        if (c < 128) p++;\n        else if (c < 2048) p += 2;\n        else if (c >= 0xd800 && c <= 0xdbff) {\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n            p += 4;\n            i++; // skip trail surrogate.\n        } else p += 3;\n    }\n    return p;\n};\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */ const $c38e0f42709c826a$export$abe4376e1bf796d6 = function() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c)=>{\n        const r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n    });\n};\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The amount of milliseconds to exponentially increase.\r\n */ const $c38e0f42709c826a$var$DEFAULT_INTERVAL_MILLIS = 1000;\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */ const $c38e0f42709c826a$var$DEFAULT_BACKOFF_FACTOR = 2;\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */ const $c38e0f42709c826a$export$bdf1213ffbdb096e = 14400000; // Four hours, like iOS and Android.\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */ const $c38e0f42709c826a$export$3518ed2cfe61fa30 = 0.5;\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */ function $c38e0f42709c826a$export$4d810c0ca64ed8e9(backoffCount, intervalMillis = $c38e0f42709c826a$var$DEFAULT_INTERVAL_MILLIS, backoffFactor = $c38e0f42709c826a$var$DEFAULT_BACKOFF_FACTOR) {\n    // Calculates an exponentially increasing value.\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\n    // and count to restore state.\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n    // A random \"fuzz\" to avoid waves of retries.\n    // Deviation: randomFactor is required.\n    const randomWait = Math.round(// A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    $c38e0f42709c826a$export$3518ed2cfe61fa30 * currBaseValue * // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n    // if we add or subtract.\n    (Math.random() - 0.5) * 2);\n    // Limits backoff to max to avoid effectively permanent backoff.\n    return Math.min($c38e0f42709c826a$export$bdf1213ffbdb096e, currBaseValue + randomWait);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Provide English ordinal letters after a number\r\n */ function $c38e0f42709c826a$export$7bb39f879164e4ac(i) {\n    if (!Number.isFinite(i)) return `${i}`;\n    return i + $c38e0f42709c826a$var$indicator(i);\n}\nfunction $c38e0f42709c826a$var$indicator(i) {\n    i = Math.abs(i);\n    const cent = i % 100;\n    if (cent >= 10 && cent <= 20) return \"th\";\n    const dec = i % 10;\n    if (dec === 1) return \"st\";\n    if (dec === 2) return \"nd\";\n    if (dec === 3) return \"rd\";\n    return \"th\";\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ function $c38e0f42709c826a$export$4befe9b5fa509a1b(service) {\n    if (service && service._delegate) return service._delegate;\n    else return service;\n}\n\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */ class $a83e7ccd68ca8d4e$export$16fa2f45be04daa8 {\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */ constructor(name, instanceFactory, type){\n        this.name = name;\n        this.instanceFactory = instanceFactory;\n        this.type = type;\n        this.multipleInstances = false;\n        /**\r\n         * Properties to be added to the service namespace\r\n         */ this.serviceProps = {};\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */ ;\n        this.onInstanceCreated = null;\n    }\n    setInstantiationMode(mode) {\n        this.instantiationMode = mode;\n        return this;\n    }\n    setMultipleInstances(multipleInstances) {\n        this.multipleInstances = multipleInstances;\n        return this;\n    }\n    setServiceProps(props) {\n        this.serviceProps = props;\n        return this;\n    }\n    setInstanceCreatedCallback(callback) {\n        this.onInstanceCreated = callback;\n        return this;\n    }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ const $a83e7ccd68ca8d4e$var$DEFAULT_ENTRY_NAME = \"[DEFAULT]\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */ class $a83e7ccd68ca8d4e$export$2881499e37b75b9a {\n    constructor(name, container){\n        this.name = name;\n        this.container = container;\n        this.component = null;\n        this.instances = new Map();\n        this.instancesDeferred = new Map();\n        this.instancesOptions = new Map();\n        this.onInitCallbacks = new Map();\n    }\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */ get(identifier) {\n        // if multipleInstances is not supported, use the default name\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\n            const deferred = new (0, $c38e0f42709c826a$export$85f6557964517f1a)();\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\n            if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) // initialize the service if it can be auto-initialized\n            try {\n                const instance = this.getOrInitializeService({\n                    instanceIdentifier: normalizedIdentifier\n                });\n                if (instance) deferred.resolve(instance);\n            } catch (e) {\n            // when the instance factory throws an exception during get(), it should not cause\n            // a fatal error. We just return the unresolved promise in this case.\n            }\n        }\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\n    }\n    getImmediate(options) {\n        var _a;\n        // if multipleInstances is not supported, use the default name\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\n        if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) try {\n            return this.getOrInitializeService({\n                instanceIdentifier: normalizedIdentifier\n            });\n        } catch (e) {\n            if (optional) return null;\n            else throw e;\n        }\n        else {\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n            if (optional) return null;\n            else throw Error(`Service ${this.name} is not available`);\n        }\n    }\n    getComponent() {\n        return this.component;\n    }\n    setComponent(component) {\n        if (component.name !== this.name) throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\n        if (this.component) throw Error(`Component for ${this.name} has already been provided`);\n        this.component = component;\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n        if (!this.shouldAutoInitialize()) return;\n        // if the service is eager, initialize the default instance\n        if ($a83e7ccd68ca8d4e$var$isComponentEager(component)) try {\n            this.getOrInitializeService({\n                instanceIdentifier: $a83e7ccd68ca8d4e$var$DEFAULT_ENTRY_NAME\n            });\n        } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n        }\n        // Create service instances for the pending promises and resolve them\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\n        // and all promises with resolve with it regardless of the identifier.\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()){\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n            try {\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n                const instance = this.getOrInitializeService({\n                    instanceIdentifier: normalizedIdentifier\n                });\n                instanceDeferred.resolve(instance);\n            } catch (e) {\n            // when the instance factory throws an exception, it should not cause\n            // a fatal error. We just leave the promise unresolved.\n            }\n        }\n    }\n    clearInstance(identifier = $a83e7ccd68ca8d4e$var$DEFAULT_ENTRY_NAME) {\n        this.instancesDeferred.delete(identifier);\n        this.instancesOptions.delete(identifier);\n        this.instances.delete(identifier);\n    }\n    // app.delete() will call this method on every provider to delete the services\n    // TODO: should we mark the provider as deleted?\n    async delete() {\n        const services = Array.from(this.instances.values());\n        await Promise.all([\n            ...services.filter((service)=>\"INTERNAL\" in service) // legacy services\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            .map((service)=>service.INTERNAL.delete()),\n            ...services.filter((service)=>\"_delete\" in service) // modularized services\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            .map((service)=>service._delete())\n        ]);\n    }\n    isComponentSet() {\n        return this.component != null;\n    }\n    isInitialized(identifier = $a83e7ccd68ca8d4e$var$DEFAULT_ENTRY_NAME) {\n        return this.instances.has(identifier);\n    }\n    getOptions(identifier = $a83e7ccd68ca8d4e$var$DEFAULT_ENTRY_NAME) {\n        return this.instancesOptions.get(identifier) || {};\n    }\n    initialize(opts = {}) {\n        const { options: options = {} } = opts;\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\n        if (this.isInitialized(normalizedIdentifier)) throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\n        if (!this.isComponentSet()) throw Error(`Component ${this.name} has not been registered yet`);\n        const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier,\n            options: options\n        });\n        // resolve any pending promise waiting for the service instance\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()){\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n            if (normalizedIdentifier === normalizedDeferredIdentifier) instanceDeferred.resolve(instance);\n        }\n        return instance;\n    }\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */ onInit(callback, identifier) {\n        var _a;\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\n        existingCallbacks.add(callback);\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n        const existingInstance = this.instances.get(normalizedIdentifier);\n        if (existingInstance) callback(existingInstance, normalizedIdentifier);\n        return ()=>{\n            existingCallbacks.delete(callback);\n        };\n    }\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */ invokeOnInitCallbacks(instance, identifier) {\n        const callbacks = this.onInitCallbacks.get(identifier);\n        if (!callbacks) return;\n        for (const callback of callbacks)try {\n            callback(instance, identifier);\n        } catch (_a) {\n        // ignore errors in the onInit callback\n        }\n    }\n    getOrInitializeService({ instanceIdentifier: instanceIdentifier, options: options = {} }) {\n        let instance = this.instances.get(instanceIdentifier);\n        if (!instance && this.component) {\n            instance = this.component.instanceFactory(this.container, {\n                instanceIdentifier: $a83e7ccd68ca8d4e$var$normalizeIdentifierForFactory(instanceIdentifier),\n                options: options\n            });\n            this.instances.set(instanceIdentifier, instance);\n            this.instancesOptions.set(instanceIdentifier, options);\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */ this.invokeOnInitCallbacks(instance, instanceIdentifier);\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */ if (this.component.onInstanceCreated) try {\n                this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\n            } catch (_a) {\n            // ignore errors in the onInstanceCreatedCallback\n            }\n        }\n        return instance || null;\n    }\n    normalizeInstanceIdentifier(identifier = $a83e7ccd68ca8d4e$var$DEFAULT_ENTRY_NAME) {\n        if (this.component) return this.component.multipleInstances ? identifier : $a83e7ccd68ca8d4e$var$DEFAULT_ENTRY_NAME;\n        else return identifier; // assume multiple instances are supported before the component is provided.\n    }\n    shouldAutoInitialize() {\n        return !!this.component && this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */ ;\n    }\n}\n// undefined should be passed to the service factory for the default instance\nfunction $a83e7ccd68ca8d4e$var$normalizeIdentifierForFactory(identifier) {\n    return identifier === $a83e7ccd68ca8d4e$var$DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\nfunction $a83e7ccd68ca8d4e$var$isComponentEager(component) {\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */ ;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */ class $a83e7ccd68ca8d4e$export$436a80eea5d5c0c5 {\n    constructor(name){\n        this.name = name;\n        this.providers = new Map();\n    }\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */ addComponent(component) {\n        const provider = this.getProvider(component.name);\n        if (provider.isComponentSet()) throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\n        provider.setComponent(component);\n    }\n    addOrOverwriteComponent(component) {\n        const provider = this.getProvider(component.name);\n        if (provider.isComponentSet()) // delete the existing provider from the container, so we can register the new component\n        this.providers.delete(component.name);\n        this.addComponent(component);\n    }\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */ getProvider(name) {\n        if (this.providers.has(name)) return this.providers.get(name);\n        // create a Provider for a service that hasn't registered with Firebase\n        const provider = new $a83e7ccd68ca8d4e$export$2881499e37b75b9a(name, this);\n        this.providers.set(name, provider);\n        return provider;\n    }\n    getProviders() {\n        return Array.from(this.providers.values());\n    }\n}\n\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A container for all of the Logger instances\r\n */ const $45b460d9de9b230f$var$instances = [];\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */ var $45b460d9de9b230f$export$243e62d78d3b544d;\n(function(LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n})($45b460d9de9b230f$export$243e62d78d3b544d || ($45b460d9de9b230f$export$243e62d78d3b544d = {}));\nconst $45b460d9de9b230f$var$levelStringToEnum = {\n    \"debug\": $45b460d9de9b230f$export$243e62d78d3b544d.DEBUG,\n    \"verbose\": $45b460d9de9b230f$export$243e62d78d3b544d.VERBOSE,\n    \"info\": $45b460d9de9b230f$export$243e62d78d3b544d.INFO,\n    \"warn\": $45b460d9de9b230f$export$243e62d78d3b544d.WARN,\n    \"error\": $45b460d9de9b230f$export$243e62d78d3b544d.ERROR,\n    \"silent\": $45b460d9de9b230f$export$243e62d78d3b544d.SILENT\n};\n/**\r\n * The default log level\r\n */ const $45b460d9de9b230f$var$defaultLogLevel = $45b460d9de9b230f$export$243e62d78d3b544d.INFO;\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */ const $45b460d9de9b230f$var$ConsoleMethod = {\n    [$45b460d9de9b230f$export$243e62d78d3b544d.DEBUG]: \"log\",\n    [$45b460d9de9b230f$export$243e62d78d3b544d.VERBOSE]: \"log\",\n    [$45b460d9de9b230f$export$243e62d78d3b544d.INFO]: \"info\",\n    [$45b460d9de9b230f$export$243e62d78d3b544d.WARN]: \"warn\",\n    [$45b460d9de9b230f$export$243e62d78d3b544d.ERROR]: \"error\"\n};\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */ const $45b460d9de9b230f$var$defaultLogHandler = (instance, logType, ...args)=>{\n    if (logType < instance.logLevel) return;\n    const now = new Date().toISOString();\n    const method = $45b460d9de9b230f$var$ConsoleMethod[logType];\n    if (method) console[method](`[${now}]  ${instance.name}:`, ...args);\n    else throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\n};\nclass $45b460d9de9b230f$export$efa9a398d6368992 {\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */ constructor(name){\n        this.name = name;\n        /**\r\n         * The log level of the given Logger instance.\r\n         */ this._logLevel = $45b460d9de9b230f$var$defaultLogLevel;\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */ this._logHandler = $45b460d9de9b230f$var$defaultLogHandler;\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */ this._userLogHandler = null;\n        /**\r\n         * Capture the current instance for later use\r\n         */ $45b460d9de9b230f$var$instances.push(this);\n    }\n    get logLevel() {\n        return this._logLevel;\n    }\n    set logLevel(val) {\n        if (!(val in $45b460d9de9b230f$export$243e62d78d3b544d)) throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n        this._logLevel = val;\n    }\n    // Workaround for setter/getter having to be the same type.\n    setLogLevel(val) {\n        this._logLevel = typeof val === \"string\" ? $45b460d9de9b230f$var$levelStringToEnum[val] : val;\n    }\n    get logHandler() {\n        return this._logHandler;\n    }\n    set logHandler(val) {\n        if (typeof val !== \"function\") throw new TypeError(\"Value assigned to `logHandler` must be a function\");\n        this._logHandler = val;\n    }\n    get userLogHandler() {\n        return this._userLogHandler;\n    }\n    set userLogHandler(val) {\n        this._userLogHandler = val;\n    }\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */ debug(...args) {\n        this._userLogHandler && this._userLogHandler(this, $45b460d9de9b230f$export$243e62d78d3b544d.DEBUG, ...args);\n        this._logHandler(this, $45b460d9de9b230f$export$243e62d78d3b544d.DEBUG, ...args);\n    }\n    log(...args) {\n        this._userLogHandler && this._userLogHandler(this, $45b460d9de9b230f$export$243e62d78d3b544d.VERBOSE, ...args);\n        this._logHandler(this, $45b460d9de9b230f$export$243e62d78d3b544d.VERBOSE, ...args);\n    }\n    info(...args) {\n        this._userLogHandler && this._userLogHandler(this, $45b460d9de9b230f$export$243e62d78d3b544d.INFO, ...args);\n        this._logHandler(this, $45b460d9de9b230f$export$243e62d78d3b544d.INFO, ...args);\n    }\n    warn(...args) {\n        this._userLogHandler && this._userLogHandler(this, $45b460d9de9b230f$export$243e62d78d3b544d.WARN, ...args);\n        this._logHandler(this, $45b460d9de9b230f$export$243e62d78d3b544d.WARN, ...args);\n    }\n    error(...args) {\n        this._userLogHandler && this._userLogHandler(this, $45b460d9de9b230f$export$243e62d78d3b544d.ERROR, ...args);\n        this._logHandler(this, $45b460d9de9b230f$export$243e62d78d3b544d.ERROR, ...args);\n    }\n}\nfunction $45b460d9de9b230f$export$c622e99c0ce7b1c9(level) {\n    $45b460d9de9b230f$var$instances.forEach((inst)=>{\n        inst.setLogLevel(level);\n    });\n}\nfunction $45b460d9de9b230f$export$29577d29c84db5f6(logCallback, options) {\n    for (const instance of $45b460d9de9b230f$var$instances){\n        let customLogLevel = null;\n        if (options && options.level) customLogLevel = $45b460d9de9b230f$var$levelStringToEnum[options.level];\n        if (logCallback === null) instance.userLogHandler = null;\n        else instance.userLogHandler = (instance, level, ...args)=>{\n            const message = args.map((arg)=>{\n                if (arg == null) return null;\n                else if (typeof arg === \"string\") return arg;\n                else if (typeof arg === \"number\" || typeof arg === \"boolean\") return arg.toString();\n                else if (arg instanceof Error) return arg.message;\n                else try {\n                    return JSON.stringify(arg);\n                } catch (ignored) {\n                    return null;\n                }\n            }).filter((arg)=>arg).join(\" \");\n            if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) logCallback({\n                level: $45b460d9de9b230f$export$243e62d78d3b544d[level].toLowerCase(),\n                message: message,\n                args: args,\n                type: instance.name\n            });\n        };\n    }\n}\n\n\n\nconst $e67bf383372d72f4$export$23f2a1d2818174ef = (object, constructors)=>constructors.some((c)=>object instanceof c);\nlet $e67bf383372d72f4$var$idbProxyableTypes;\nlet $e67bf383372d72f4$var$cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction $e67bf383372d72f4$var$getIdbProxyableTypes() {\n    return $e67bf383372d72f4$var$idbProxyableTypes || ($e67bf383372d72f4$var$idbProxyableTypes = [\n        IDBDatabase,\n        IDBObjectStore,\n        IDBIndex,\n        IDBCursor,\n        IDBTransaction\n    ]);\n}\n// This is a function to prevent it throwing up in node environments.\nfunction $e67bf383372d72f4$var$getCursorAdvanceMethods() {\n    return $e67bf383372d72f4$var$cursorAdvanceMethods || ($e67bf383372d72f4$var$cursorAdvanceMethods = [\n        IDBCursor.prototype.advance,\n        IDBCursor.prototype.continue,\n        IDBCursor.prototype.continuePrimaryKey\n    ]);\n}\nconst $e67bf383372d72f4$var$cursorRequestMap = new WeakMap();\nconst $e67bf383372d72f4$var$transactionDoneMap = new WeakMap();\nconst $e67bf383372d72f4$var$transactionStoreNamesMap = new WeakMap();\nconst $e67bf383372d72f4$var$transformCache = new WeakMap();\nconst $e67bf383372d72f4$export$407448d2b89b1813 = new WeakMap();\nfunction $e67bf383372d72f4$var$promisifyRequest(request) {\n    const promise = new Promise((resolve, reject)=>{\n        const unlisten = ()=>{\n            request.removeEventListener(\"success\", success);\n            request.removeEventListener(\"error\", error);\n        };\n        const success = ()=>{\n            resolve($e67bf383372d72f4$export$efccba1c4a2ef57b(request.result));\n            unlisten();\n        };\n        const error = ()=>{\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener(\"success\", success);\n        request.addEventListener(\"error\", error);\n    });\n    promise.then((value)=>{\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) $e67bf383372d72f4$var$cursorRequestMap.set(value, request);\n    // Catching to avoid \"Uncaught Promise exceptions\"\n    }).catch(()=>{});\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    $e67bf383372d72f4$export$407448d2b89b1813.set(promise, request);\n    return promise;\n}\nfunction $e67bf383372d72f4$var$cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if ($e67bf383372d72f4$var$transactionDoneMap.has(tx)) return;\n    const done = new Promise((resolve, reject)=>{\n        const unlisten = ()=>{\n            tx.removeEventListener(\"complete\", complete);\n            tx.removeEventListener(\"error\", error);\n            tx.removeEventListener(\"abort\", error);\n        };\n        const complete = ()=>{\n            resolve();\n            unlisten();\n        };\n        const error = ()=>{\n            reject(tx.error || new DOMException(\"AbortError\", \"AbortError\"));\n            unlisten();\n        };\n        tx.addEventListener(\"complete\", complete);\n        tx.addEventListener(\"error\", error);\n        tx.addEventListener(\"abort\", error);\n    });\n    // Cache it for later retrieval.\n    $e67bf383372d72f4$var$transactionDoneMap.set(tx, done);\n}\nlet $e67bf383372d72f4$var$idbProxyTraps = {\n    get (target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === \"done\") return $e67bf383372d72f4$var$transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === \"objectStoreNames\") return target.objectStoreNames || $e67bf383372d72f4$var$transactionStoreNamesMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === \"store\") return receiver.objectStoreNames[1] ? undefined : receiver.objectStore(receiver.objectStoreNames[0]);\n        }\n        // Else transform whatever we get back.\n        return $e67bf383372d72f4$export$efccba1c4a2ef57b(target[prop]);\n    },\n    set (target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has (target, prop) {\n        if (target instanceof IDBTransaction && (prop === \"done\" || prop === \"store\")) return true;\n        return prop in target;\n    }\n};\nfunction $e67bf383372d72f4$export$43caf9889c228507(callback) {\n    $e67bf383372d72f4$var$idbProxyTraps = callback($e67bf383372d72f4$var$idbProxyTraps);\n}\nfunction $e67bf383372d72f4$var$wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction && !(\"objectStoreNames\" in IDBTransaction.prototype)) return function(storeNames, ...args) {\n        const tx = func.call($e67bf383372d72f4$export$3b14a55fb2447963(this), storeNames, ...args);\n        $e67bf383372d72f4$var$transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [\n            storeNames\n        ]);\n        return $e67bf383372d72f4$export$efccba1c4a2ef57b(tx);\n    };\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if ($e67bf383372d72f4$var$getCursorAdvanceMethods().includes(func)) return function(...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        func.apply($e67bf383372d72f4$export$3b14a55fb2447963(this), args);\n        return $e67bf383372d72f4$export$efccba1c4a2ef57b($e67bf383372d72f4$var$cursorRequestMap.get(this));\n    };\n    return function(...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return $e67bf383372d72f4$export$efccba1c4a2ef57b(func.apply($e67bf383372d72f4$export$3b14a55fb2447963(this), args));\n    };\n}\nfunction $e67bf383372d72f4$var$transformCachableValue(value) {\n    if (typeof value === \"function\") return $e67bf383372d72f4$var$wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction) $e67bf383372d72f4$var$cacheDonePromiseForTransaction(value);\n    if ($e67bf383372d72f4$export$23f2a1d2818174ef(value, $e67bf383372d72f4$var$getIdbProxyableTypes())) return new Proxy(value, $e67bf383372d72f4$var$idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction $e67bf383372d72f4$export$efccba1c4a2ef57b(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest) return $e67bf383372d72f4$var$promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if ($e67bf383372d72f4$var$transformCache.has(value)) return $e67bf383372d72f4$var$transformCache.get(value);\n    const newValue = $e67bf383372d72f4$var$transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        $e67bf383372d72f4$var$transformCache.set(value, newValue);\n        $e67bf383372d72f4$export$407448d2b89b1813.set(newValue, value);\n    }\n    return newValue;\n}\nconst $e67bf383372d72f4$export$3b14a55fb2447963 = (value)=>$e67bf383372d72f4$export$407448d2b89b1813.get(value);\n\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */ function $da032767b57a4aa4$export$ca0ed41b1a2af7e(name, version, { blocked: blocked, upgrade: upgrade, blocking: blocking, terminated: terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = (0, $e67bf383372d72f4$export$efccba1c4a2ef57b)(request);\n    if (upgrade) request.addEventListener(\"upgradeneeded\", (event)=>{\n        upgrade((0, $e67bf383372d72f4$export$efccba1c4a2ef57b)(request.result), event.oldVersion, event.newVersion, (0, $e67bf383372d72f4$export$efccba1c4a2ef57b)(request.transaction), event);\n    });\n    if (blocked) request.addEventListener(\"blocked\", (event)=>blocked(// Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    openPromise.then((db)=>{\n        if (terminated) db.addEventListener(\"close\", ()=>terminated());\n        if (blocking) db.addEventListener(\"versionchange\", (event)=>blocking(event.oldVersion, event.newVersion, event));\n    }).catch(()=>{});\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */ function $da032767b57a4aa4$export$9d6df0ac66a98bb2(name, { blocked: blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) request.addEventListener(\"blocked\", (event)=>blocked(// Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    return (0, $e67bf383372d72f4$export$efccba1c4a2ef57b)(request).then(()=>undefined);\n}\nconst $da032767b57a4aa4$var$readMethods = [\n    \"get\",\n    \"getKey\",\n    \"getAll\",\n    \"getAllKeys\",\n    \"count\"\n];\nconst $da032767b57a4aa4$var$writeMethods = [\n    \"put\",\n    \"add\",\n    \"delete\",\n    \"clear\"\n];\nconst $da032767b57a4aa4$var$cachedMethods = new Map();\nfunction $da032767b57a4aa4$var$getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase && !(prop in target) && typeof prop === \"string\")) return;\n    if ($da032767b57a4aa4$var$cachedMethods.get(prop)) return $da032767b57a4aa4$var$cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, \"\");\n    const useIndex = prop !== targetFuncName;\n    const isWrite = $da032767b57a4aa4$var$writeMethods.includes(targetFuncName);\n    if (// Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) || !(isWrite || $da032767b57a4aa4$var$readMethods.includes(targetFuncName))) return;\n    const method = async function(storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? \"readwrite\" : \"readonly\");\n        let target = tx.store;\n        if (useIndex) target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done\n        ]))[0];\n    };\n    $da032767b57a4aa4$var$cachedMethods.set(prop, method);\n    return method;\n}\n(0, $e67bf383372d72f4$export$43caf9889c228507)((oldTraps)=>({\n        ...oldTraps,\n        get: (target, prop, receiver)=>$da032767b57a4aa4$var$getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n        has: (target, prop)=>!!$da032767b57a4aa4$var$getMethod(target, prop) || oldTraps.has(target, prop)\n    }));\n\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ class $57d436074e210fb5$var$PlatformLoggerServiceImpl {\n    constructor(container){\n        this.container = container;\n    }\n    // In initial implementation, this will be called by installations on\n    // auth token refresh, and installations will send this string.\n    getPlatformInfoString() {\n        const providers = this.container.getProviders();\n        // Loop through providers and get library/version pairs from any that are\n        // version components.\n        return providers.map((provider)=>{\n            if ($57d436074e210fb5$var$isVersionServiceProvider(provider)) {\n                const service = provider.getImmediate();\n                return `${service.library}/${service.version}`;\n            } else return null;\n        }).filter((logString)=>logString).join(\" \");\n    }\n}\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */ function $57d436074e210fb5$var$isVersionServiceProvider(provider) {\n    const component = provider.getComponent();\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */ ;\n}\nconst $57d436074e210fb5$var$name$o = \"@firebase/app\";\nconst $57d436074e210fb5$var$version$1 = \"0.10.1\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ const $57d436074e210fb5$var$logger = new (0, $45b460d9de9b230f$export$efa9a398d6368992)(\"@firebase/app\");\nconst $57d436074e210fb5$var$name$n = \"@firebase/app-compat\";\nconst $57d436074e210fb5$var$name$m = \"@firebase/analytics-compat\";\nconst $57d436074e210fb5$var$name$l = \"@firebase/analytics\";\nconst $57d436074e210fb5$var$name$k = \"@firebase/app-check-compat\";\nconst $57d436074e210fb5$var$name$j = \"@firebase/app-check\";\nconst $57d436074e210fb5$var$name$i = \"@firebase/auth\";\nconst $57d436074e210fb5$var$name$h = \"@firebase/auth-compat\";\nconst $57d436074e210fb5$var$name$g = \"@firebase/database\";\nconst $57d436074e210fb5$var$name$f = \"@firebase/database-compat\";\nconst $57d436074e210fb5$var$name$e = \"@firebase/functions\";\nconst $57d436074e210fb5$var$name$d = \"@firebase/functions-compat\";\nconst $57d436074e210fb5$var$name$c = \"@firebase/installations\";\nconst $57d436074e210fb5$var$name$b = \"@firebase/installations-compat\";\nconst $57d436074e210fb5$var$name$a = \"@firebase/messaging\";\nconst $57d436074e210fb5$var$name$9 = \"@firebase/messaging-compat\";\nconst $57d436074e210fb5$var$name$8 = \"@firebase/performance\";\nconst $57d436074e210fb5$var$name$7 = \"@firebase/performance-compat\";\nconst $57d436074e210fb5$var$name$6 = \"@firebase/remote-config\";\nconst $57d436074e210fb5$var$name$5 = \"@firebase/remote-config-compat\";\nconst $57d436074e210fb5$var$name$4 = \"@firebase/storage\";\nconst $57d436074e210fb5$var$name$3 = \"@firebase/storage-compat\";\nconst $57d436074e210fb5$var$name$2 = \"@firebase/firestore\";\nconst $57d436074e210fb5$var$name$1 = \"@firebase/firestore-compat\";\nconst $57d436074e210fb5$var$name = \"firebase\";\nconst $57d436074e210fb5$var$version = \"10.11.0\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The default app name\r\n *\r\n * @internal\r\n */ const $57d436074e210fb5$export$9f30fa0c10967f7f = \"[DEFAULT]\";\nconst $57d436074e210fb5$var$PLATFORM_LOG_STRING = {\n    [$57d436074e210fb5$var$name$o]: \"fire-core\",\n    [$57d436074e210fb5$var$name$n]: \"fire-core-compat\",\n    [$57d436074e210fb5$var$name$l]: \"fire-analytics\",\n    [$57d436074e210fb5$var$name$m]: \"fire-analytics-compat\",\n    [$57d436074e210fb5$var$name$j]: \"fire-app-check\",\n    [$57d436074e210fb5$var$name$k]: \"fire-app-check-compat\",\n    [$57d436074e210fb5$var$name$i]: \"fire-auth\",\n    [$57d436074e210fb5$var$name$h]: \"fire-auth-compat\",\n    [$57d436074e210fb5$var$name$g]: \"fire-rtdb\",\n    [$57d436074e210fb5$var$name$f]: \"fire-rtdb-compat\",\n    [$57d436074e210fb5$var$name$e]: \"fire-fn\",\n    [$57d436074e210fb5$var$name$d]: \"fire-fn-compat\",\n    [$57d436074e210fb5$var$name$c]: \"fire-iid\",\n    [$57d436074e210fb5$var$name$b]: \"fire-iid-compat\",\n    [$57d436074e210fb5$var$name$a]: \"fire-fcm\",\n    [$57d436074e210fb5$var$name$9]: \"fire-fcm-compat\",\n    [$57d436074e210fb5$var$name$8]: \"fire-perf\",\n    [$57d436074e210fb5$var$name$7]: \"fire-perf-compat\",\n    [$57d436074e210fb5$var$name$6]: \"fire-rc\",\n    [$57d436074e210fb5$var$name$5]: \"fire-rc-compat\",\n    [$57d436074e210fb5$var$name$4]: \"fire-gcs\",\n    [$57d436074e210fb5$var$name$3]: \"fire-gcs-compat\",\n    [$57d436074e210fb5$var$name$2]: \"fire-fst\",\n    [$57d436074e210fb5$var$name$1]: \"fire-fst-compat\",\n    \"fire-js\": \"fire-js\",\n    [$57d436074e210fb5$var$name]: \"fire-js-all\"\n};\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @internal\r\n */ const $57d436074e210fb5$export$b4e3c36c855b14b5 = new Map();\n/**\r\n * @internal\r\n */ const $57d436074e210fb5$export$fb03ad8d3d5c5f76 = new Map();\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst $57d436074e210fb5$export$9566bce3835c0f28 = new Map();\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */ function $57d436074e210fb5$export$fa5244b94c62d36a(app, component) {\n    try {\n        app.container.addComponent(component);\n    } catch (e) {\n        $57d436074e210fb5$var$logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n    }\n}\n/**\r\n *\r\n * @internal\r\n */ function $57d436074e210fb5$export$4393112b42e2b41d(app, component) {\n    app.container.addOrOverwriteComponent(component);\n}\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */ function $57d436074e210fb5$export$c930050e7bb63965(component) {\n    const componentName = component.name;\n    if ($57d436074e210fb5$export$9566bce3835c0f28.has(componentName)) {\n        $57d436074e210fb5$var$logger.debug(`There were multiple attempts to register component ${componentName}.`);\n        return false;\n    }\n    $57d436074e210fb5$export$9566bce3835c0f28.set(componentName, component);\n    // add the component to existing app instances\n    for (const app of $57d436074e210fb5$export$b4e3c36c855b14b5.values())$57d436074e210fb5$export$fa5244b94c62d36a(app, component);\n    for (const serverApp of $57d436074e210fb5$export$fb03ad8d3d5c5f76.values())$57d436074e210fb5$export$fa5244b94c62d36a(serverApp, component);\n    return true;\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */ function $57d436074e210fb5$export$fa0d6da0f5838f50(app, name) {\n    const heartbeatController = app.container.getProvider(\"heartbeat\").getImmediate({\n        optional: true\n    });\n    if (heartbeatController) heartbeatController.triggerHeartbeat();\n    return app.container.getProvider(name);\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */ function $57d436074e210fb5$export$48d18de2ff1c45a5(app, name, instanceIdentifier = $57d436074e210fb5$export$9f30fa0c10967f7f) {\n    $57d436074e210fb5$export$fa0d6da0f5838f50(app, name).clearInstance(instanceIdentifier);\n}\n/**\r\n *\r\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\r\n *\r\n * @returns true if the provide object is of type FirebaseApp.\r\n *\r\n * @internal\r\n */ function $57d436074e210fb5$export$110778f8e98b8257(obj) {\n    return obj.options !== undefined;\n}\n/**\r\n *\r\n * @param obj - an object of type FirebaseApp.\r\n *\r\n * @returns true if the provided object is of type FirebaseServerAppImpl.\r\n *\r\n * @internal\r\n */ function $57d436074e210fb5$export$643c8bc6c389f34e(obj) {\n    return obj.settings !== undefined;\n}\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */ function $57d436074e210fb5$export$3685d89b9c3cdfaf() {\n    $57d436074e210fb5$export$9566bce3835c0f28.clear();\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ const $57d436074e210fb5$var$ERRORS = {\n    [\"no-app\" /* AppError.NO_APP */ ]: \"No Firebase App '{$appName}' has been created - call initializeApp() first\",\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */ ]: \"Illegal App name: '{$appName}'\",\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */ ]: \"Firebase App named '{$appName}' already exists with different options or config\",\n    [\"app-deleted\" /* AppError.APP_DELETED */ ]: \"Firebase App named '{$appName}' already deleted\",\n    [\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */ ]: \"Firebase Server App has been deleted\",\n    [\"no-options\" /* AppError.NO_OPTIONS */ ]: \"Need to provide options, when not being deployed to hosting via source.\",\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */ ]: \"firebase.{$appName}() takes either no argument or a Firebase App instance.\",\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */ ]: \"First argument to `onLog` must be null or a function.\",\n    [\"idb-open\" /* AppError.IDB_OPEN */ ]: \"Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.\",\n    [\"idb-get\" /* AppError.IDB_GET */ ]: \"Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.\",\n    [\"idb-set\" /* AppError.IDB_WRITE */ ]: \"Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.\",\n    [\"idb-delete\" /* AppError.IDB_DELETE */ ]: \"Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.\",\n    [\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */ ]: \"FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.\",\n    [\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */ ]: \"FirebaseServerApp is not for use in browser environments.\"\n};\nconst $57d436074e210fb5$var$ERROR_FACTORY = new (0, $c38e0f42709c826a$export$3fa6e1b18a3b2d40)(\"app\", \"Firebase\", $57d436074e210fb5$var$ERRORS);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ class $57d436074e210fb5$var$FirebaseAppImpl {\n    constructor(options, config, container){\n        this._isDeleted = false;\n        this._options = Object.assign({}, options);\n        this._config = Object.assign({}, config);\n        this._name = config.name;\n        this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n        this._container = container;\n        this.container.addComponent(new (0, $a83e7ccd68ca8d4e$export$16fa2f45be04daa8)(\"app\", ()=>this, \"PUBLIC\" /* ComponentType.PUBLIC */ ));\n    }\n    get automaticDataCollectionEnabled() {\n        this.checkDestroyed();\n        return this._automaticDataCollectionEnabled;\n    }\n    set automaticDataCollectionEnabled(val) {\n        this.checkDestroyed();\n        this._automaticDataCollectionEnabled = val;\n    }\n    get name() {\n        this.checkDestroyed();\n        return this._name;\n    }\n    get options() {\n        this.checkDestroyed();\n        return this._options;\n    }\n    get config() {\n        this.checkDestroyed();\n        return this._config;\n    }\n    get container() {\n        return this._container;\n    }\n    get isDeleted() {\n        return this._isDeleted;\n    }\n    set isDeleted(val) {\n        this._isDeleted = val;\n    }\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */ checkDestroyed() {\n        if (this.isDeleted) throw $57d436074e210fb5$var$ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */ , {\n            appName: this._name\n        });\n    }\n}\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ class $57d436074e210fb5$var$FirebaseServerAppImpl extends $57d436074e210fb5$var$FirebaseAppImpl {\n    constructor(options, serverConfig, name, container){\n        // Build configuration parameters for the FirebaseAppImpl base class.\n        const automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined ? serverConfig.automaticDataCollectionEnabled : false;\n        // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n        const config = {\n            name: name,\n            automaticDataCollectionEnabled: automaticDataCollectionEnabled\n        };\n        if (options.apiKey !== undefined) // Construct the parent FirebaseAppImp object.\n        super(options, config, container);\n        else {\n            const appImpl = options;\n            super(appImpl.options, config, container);\n        }\n        // Now construct the data for the FirebaseServerAppImpl.\n        this._serverConfig = Object.assign({\n            automaticDataCollectionEnabled: automaticDataCollectionEnabled\n        }, serverConfig);\n        this._finalizationRegistry = new FinalizationRegistry(()=>{\n            this.automaticCleanup();\n        });\n        this._refCount = 0;\n        this.incRefCount(this._serverConfig.releaseOnDeref);\n        // Do not retain a hard reference to the dref object, otherwise the FinalizationRegisry\n        // will never trigger.\n        this._serverConfig.releaseOnDeref = undefined;\n        serverConfig.releaseOnDeref = undefined;\n        $57d436074e210fb5$export$d29d5299a7137abc($57d436074e210fb5$var$name$o, $57d436074e210fb5$var$version$1, \"serverapp\");\n    }\n    toJSON() {\n        return undefined;\n    }\n    get refCount() {\n        return this._refCount;\n    }\n    // Increment the reference count of this server app. If an object is provided, register it\n    // with the finalization registry.\n    incRefCount(obj) {\n        if (this.isDeleted) return;\n        this._refCount++;\n        if (obj !== undefined) this._finalizationRegistry.register(obj, this);\n    }\n    // Decrement the reference count.\n    decRefCount() {\n        if (this.isDeleted) return 0;\n        return --this._refCount;\n    }\n    // Invoked by the FinalizationRegistry callback to note that this app should go through its\n    // reference counts and delete itself if no reference count remain. The coordinating logic that\n    // handles this is in deleteApp(...).\n    automaticCleanup() {\n        $57d436074e210fb5$export$6eec44aa53d5ea34(this);\n    }\n    get settings() {\n        this.checkDestroyed();\n        return this._serverConfig;\n    }\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */ checkDestroyed() {\n        if (this.isDeleted) throw $57d436074e210fb5$var$ERROR_FACTORY.create(\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */ );\n    }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */ const $57d436074e210fb5$export$31499a9cd224b78c = $57d436074e210fb5$var$version;\nfunction $57d436074e210fb5$export$c55cfd413944906d(_options, rawConfig = {}) {\n    let options = _options;\n    if (typeof rawConfig !== \"object\") {\n        const name = rawConfig;\n        rawConfig = {\n            name: name\n        };\n    }\n    const config = Object.assign({\n        name: $57d436074e210fb5$export$9f30fa0c10967f7f,\n        automaticDataCollectionEnabled: false\n    }, rawConfig);\n    const name = config.name;\n    if (typeof name !== \"string\" || !name) throw $57d436074e210fb5$var$ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */ , {\n        appName: String(name)\n    });\n    options || (options = (0, $c38e0f42709c826a$export$3dfb6827a9f89756)());\n    if (!options) throw $57d436074e210fb5$var$ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */ );\n    const existingApp = $57d436074e210fb5$export$b4e3c36c855b14b5.get(name);\n    if (existingApp) {\n        // return the existing app if options and config deep equal the ones in the existing app.\n        if ((0, $c38e0f42709c826a$export$9cb4719e2e525b7a)(options, existingApp.options) && (0, $c38e0f42709c826a$export$9cb4719e2e525b7a)(config, existingApp.config)) return existingApp;\n        else throw $57d436074e210fb5$var$ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */ , {\n            appName: name\n        });\n    }\n    const container = new (0, $a83e7ccd68ca8d4e$export$436a80eea5d5c0c5)(name);\n    for (const component of $57d436074e210fb5$export$9566bce3835c0f28.values())container.addComponent(component);\n    const newApp = new $57d436074e210fb5$var$FirebaseAppImpl(options, config, container);\n    $57d436074e210fb5$export$b4e3c36c855b14b5.set(name, newApp);\n    return newApp;\n}\nfunction $57d436074e210fb5$export$45a407ab953b136b(_options, _serverAppConfig) {\n    if ((0, $c38e0f42709c826a$export$4e09c449d6c407f7)()) // FirebaseServerApp isn't designed to be run in browsers.\n    throw $57d436074e210fb5$var$ERROR_FACTORY.create(\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */ );\n    if (_serverAppConfig.automaticDataCollectionEnabled === undefined) _serverAppConfig.automaticDataCollectionEnabled = false;\n    let appOptions;\n    if ($57d436074e210fb5$export$110778f8e98b8257(_options)) appOptions = _options.options;\n    else appOptions = _options;\n    // Build an app name based on a hash of the configuration options.\n    const nameObj = Object.assign(Object.assign({}, _serverAppConfig), appOptions);\n    // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n    // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n    if (nameObj.releaseOnDeref !== undefined) delete nameObj.releaseOnDeref;\n    const hashCode = (s)=>{\n        return [\n            ...s\n        ].reduce((hash, c)=>Math.imul(31, hash) + c.charCodeAt(0) | 0, 0);\n    };\n    if (_serverAppConfig.releaseOnDeref !== undefined) {\n        if (typeof FinalizationRegistry === \"undefined\") throw $57d436074e210fb5$var$ERROR_FACTORY.create(\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */ , {});\n    }\n    const nameString = \"\" + hashCode(JSON.stringify(nameObj));\n    const existingApp = $57d436074e210fb5$export$fb03ad8d3d5c5f76.get(nameString);\n    if (existingApp) {\n        existingApp.incRefCount(_serverAppConfig.releaseOnDeref);\n        return existingApp;\n    }\n    const container = new (0, $a83e7ccd68ca8d4e$export$436a80eea5d5c0c5)(nameString);\n    for (const component of $57d436074e210fb5$export$9566bce3835c0f28.values())container.addComponent(component);\n    const newApp = new $57d436074e210fb5$var$FirebaseServerAppImpl(appOptions, _serverAppConfig, nameString, container);\n    $57d436074e210fb5$export$fb03ad8d3d5c5f76.set(nameString, newApp);\n    return newApp;\n}\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */ function $57d436074e210fb5$export$f9962582c9e66d99(name = $57d436074e210fb5$export$9f30fa0c10967f7f) {\n    const app = $57d436074e210fb5$export$b4e3c36c855b14b5.get(name);\n    if (!app && name === $57d436074e210fb5$export$9f30fa0c10967f7f && (0, $c38e0f42709c826a$export$3dfb6827a9f89756)()) return $57d436074e210fb5$export$c55cfd413944906d();\n    if (!app) throw $57d436074e210fb5$var$ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */ , {\n        appName: name\n    });\n    return app;\n}\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */ function $57d436074e210fb5$export$68ddedf7d44b3bdf() {\n    return Array.from($57d436074e210fb5$export$b4e3c36c855b14b5.values());\n}\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */ async function $57d436074e210fb5$export$6eec44aa53d5ea34(app) {\n    let cleanupProviders = false;\n    const name = app.name;\n    if ($57d436074e210fb5$export$b4e3c36c855b14b5.has(name)) {\n        cleanupProviders = true;\n        $57d436074e210fb5$export$b4e3c36c855b14b5.delete(name);\n    } else if ($57d436074e210fb5$export$fb03ad8d3d5c5f76.has(name)) {\n        const firebaseServerApp = app;\n        if (firebaseServerApp.decRefCount() <= 0) {\n            $57d436074e210fb5$export$fb03ad8d3d5c5f76.delete(name);\n            cleanupProviders = true;\n        }\n    }\n    if (cleanupProviders) {\n        await Promise.all(app.container.getProviders().map((provider)=>provider.delete()));\n        app.isDeleted = true;\n    }\n}\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */ function $57d436074e210fb5$export$d29d5299a7137abc(libraryKeyOrName, version, variant) {\n    var _a;\n    // TODO: We can use this check to whitelist strings when/if we set up\n    // a good whitelist system.\n    let library = (_a = $57d436074e210fb5$var$PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\n    if (variant) library += `-${variant}`;\n    const libraryMismatch = library.match(/\\s|\\//);\n    const versionMismatch = version.match(/\\s|\\//);\n    if (libraryMismatch || versionMismatch) {\n        const warning = [\n            `Unable to register library \"${library}\" with version \"${version}\":`\n        ];\n        if (libraryMismatch) warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n        if (libraryMismatch && versionMismatch) warning.push(\"and\");\n        if (versionMismatch) warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\n        $57d436074e210fb5$var$logger.warn(warning.join(\" \"));\n        return;\n    }\n    $57d436074e210fb5$export$c930050e7bb63965(new (0, $a83e7ccd68ca8d4e$export$16fa2f45be04daa8)(`${library}-version`, ()=>({\n            library: library,\n            version: version\n        }), \"VERSION\" /* ComponentType.VERSION */ ));\n}\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */ function $57d436074e210fb5$export$a82ad227dc8163dc(logCallback, options) {\n    if (logCallback !== null && typeof logCallback !== \"function\") throw $57d436074e210fb5$var$ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */ );\n    (0, $45b460d9de9b230f$export$29577d29c84db5f6)(logCallback, options);\n}\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */ function $57d436074e210fb5$export$c622e99c0ce7b1c9(logLevel) {\n    (0, $45b460d9de9b230f$export$c622e99c0ce7b1c9)(logLevel);\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ const $57d436074e210fb5$var$DB_NAME = \"firebase-heartbeat-database\";\nconst $57d436074e210fb5$var$DB_VERSION = 1;\nconst $57d436074e210fb5$var$STORE_NAME = \"firebase-heartbeat-store\";\nlet $57d436074e210fb5$var$dbPromise = null;\nfunction $57d436074e210fb5$var$getDbPromise() {\n    if (!$57d436074e210fb5$var$dbPromise) $57d436074e210fb5$var$dbPromise = (0, $da032767b57a4aa4$export$ca0ed41b1a2af7e)($57d436074e210fb5$var$DB_NAME, $57d436074e210fb5$var$DB_VERSION, {\n        upgrade: (db, oldVersion)=>{\n            // We don't use 'break' in this switch statement, the fall-through\n            // behavior is what we want, because if there are multiple versions between\n            // the old version and the current version, we want ALL the migrations\n            // that correspond to those versions to run, not only the last one.\n            // eslint-disable-next-line default-case\n            switch(oldVersion){\n                case 0:\n                    try {\n                        db.createObjectStore($57d436074e210fb5$var$STORE_NAME);\n                    } catch (e) {\n                        // Safari/iOS browsers throw occasional exceptions on\n                        // db.createObjectStore() that may be a bug. Avoid blocking\n                        // the rest of the app functionality.\n                        console.warn(e);\n                    }\n            }\n        }\n    }).catch((e)=>{\n        throw $57d436074e210fb5$var$ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */ , {\n            originalErrorMessage: e.message\n        });\n    });\n    return $57d436074e210fb5$var$dbPromise;\n}\nasync function $57d436074e210fb5$var$readHeartbeatsFromIndexedDB(app) {\n    try {\n        const db = await $57d436074e210fb5$var$getDbPromise();\n        const tx = db.transaction($57d436074e210fb5$var$STORE_NAME);\n        const result = await tx.objectStore($57d436074e210fb5$var$STORE_NAME).get($57d436074e210fb5$var$computeKey(app));\n        // We already have the value but tx.done can throw,\n        // so we need to await it here to catch errors\n        await tx.done;\n        return result;\n    } catch (e) {\n        if (e instanceof (0, $c38e0f42709c826a$export$dd24e9cd51226c56)) $57d436074e210fb5$var$logger.warn(e.message);\n        else {\n            const idbGetError = $57d436074e210fb5$var$ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */ , {\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n            });\n            $57d436074e210fb5$var$logger.warn(idbGetError.message);\n        }\n    }\n}\nasync function $57d436074e210fb5$var$writeHeartbeatsToIndexedDB(app, heartbeatObject) {\n    try {\n        const db = await $57d436074e210fb5$var$getDbPromise();\n        const tx = db.transaction($57d436074e210fb5$var$STORE_NAME, \"readwrite\");\n        const objectStore = tx.objectStore($57d436074e210fb5$var$STORE_NAME);\n        await objectStore.put(heartbeatObject, $57d436074e210fb5$var$computeKey(app));\n        await tx.done;\n    } catch (e) {\n        if (e instanceof (0, $c38e0f42709c826a$export$dd24e9cd51226c56)) $57d436074e210fb5$var$logger.warn(e.message);\n        else {\n            const idbGetError = $57d436074e210fb5$var$ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */ , {\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n            });\n            $57d436074e210fb5$var$logger.warn(idbGetError.message);\n        }\n    }\n}\nfunction $57d436074e210fb5$var$computeKey(app) {\n    return `${app.name}!${app.options.appId}`;\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ const $57d436074e210fb5$var$MAX_HEADER_BYTES = 1024;\n// 30 days\nconst $57d436074e210fb5$var$STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 2592000000;\nclass $57d436074e210fb5$var$HeartbeatServiceImpl {\n    constructor(container){\n        this.container = container;\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */ this._heartbeatsCache = null;\n        const app = this.container.getProvider(\"app\").getImmediate();\n        this._storage = new $57d436074e210fb5$var$HeartbeatStorageImpl(app);\n        this._heartbeatsCachePromise = this._storage.read().then((result)=>{\n            this._heartbeatsCache = result;\n            return result;\n        });\n    }\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */ async triggerHeartbeat() {\n        var _a, _b;\n        const platformLogger = this.container.getProvider(\"platform-logger\").getImmediate();\n        // This is the \"Firebase user agent\" string from the platform logger\n        // service, not the browser user agent.\n        const agent = platformLogger.getPlatformInfoString();\n        const date = $57d436074e210fb5$var$getUTCDateString();\n        if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null) {\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\n            // If we failed to construct a heartbeats cache, then return immediately.\n            if (((_b = this._heartbeatsCache) === null || _b === void 0 ? void 0 : _b.heartbeats) == null) return;\n        }\n        // Do not store a heartbeat if one is already stored for this day\n        // or if a header has already been sent today.\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some((singleDateHeartbeat)=>singleDateHeartbeat.date === date)) return;\n        else // There is no entry for this date. Create one.\n        this._heartbeatsCache.heartbeats.push({\n            date: date,\n            agent: agent\n        });\n        // Remove entries older than 30 days.\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter((singleDateHeartbeat)=>{\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n            const now = Date.now();\n            return now - hbTimestamp <= $57d436074e210fb5$var$STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n        });\n        return this._storage.overwrite(this._heartbeatsCache);\n    }\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */ async getHeartbeatsHeader() {\n        var _a;\n        if (this._heartbeatsCache === null) await this._heartbeatsCachePromise;\n        // If it's still null or the array is empty, there is no data to send.\n        if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null || this._heartbeatsCache.heartbeats.length === 0) return \"\";\n        const date = $57d436074e210fb5$var$getUTCDateString();\n        // Extract as many heartbeats from the cache as will fit under the size limit.\n        const { heartbeatsToSend: heartbeatsToSend, unsentEntries: unsentEntries } = $57d436074e210fb5$var$extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\n        const headerString = (0, $c38e0f42709c826a$export$4b5284a3025a455)(JSON.stringify({\n            version: 2,\n            heartbeats: heartbeatsToSend\n        }));\n        // Store last sent date to prevent another being logged/sent for the same day.\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\n        if (unsentEntries.length > 0) {\n            // Store any unsent entries if they exist.\n            this._heartbeatsCache.heartbeats = unsentEntries;\n            // This seems more likely than emptying the array (below) to lead to some odd state\n            // since the cache isn't empty and this will be called again on the next request,\n            // and is probably safest if we await it.\n            await this._storage.overwrite(this._heartbeatsCache);\n        } else {\n            this._heartbeatsCache.heartbeats = [];\n            // Do not wait for this, to reduce latency.\n            this._storage.overwrite(this._heartbeatsCache);\n        }\n        return headerString;\n    }\n}\nfunction $57d436074e210fb5$var$getUTCDateString() {\n    const today = new Date();\n    // Returns date format 'YYYY-MM-DD'\n    return today.toISOString().substring(0, 10);\n}\nfunction $57d436074e210fb5$var$extractHeartbeatsForHeader(heartbeatsCache, maxSize = $57d436074e210fb5$var$MAX_HEADER_BYTES) {\n    // Heartbeats grouped by user agent in the standard format to be sent in\n    // the header.\n    const heartbeatsToSend = [];\n    // Single date format heartbeats that are not sent.\n    let unsentEntries = heartbeatsCache.slice();\n    for (const singleDateHeartbeat of heartbeatsCache){\n        // Look for an existing entry with the same user agent.\n        const heartbeatEntry = heartbeatsToSend.find((hb)=>hb.agent === singleDateHeartbeat.agent);\n        if (!heartbeatEntry) {\n            // If no entry for this user agent exists, create one.\n            heartbeatsToSend.push({\n                agent: singleDateHeartbeat.agent,\n                dates: [\n                    singleDateHeartbeat.date\n                ]\n            });\n            if ($57d436074e210fb5$var$countBytes(heartbeatsToSend) > maxSize) {\n                // If the header would exceed max size, remove the added heartbeat\n                // entry and stop adding to the header.\n                heartbeatsToSend.pop();\n                break;\n            }\n        } else {\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\n            // If the header would exceed max size, remove the added date\n            // and stop adding to the header.\n            if ($57d436074e210fb5$var$countBytes(heartbeatsToSend) > maxSize) {\n                heartbeatEntry.dates.pop();\n                break;\n            }\n        }\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n        // quota and the loop breaks early.)\n        unsentEntries = unsentEntries.slice(1);\n    }\n    return {\n        heartbeatsToSend: heartbeatsToSend,\n        unsentEntries: unsentEntries\n    };\n}\nclass $57d436074e210fb5$var$HeartbeatStorageImpl {\n    constructor(app){\n        this.app = app;\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n    }\n    async runIndexedDBEnvironmentCheck() {\n        if (!(0, $c38e0f42709c826a$export$3865db50535c2055)()) return false;\n        else return (0, $c38e0f42709c826a$export$a8a3018f3d187a4d)().then(()=>true).catch(()=>false);\n    }\n    /**\r\n     * Read all heartbeats.\r\n     */ async read() {\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\n        if (!canUseIndexedDB) return {\n            heartbeats: []\n        };\n        else {\n            const idbHeartbeatObject = await $57d436074e210fb5$var$readHeartbeatsFromIndexedDB(this.app);\n            if (idbHeartbeatObject === null || idbHeartbeatObject === void 0 ? void 0 : idbHeartbeatObject.heartbeats) return idbHeartbeatObject;\n            else return {\n                heartbeats: []\n            };\n        }\n    }\n    // overwrite the storage with the provided heartbeats\n    async overwrite(heartbeatsObject) {\n        var _a;\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\n        if (!canUseIndexedDB) return;\n        else {\n            const existingHeartbeatsObject = await this.read();\n            return $57d436074e210fb5$var$writeHeartbeatsToIndexedDB(this.app, {\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n                heartbeats: heartbeatsObject.heartbeats\n            });\n        }\n    }\n    // add heartbeats\n    async add(heartbeatsObject) {\n        var _a;\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\n        if (!canUseIndexedDB) return;\n        else {\n            const existingHeartbeatsObject = await this.read();\n            return $57d436074e210fb5$var$writeHeartbeatsToIndexedDB(this.app, {\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n                heartbeats: [\n                    ...existingHeartbeatsObject.heartbeats,\n                    ...heartbeatsObject.heartbeats\n                ]\n            });\n        }\n    }\n}\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */ function $57d436074e210fb5$var$countBytes(heartbeatsCache) {\n    // base64 has a restricted set of characters, all of which should be 1 byte.\n    return (0, $c38e0f42709c826a$export$4b5284a3025a455)(// heartbeatsCache wrapper properties\n    JSON.stringify({\n        version: 2,\n        heartbeats: heartbeatsCache\n    })).length;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ function $57d436074e210fb5$var$registerCoreComponents(variant) {\n    $57d436074e210fb5$export$c930050e7bb63965(new (0, $a83e7ccd68ca8d4e$export$16fa2f45be04daa8)(\"platform-logger\", (container)=>new $57d436074e210fb5$var$PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */ ));\n    $57d436074e210fb5$export$c930050e7bb63965(new (0, $a83e7ccd68ca8d4e$export$16fa2f45be04daa8)(\"heartbeat\", (container)=>new $57d436074e210fb5$var$HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */ ));\n    // Register `app` package.\n    $57d436074e210fb5$export$d29d5299a7137abc($57d436074e210fb5$var$name$o, $57d436074e210fb5$var$version$1, variant);\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n    $57d436074e210fb5$export$d29d5299a7137abc($57d436074e210fb5$var$name$o, $57d436074e210fb5$var$version$1, \"esm2017\");\n    // Register platform SDK identifier (no version).\n    $57d436074e210fb5$export$d29d5299a7137abc(\"fire-js\", \"\");\n}\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */ $57d436074e210fb5$var$registerCoreComponents(\"\");\n\n\nvar $b20e7fc8482ee2a9$var$name = \"firebase\";\nvar $b20e7fc8482ee2a9$var$version = \"10.11.0\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ (0, $57d436074e210fb5$export$d29d5299a7137abc)($b20e7fc8482ee2a9$var$name, $b20e7fc8482ee2a9$var$version, \"app\");\n\n\n\n\n\nfunction $c5272c87d5623534$export$f3583a45935410d8() {\n    const changeProfileTextButton = document.getElementById(\"changeProfileText\");\n    const pElement = document.getElementById(\"profilText\");\n    const ptext = document.getElementById(\"ptext\");\n    const writeProfilText = document.getElementById(\"writeProfilText\");\n    const proSite = document.getElementById(\"proSite\");\n    const postsContainer = document.getElementById(\"postsContainer\");\n    const deleteProfile = document.getElementById(\"deleteProfile\");\n    const loggedInUser = (0, $737e81580589129f$export$16a26516684ef0bc)();\n    if (loggedInUser) {\n        const userDel = loggedInUser.id;\n        deleteProfile.addEventListener(\"click\", ()=>{\n            (0, $c57b70e986778409$export$7d0f10f273c0438a)(userDel);\n            alert(\"Profile deleted!\");\n        });\n    } else console.error(\"Deletion failed\");\n    async function loadProfileText() {\n        const loggedInUser = (0, $737e81580589129f$export$16a26516684ef0bc)();\n        if (loggedInUser) {\n            const userId = loggedInUser.userName;\n            const profileText = await (0, $c57b70e986778409$export$ff9b2511e76a5562)(userId);\n            if (profileText !== null) pElement.innerText = profileText;\n            else pElement.innerText = \"No profile text available\";\n        } else console.error(\"No logged in user found.\");\n    }\n    async function loadPostHistory() {\n        const loggedInUser = (0, $737e81580589129f$export$16a26516684ef0bc)();\n        if (loggedInUser) {\n            const userId = loggedInUser.id;\n            const postHistory = await (0, $2a951a2c9ce0c4df$export$6c032d8e70001436)(userId);\n            renderPostHistory(postHistory);\n        } else console.error(\"No logged in user found.\");\n    }\n    function renderPostHistory(postHistory) {\n        postsContainer.innerHTML = \"\";\n        postHistory.forEach((post)=>{\n            const postDiv = document.createElement(\"div\");\n            postDiv.classList.add(\"post\");\n            const titleEl = document.createElement(\"h2\");\n            titleEl.textContent = post.title;\n            const messageEl = document.createElement(\"p\");\n            messageEl.textContent = post.message;\n            postDiv.appendChild(titleEl);\n            postDiv.appendChild(messageEl);\n            postsContainer.appendChild(postDiv);\n        });\n    }\n    loadProfileText();\n    loadPostHistory();\n    changeProfileTextButton.addEventListener(\"click\", ()=>{\n        ptext.style.display = \"block\";\n        changeProfileTextButton.style.display = \"none\";\n        pElement.innerText = \"\";\n    });\n    ptext.addEventListener(\"submit\", async (event)=>{\n        event.preventDefault();\n        ptext.style.display = \"none\";\n        changeProfileTextButton.style.display = \"block\";\n        const newProfileText = writeProfilText.value;\n        await (0, $c57b70e986778409$export$db3409dddd670b53)(newProfileText);\n        pElement.innerText = newProfileText;\n    });\n    proSite.style.display = \"block\";\n    const forum1 = document.getElementById(\"forum1\");\n    const forum2 = document.getElementById(\"forum2\");\n    const forum3 = document.getElementById(\"forum3\");\n    const members = document.getElementById(\"members\");\n    function profileOff(forum) {\n        forum.addEventListener(\"click\", ()=>{\n            proSite.style.display = \"none\";\n        });\n    }\n    profileOff(forum1);\n    profileOff(forum2);\n    profileOff(forum3);\n    profileOff(members);\n}\n\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst $737e81580589129f$var$firebaseConfig = {\n    apiKey: \"AIzaSyCMe09850eI5d3S_MZw8Rt9BTtSg4qb0rc\",\n    authDomain: \"slutprojekt-js2-2b1f0.firebaseapp.com\",\n    databaseURL: \"https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"slutprojekt-js2-2b1f0\",\n    storageBucket: \"slutprojekt-js2-2b1f0.appspot.com\",\n    messagingSenderId: \"1003067095805\",\n    appId: \"1:1003067095805:web:a854bbf61459c0cb679c94\",\n    measurementId: \"G-15E59VFZSL\"\n};\nconst $737e81580589129f$var$app = (0, $57d436074e210fb5$export$c55cfd413944906d)($737e81580589129f$var$firebaseConfig);\nasync function $737e81580589129f$export$692b4a7cc7a486ce(userEmail, userPassword) {\n    const usersUrl = \"https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/users.json\";\n    try {\n        const response = await fetch(usersUrl);\n        const usersData = await response.json();\n        let loggedInUser = null;\n        for(const userId in usersData){\n            const user = usersData[userId];\n            if (user.userEmail === userEmail && user.userPassword === userPassword) {\n                console.log(\"User logged in successfully\");\n                loggedInUser = {\n                    ...user,\n                    id: userId\n                }; // Adding Firebase ID to loggedInUser\n                $737e81580589129f$var$hidePopupScreen();\n                $737e81580589129f$export$eab8f0ccdb89d626();\n                (0, $c5272c87d5623534$export$f3583a45935410d8)();\n                localStorage.setItem(\"loggedInUser\", JSON.stringify(loggedInUser));\n                return;\n            }\n        }\n        alert(\"Invalid email or password\");\n        console.log(\"Invalid email or password\");\n    } catch (error) {\n        console.error(\"Error fetching users data:\", error);\n    }\n}\n// Function to retrieve logged-in user's data from localStorage\nfunction $737e81580589129f$export$16a26516684ef0bc() {\n    const userJson = localStorage.getItem(\"loggedInUser\");\n    if (userJson) {\n        const loggedInUser = JSON.parse(userJson);\n        // Om id finns i loggedInUser, returnera hela objektet\n        if (\"id\" in loggedInUser) return loggedInUser;\n        else // Om det inte finns, returnera null\n        return null;\n    } else return null;\n}\nfunction $737e81580589129f$var$hidePopupScreen() {\n    const signinupBtn = document.getElementById(\"signInBtn\");\n    const popupScreen = document.getElementById(\"loginPopup\");\n    if (popupScreen) popupScreen.style.display = \"none\";\n    if (signinupBtn) signinupBtn.style.display = \"none\";\n}\nfunction $737e81580589129f$export$eab8f0ccdb89d626() {\n    const profilePicContainer = document.getElementById(\"profilePicContainer\");\n    const foto = document.getElementById(\"foto\");\n    profilePicContainer.style.display = \"flex\";\n    profilePicContainer.innerHTML = \"\";\n    const chosenPicId = localStorage.getItem(\"chosenProfilePic\");\n    if (chosenPicId) {\n        const chosenPicElement = document.getElementById(chosenPicId);\n        if (chosenPicElement && chosenPicElement instanceof HTMLImageElement) {\n            const chosenPic = document.createElement(\"img\");\n            chosenPic.src = chosenPicElement.src;\n            chosenPic.classList.add(\"chosen\");\n            profilePicContainer.appendChild(chosenPic);\n            const chosenPicCopy = chosenPic.cloneNode(true);\n            foto.appendChild(chosenPicCopy);\n        } else console.error(\"Chosen picture element not found or not an image:\", chosenPicId);\n    } else console.error(\"No chosen picture ID found in localStorage.\");\n    const loggedInUser = localStorage.getItem(\"loggedInUser\");\n    if (loggedInUser) {\n        const userData = JSON.parse(loggedInUser);\n        const usernameElement = document.createElement(\"div\");\n        usernameElement.textContent = userData.userName;\n        profilePicContainer.appendChild(usernameElement);\n    } else console.error(\"No logged-in user found in localStorage.\");\n}\nasync function $737e81580589129f$export$3493b8991d49f558(Newuser) {\n    const createUserUrl = \"https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/users.json\";\n    const headers = new Headers();\n    headers.set(\"Content-Type\", \"application/json\");\n    headers.set(\"Accept\", \"application/json\");\n    const request = new Request(createUserUrl, {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify(Newuser)\n    });\n    return fetch(request).then((res)=>{\n        console.log(\"User created!\", res);\n    });\n}\nasync function $737e81580589129f$export$e524886fed616ab5(userName) {\n    const usersUrl = \"https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/users.json\";\n    try {\n        const response = await fetch(usersUrl);\n        const usersData = await response.json();\n        for(const userId in usersData){\n            const user = usersData[userId];\n            if (user.userName === userName) return;\n        }\n        console.log(usersData);\n        return;\n    } catch (error) {\n        console.error(\"Error fetching users data:\", error);\n        return;\n    }\n}\ndocument.querySelectorAll(\".createUserProfilePic\").forEach((pic)=>{\n    pic.addEventListener(\"click\", ()=>{\n        document.querySelectorAll(\".createUserProfilePic\").forEach((pic)=>{\n            pic.classList.remove(\"chosen\");\n        });\n        pic.classList.add(\"chosen\");\n        localStorage.setItem(\"chosenProfilePic\", pic.id);\n    });\n});\n// Function to highlight the chosen profile picture\nfunction $737e81580589129f$export$873d7afbf7fe715b() {\n    const chosenPicId = localStorage.getItem(\"chosenProfilePic\");\n    if (chosenPicId) {\n        const chosenPic = document.getElementById(chosenPicId);\n        if (chosenPic) chosenPic.classList.add(\"chosen\");\n    }\n}\n\n\n// async function postComments(comment: Com, forumId: string): Promise<string | null> {\n//   const loggedInUser = getLoggedInUser();\n//   if (!loggedInUser) {\n//       console.error('No logged in user found.');\n//       return null;\n//   }\n//   // Användar-ID för den inloggade användaren\n//   const userId = loggedInUser.id;\n//   comment.userId = userId;\n//   // Posta kommentaren till databasen\n//   const baseUrl = 'https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/';\n//   const url = `${baseUrl}${forumId}.json`;\n//   const headers: Headers = new Headers();\n//   headers.set('Content-Type', 'application/json');\n//   headers.set('Accept', 'application/json');\n//   const request: RequestInfo = new Request(url, {\n//       method: 'POST',\n//       headers: headers,\n//       body: JSON.stringify(comment)\n//   });\n//   try {\n//       const response = await fetch(request);\n//       if (response.ok) {\n//           const data = await response.json();\n//           const commentId = data.name; // Det unika ID:t som Firebase tilldelar inlägget\n//           // console.log('comment posted', commentId);\n//           console.log(\"Comment posted!\", response);\n//           return commentId;\n//       } else {\n//           console.error('Failed to post comment:', response.statusText);\n//           return null;\n//       }\n//   } catch (error) {\n//       console.error('Error posting comment:', error);\n//       return null;\n//   }\n// }\nasync function $c57b70e986778409$export$f518015fdf2fdd54(comment, forumId) {\n    const loggedInUser = (0, $737e81580589129f$export$16a26516684ef0bc)();\n    if (!loggedInUser) {\n        console.error(\"No logged in user found.\");\n        return;\n    }\n    const userId = loggedInUser.id; // Användar-ID för den inloggade användaren\n    comment.userId = userId; // Tilldela användarens Firebase ID till kommentaren\n    // Posta kommentaren till databasen\n    const baseUrl = \"https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/\";\n    const url = `${baseUrl}${forumId}.json`;\n    const headers = new Headers();\n    headers.set(\"Content-Type\", \"application/json\");\n    headers.set(\"Accept\", \"application/json\");\n    const request = new Request(url, {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify(comment)\n    });\n    return fetch(request).then((res)=>{\n        console.log(\"Comment posted!\", res);\n    });\n}\nasync function $c57b70e986778409$export$5320f7bd627cf19(forumId) {\n    const baseUrl = \"https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/\";\n    const url = `${baseUrl}${forumId}.json`;\n    const res = await fetch(url);\n    const data = await res.json();\n    if (!data) {\n        console.error(`No comments found for forum ${forumId}.`);\n        return [];\n    }\n    const comments = Object.keys(data).map((key)=>{\n        const comment = data[key];\n        return {\n            ...comment,\n            userName: comment.userName\n        };\n    });\n    return comments;\n}\n// async function deleteComment(commentId: string, forumId: string): Promise<void> {\n//   const baseUrl = 'https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/';\n//   const url = `${baseUrl}${forumId}/${commentId}.json`;\n//   const headers: Headers = new Headers();\n//   headers.set('Content-Type', 'application/json');\n//   const request: RequestInfo = new Request(url, {\n//       method: 'DELETE',\n//       headers: headers,\n//   });\n//   try {\n//       const response = await fetch(request);\n//       if (response.ok) {\n//           console.log(`Comment with ID ${commentId} deleted successfully.`);\n//       } else {\n//           console.error(`Failed to delete comment with ID ${commentId}.`);\n//       }\n//   } catch (error) {\n//       console.error('Error deleting comment:', error);\n//   }\n// }\nasync function $c57b70e986778409$export$2e6e3ad634e3776(commentId, forumId) {\n    const baseUrl = \"https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/\";\n    const url = `${baseUrl}${forumId}/${commentId}.json`;\n    const headers = new Headers();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new Request(url, {\n        method: \"DELETE\",\n        headers: headers\n    });\n    return fetch(request).then((res)=>{\n        console.log(\"post deleted:\", res);\n    });\n}\nasync function $c57b70e986778409$export$db3409dddd670b53(profileText) {\n    const loggedInUser = (0, $737e81580589129f$export$16a26516684ef0bc)();\n    if (!loggedInUser) {\n        console.error(\"No logged in user found.\");\n        return;\n    }\n    const userId = loggedInUser.userName; // Användar-ID för den inloggade användaren\n    const baseUrl = \"https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/\";\n    const url = `${baseUrl}users/${userId}/profileText.json`;\n    const headers = new Headers();\n    headers.set(\"Content-Type\", \"application/json\");\n    headers.set(\"Accept\", \"application/json\");\n    const request = new Request(url, {\n        method: \"PUT\",\n        headers: headers,\n        body: JSON.stringify({\n            profileText: profileText\n        })\n    });\n    return fetch(request).then((res)=>{\n        console.log(\"Profile text saved!\", res);\n    });\n}\nasync function $c57b70e986778409$export$ff9b2511e76a5562(userId) {\n    const baseUrl = \"https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/\";\n    const url = `${baseUrl}users/${userId}/profileText.json`;\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data !== null && \"profileText\" in data) return data.profileText;\n        else return null;\n    } catch (error) {\n        console.error(\"Error fetching profile text:\", error);\n        return null;\n    }\n}\nasync function $c57b70e986778409$export$fda43615d58bef76() {\n    const usersUrl = \"https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/users.json\";\n    const usernames = [];\n    try {\n        const response = await fetch(usersUrl);\n        const usersData = await response.json();\n        for(const userId in usersData){\n            const user = usersData[userId];\n            usernames.push(user.userName);\n        }\n        return usernames;\n    } catch (error) {\n        console.error(\"Error fetching users data:\", error);\n        return [];\n    }\n}\nasync function $c57b70e986778409$export$7d0f10f273c0438a(userId) {\n    const deleteUserUrl = `https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/users/${userId}.json`;\n    const headers = new Headers();\n    headers.set(\"Content-Type\", \"application/json\");\n    headers.set(\"Accept\", \"application/json\");\n    const request = new Request(deleteUserUrl, {\n        method: \"DELETE\",\n        headers: headers\n    });\n    try {\n        const response = await fetch(request);\n        if (response.ok) console.log(`User with ID ${userId} deleted successfully.`);\n        else console.error(`Failed to delete user with ID ${userId}.`);\n    } catch (error) {\n        console.error(\"Error deleting user:\", error);\n    }\n}\n\n\n\nvar $6d25dcc733803973$exports = {};\n$6d25dcc733803973$exports = new URL(\"red.80d2d9bf.jpg\", import.meta.url).toString();\n\n\nvar $c55dfafc368cfbf1$exports = {};\n$c55dfafc368cfbf1$exports = new URL(\"punk.d2080a5b.jpg\", import.meta.url).toString();\n\n\nvar $2d454e617e878e8f$exports = {};\n$2d454e617e878e8f$exports = new URL(\"hat.fc65eed2.jpg\", import.meta.url).toString();\n\n\nlet $2a951a2c9ce0c4df$var$createdForm = null;\nlet $2a951a2c9ce0c4df$var$loggedInUser = (0, $737e81580589129f$export$16a26516684ef0bc)(); // Hämta den inloggade användaren här\nasync function $2a951a2c9ce0c4df$export$a40329fd5fdda0d9(forumId) {\n    const forumContainer = document.getElementById(`${forumId}Container`);\n    if (!forumContainer) return;\n    if ($2a951a2c9ce0c4df$var$createdForm === forumId) return;\n    forumContainer.innerHTML = \"\";\n    const comments = await (0, $c57b70e986778409$export$5320f7bd627cf19)(forumId);\n    const forumForm = `\r\n        <form id=\"${forumId}Form\" class=\"forum-form\">\r\n            <label for=\"title\">Title:</label><br>\r\n            <input type=\"text\" id=\"title\" name=\"title\" required><br>\r\n            <label for=\"message\">Message:</label><br>\r\n            <textarea id=\"message\" name=\"message\" required></textarea><br>\r\n            <input type=\"submit\" value=\"Send\" id=\"sendMsgBtn\">\r\n        </form>`;\n    forumContainer.insertAdjacentHTML(\"beforebegin\", forumForm);\n    $2a951a2c9ce0c4df$var$createdForm = forumId;\n    if (comments.length > 0) comments.forEach((comment)=>$2a951a2c9ce0c4df$var$displayComments(comment, forumContainer, forumId));\n    const form = document.getElementById(`${forumId}Form`);\n    form?.addEventListener(\"submit\", async (event)=>{\n        event.preventDefault();\n        const titleInput = form.querySelector('input[name=\"title\"]');\n        const messageInput = form.querySelector('textarea[name=\"message\"]');\n        const title = titleInput.value;\n        const message = messageInput.value;\n        const userName = $2a951a2c9ce0c4df$var$loggedInUser ? $2a951a2c9ce0c4df$var$loggedInUser.userName : \"Guest\";\n        const userId = $2a951a2c9ce0c4df$var$loggedInUser ? $2a951a2c9ce0c4df$var$loggedInUser.id : \"\";\n        const newComment = {\n            userId: userId,\n            userName: userName,\n            title: title,\n            message: message,\n            commentId: \"\"\n        };\n        // const commentId = await postComments(newComment,forumId);\n        // if(commentId !== null){\n        //     newComment.commentId = commentId;\n        //     // console.log('comment Id', commentId);\n        // }else {\n        //     console.error('error while creating comment.comment id is null')\n        // }\n        await (0, $c57b70e986778409$export$f518015fdf2fdd54)(newComment, forumId);\n        titleInput.value = \"\";\n        messageInput.value = \"\";\n        $2a951a2c9ce0c4df$var$displayComments(newComment, forumContainer, forumId);\n    });\n}\nasync function $2a951a2c9ce0c4df$export$3f32ea3d499bee84(forumId) {\n    const comments = await (0, $c57b70e986778409$export$5320f7bd627cf19)(forumId);\n    const container = document.getElementById(`${forumId}Container`);\n    if (container) {\n        const otherForumIds = [\n            \"forum1\",\n            \"forum2\",\n            \"forum3\"\n        ].filter((id)=>id !== forumId);\n        otherForumIds.forEach((id)=>{\n            const otherContainer = document.getElementById(`${id}Container`);\n            if (otherContainer) otherContainer.innerHTML = \"\";\n        });\n        container.innerHTML = \"\";\n        comments.forEach((comment)=>$2a951a2c9ce0c4df$var$displayComments(comment, container, forumId));\n    }\n}\nfunction $2a951a2c9ce0c4df$export$e0f19186a4aa61b5(forumId) {\n    return $2a951a2c9ce0c4df$var$createdForm === forumId;\n}\nfunction $2a951a2c9ce0c4df$var$displayComments(comment, container, forumId) {\n    const commentDiv = document.createElement(\"div\");\n    commentDiv.classList.add(\"comment-wrapper\", `forum-${forumId}-comments`);\n    const commentContent = document.createElement(\"div\");\n    commentContent.classList.add(\"comment-content\");\n    const usernameEl = document.createElement(\"h1\");\n    usernameEl.textContent = comment.userName;\n    const loggedInUser = (0, $737e81580589129f$export$16a26516684ef0bc)();\n    if (loggedInUser) {\n        const profilePicEl = document.createElement(\"img\");\n        const profilePic = localStorage.getItem(\"chosenProfilePic\");\n        if (profilePic) {\n            if (profilePic == \"profilePicRed\") profilePicEl.src = (0, (/*@__PURE__*/$parcel$interopDefault($6d25dcc733803973$exports)));\n            else if (profilePic == \"profilePicHat\") profilePicEl.src = (0, (/*@__PURE__*/$parcel$interopDefault($2d454e617e878e8f$exports)));\n            else if (profilePic == \"profilePicPunk\") profilePicEl.src = (0, (/*@__PURE__*/$parcel$interopDefault($c55dfafc368cfbf1$exports)));\n            profilePicEl.classList.add(\"forumImg\");\n            console.log(localStorage.getItem(\"chosenProfilePic\"));\n        }\n        commentContent.appendChild(profilePicEl);\n    }\n    const titleEl = document.createElement(\"h2\");\n    titleEl.textContent = comment.title;\n    const messageEl = document.createElement(\"p\");\n    messageEl.textContent = comment.message;\n    if (comment.userId === loggedInUser?.id) {\n        const deleteBtn = document.createElement(\"button\");\n        deleteBtn.textContent = \"X\";\n        deleteBtn.addEventListener(\"click\", async ()=>{\n            await (0, $c57b70e986778409$export$2e6e3ad634e3776)(comment.commentId, forumId);\n            container.removeChild(commentDiv);\n        });\n        commentDiv.appendChild(deleteBtn);\n    }\n    commentContent.appendChild(usernameEl);\n    commentDiv.appendChild(commentContent);\n    commentDiv.appendChild(titleEl);\n    commentDiv.appendChild(messageEl);\n    container.prepend(commentDiv);\n}\nasync function $2a951a2c9ce0c4df$export$6c032d8e70001436(userId) {\n    const forumIds = [\n        \"forum1\",\n        \"forum2\",\n        \"forum3\"\n    ];\n    const promises = forumIds.map((forumId)=>(0, $c57b70e986778409$export$5320f7bd627cf19)(forumId));\n    return Promise.all(promises).then((forumComments)=>{\n        const allComments = forumComments.flat(); //Sammanfogar forumen\n        const commentsByUser = allComments.filter((comment)=>comment.userId === userId);\n        return commentsByUser;\n    }).catch((error)=>{\n        console.error(\"Error fetching comments by user ID:\", error);\n        return [];\n    });\n}\nasync function $2a951a2c9ce0c4df$var$getCommentsByUsername(username, forumId) {\n    const allComments = await (0, $c57b70e986778409$export$5320f7bd627cf19)(forumId);\n    const userComments = allComments.filter((comment)=>comment.userName === username);\n    return userComments;\n}\n//för att tömma forum vid profilsida\nfunction $2a951a2c9ce0c4df$var$clearAllForums() {\n    [\n        \"forum1\",\n        \"forum2\",\n        \"forum3\"\n    ].forEach((forumId)=>{\n        const container = document.getElementById(`${forumId}Container`);\n        if (container) container.innerHTML = \"\";\n    });\n}\nconst $2a951a2c9ce0c4df$var$myPage = document.getElementById(\"myPage\");\n$2a951a2c9ce0c4df$var$myPage.addEventListener(\"click\", ()=>{\n    const forumForm = document.querySelector(\".forum-form\");\n    const memberSite = document.getElementById(\"memberSite\");\n    if (forumForm) {\n        forumForm.style.display = \"none\";\n        $2a951a2c9ce0c4df$var$clearAllForums();\n    }\n    if (memberSite) memberSite.style.display = \"none\";\n});\nasync function $2a951a2c9ce0c4df$var$displayUsernames() {\n    const usernamesContainer = document.getElementById(\"usernamesContainer\");\n    const memberSite = document.getElementById(\"memberSite\");\n    memberSite.style.display = \"block\";\n    $2a951a2c9ce0c4df$var$clearAllForums();\n    const forumForm = document.querySelector(\".forum-form\");\n    if (forumForm) forumForm.style.display = \"none\";\n    if (!usernamesContainer) return;\n    const usernames = await (0, $c57b70e986778409$export$fda43615d58bef76)();\n    usernames.forEach(async (username)=>{\n        const usernameElement = document.createElement(\"div\");\n        usernameElement.textContent = username;\n        usernameElement.addEventListener(\"click\", async ()=>{\n            const forumIds = [\n                \"forum1\",\n                \"forum2\",\n                \"forum3\"\n            ];\n            const commentsPromises = forumIds.map((forumId)=>$2a951a2c9ce0c4df$var$getCommentsByUsername(username, forumId));\n            const commentsArray = await Promise.all(commentsPromises);\n            const allComments = commentsArray.flat();\n            console.log(`Comments by ${username} from all forums:`, allComments);\n        });\n        usernamesContainer.appendChild(usernameElement);\n    });\n}\nconst $2a951a2c9ce0c4df$var$memberSiteBtn = document.getElementById(\"members\");\n$2a951a2c9ce0c4df$var$memberSiteBtn.addEventListener(\"click\", $2a951a2c9ce0c4df$var$displayUsernames);\nconst $2a951a2c9ce0c4df$var$forum1 = document.getElementById(\"forum1\");\nconst $2a951a2c9ce0c4df$var$forum2 = document.getElementById(\"forum2\");\nconst $2a951a2c9ce0c4df$var$forum3 = document.getElementById(\"forum3\");\nfunction $2a951a2c9ce0c4df$var$memberListOff(forum) {\n    forum.addEventListener(\"click\", ()=>{\n        const memberSite = document.getElementById(\"memberSite\");\n        memberSite.style.display = \"none\";\n    });\n}\n$2a951a2c9ce0c4df$var$memberListOff($2a951a2c9ce0c4df$var$forum1);\n$2a951a2c9ce0c4df$var$memberListOff($2a951a2c9ce0c4df$var$forum2);\n$2a951a2c9ce0c4df$var$memberListOff($2a951a2c9ce0c4df$var$forum3);\n\n\n\n\nlet $ad2bcec7a0192558$var$loggedIn = false;\nconst $ad2bcec7a0192558$var$loggedInUser = (0, $737e81580589129f$export$16a26516684ef0bc)();\nif ($ad2bcec7a0192558$var$loggedInUser) console.log(\"Logged-in user:\", $ad2bcec7a0192558$var$loggedInUser.userName);\nelse console.log(\"No user logged in.\");\nconst $ad2bcec7a0192558$var$myPage = document.getElementById(\"myPage\");\ndocument.addEventListener(\"DOMContentLoaded\", async ()=>{\n    let activeForumId = null;\n    const forumIds = [\n        \"forum1\",\n        \"forum2\",\n        \"forum3\"\n    ];\n    for (const forumId of forumIds){\n        const forumButton = document.getElementById(forumId);\n        if (forumButton) forumButton.addEventListener(\"click\", async ()=>{\n            if (activeForumId === forumId) await (0, $2a951a2c9ce0c4df$export$3f32ea3d499bee84)(forumId);\n            else {\n                if (activeForumId && (0, $2a951a2c9ce0c4df$export$e0f19186a4aa61b5)(activeForumId)) {\n                    const previousForm = document.getElementById(`${activeForumId}Form`);\n                    if (previousForm) previousForm.remove();\n                }\n                if (!(0, $2a951a2c9ce0c4df$export$e0f19186a4aa61b5)(forumId)) await (0, $2a951a2c9ce0c4df$export$a40329fd5fdda0d9)(forumId);\n                await (0, $2a951a2c9ce0c4df$export$3f32ea3d499bee84)(forumId);\n                activeForumId = forumId;\n            }\n        });\n    }\n});\nconst $ad2bcec7a0192558$var$cr8UsrBtn = document.getElementById(\"cr8UsrBtn\");\n$ad2bcec7a0192558$var$cr8UsrBtn.addEventListener(\"click\", (event)=>{\n    event.preventDefault();\n    const newName = document.getElementById(\"cr8Name\").value;\n    const newEmail = document.getElementById(\"cr8Email\").value;\n    const newPassword = document.getElementById(\"cr8Psw\").value;\n    const loginWrap = document.querySelector(\"#createUserPopup\");\n    const loginPopup = document.getElementById(\"loginPopup\");\n    (0, $737e81580589129f$export$3493b8991d49f558)({\n        userName: `${newName}`,\n        userEmail: `${newEmail}`,\n        userPassword: `${newPassword}`,\n        id: ``\n    }).then(()=>{\n        console.log(\"User created!\");\n        loginWrap.style.display = \"none\";\n        loginPopup.style.display = \"flex\";\n    });\n});\nconst $ad2bcec7a0192558$var$loginBtn = document.getElementById(\"loginBtn\");\n$ad2bcec7a0192558$var$loginBtn.addEventListener(\"click\", (event)=>{\n    const loginWrap = document.querySelector(\"#createUserPopup\");\n    loginWrap.style.display = \"flex\";\n});\nconst $ad2bcec7a0192558$var$loginLink = document.getElementById(\"loginLink\");\n$ad2bcec7a0192558$var$loginLink.addEventListener(\"click\", (event)=>{\n    event.preventDefault();\n    const loginPopup = document.getElementById(\"loginPopup\");\n    const loginWrap = document.querySelector(\"#createUserPopup\");\n    loginWrap.style.display = \"none\";\n    loginPopup.style.display = \"flex\";\n});\nconst $ad2bcec7a0192558$var$closeBtn = document.getElementById(\"closeBtn\");\n$ad2bcec7a0192558$var$closeBtn.addEventListener(\"click\", (event)=>{\n    const loginWrap = document.querySelector(\"#createUserPopup\");\n    loginWrap.style.display = \"none\";\n});\nconst $ad2bcec7a0192558$var$closeBtn2 = document.getElementById(\"closeBtn2\");\n$ad2bcec7a0192558$var$closeBtn2.addEventListener(\"click\", (event)=>{\n    const loginWrap = document.querySelector(\"#loginPopup\");\n    loginWrap.style.display = \"none\";\n});\nconst $ad2bcec7a0192558$var$signInBtn = document.getElementById(\"signInBtn\");\n$ad2bcec7a0192558$var$signInBtn.addEventListener(\"click\", async (event)=>{\n    event.preventDefault();\n    const email = document.getElementById(\"loginEmail\").value;\n    const password = document.getElementById(\"loginPassword\").value;\n    (0, $737e81580589129f$export$16a26516684ef0bc)();\n    try {\n        await (0, $737e81580589129f$export$692b4a7cc7a486ce)(email, password);\n        $ad2bcec7a0192558$var$myPage.addEventListener(\"click\", (0, $c5272c87d5623534$export$f3583a45935410d8));\n    } catch (error) {\n        console.log(\"Login failed!\");\n    }\n});\n\n\n//# sourceMappingURL=index.8ba6b041.js.map\n","import { displayForm, loadComments, isFormCreated } from \"./modules/displayForum\";\r\nimport { Newuser, createUser, loginUser, getLoggedInUser, highlightChosenProfilePic } from \"./modules/login.ts\";\r\nimport { profileSite } from \"./modules/profile.ts\";\r\nlet loggedIn = false;\r\nconst loggedInUser = getLoggedInUser();\r\nif (loggedInUser) {\r\n  console.log('Logged-in user:', loggedInUser.userName);\r\n} else {\r\n    console.log('No user logged in.');\r\n}\r\nconst myPage = document.getElementById('myPage') as HTMLButtonElement;\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n    let activeForumId: string | null = null;\r\n\r\n    const forumIds = ['forum1', 'forum2', 'forum3'];\r\n\r\n    for (const forumId of forumIds) {\r\n        const forumButton = document.getElementById(forumId);\r\n        if (forumButton) {\r\n            forumButton.addEventListener('click', async () => {\r\n                if (activeForumId === forumId) {\r\n                    await loadComments(forumId);\r\n                } else {\r\n                    if (activeForumId && isFormCreated(activeForumId)) {\r\n                        const previousForm = document.getElementById(`${activeForumId}Form`);\r\n                        if (previousForm) {\r\n                            previousForm.remove();\r\n                        }\r\n                    }\r\n                    if (!isFormCreated(forumId)) {\r\n                        await displayForm(forumId);\r\n                    }\r\n                    await loadComments(forumId);\r\n\r\n                    activeForumId = forumId;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n});\r\n\r\n      const cr8UsrBtn = (document.getElementById('cr8UsrBtn') as HTMLInputElement); \r\n\r\n      cr8UsrBtn.addEventListener(\"click\", (event) => {\r\n        event.preventDefault();\r\n        const newName = (document.getElementById(\"cr8Name\") as HTMLInputElement).value ;\r\n        const newEmail = (document.getElementById(\"cr8Email\") as HTMLInputElement).value ;\r\n        const newPassword = (document.getElementById(\"cr8Psw\") as HTMLInputElement).value ;\r\n        const loginWrap = (document.querySelector(\"#createUserPopup\") as HTMLDivElement);\r\n        const loginPopup = (document.getElementById(\"loginPopup\") as HTMLDivElement);\r\n\r\n        createUser({ userName: `${newName}`, userEmail: `${newEmail}`, userPassword: `${newPassword}`, id: ``})\r\n\r\n        .then(() => {\r\n        console.log(\"User created!\")\r\n        loginWrap.style.display = \"none\";\r\n        loginPopup.style.display = \"flex\";\r\n        })\r\n  \r\n  });\r\n\r\n        const loginBtn = (document.getElementById(\"loginBtn\") as HTMLButtonElement);\r\n        loginBtn.addEventListener(\"click\", (event) => {\r\n\r\n            const loginWrap = (document.querySelector(\"#createUserPopup\") as HTMLDivElement);\r\n            \r\n            loginWrap.style.display = \"flex\";\r\n        \r\n        })\r\n\r\n        const loginLink = document.getElementById(\"loginLink\") as HTMLAnchorElement;\r\n        loginLink.addEventListener(\"click\", (event) => {\r\n            event.preventDefault();\r\n            const loginPopup = (document.getElementById(\"loginPopup\") as HTMLDivElement);\r\n            const loginWrap = (document.querySelector(\"#createUserPopup\") as HTMLDivElement);\r\n            loginWrap.style.display = \"none\";\r\n            loginPopup.style.display = \"flex\";\r\n        })\r\n\r\n        const closeBtn = (document.getElementById(\"closeBtn\") as HTMLImageElement);\r\n        closeBtn.addEventListener(\"click\", (event) => {\r\n\r\n            const loginWrap = (document.querySelector(\"#createUserPopup\") as HTMLDivElement);\r\n            \r\n            loginWrap.style.display = \"none\";\r\n        })\r\n\r\n        const closeBtn2 = (document.getElementById(\"closeBtn2\") as HTMLImageElement);\r\n        closeBtn2.addEventListener(\"click\", (event) => {\r\n\r\n            const loginWrap = (document.querySelector(\"#loginPopup\") as HTMLDivElement);\r\n            \r\n            loginWrap.style.display = \"none\";\r\n        })\r\n\r\n        const signInBtn = (document.getElementById(\"signInBtn\") as HTMLInputElement);\r\n        signInBtn.addEventListener(\"click\", async (event) => {\r\n            event.preventDefault();\r\n\r\n            const email = (document.getElementById(\"loginEmail\") as HTMLInputElement).value;\r\n            const password = (document.getElementById(\"loginPassword\") as HTMLInputElement).value;\r\n            getLoggedInUser();\r\n            try {\r\n                await loginUser(email, password);\r\n                myPage.addEventListener('click', profileSite);\r\n              } \r\n              catch (error) {\r\n               console.log(\"Login failed!\")\r\n              }\r\n        })\r\n\r\n","import { postComments, Com, getComments, deleteComment, getAllUsernames } from \"./fetchdata\";\r\nimport { getLoggedInUser } from \"./login\";\r\nimport redProfilePic from \"../img/red.jpg\";\r\nimport punkProfilePic from '../img/punk.jpg';\r\nimport hatProfilePic from '../img/hat.jpg';\r\n\r\nlet createdForm: string | null = null;\r\nlet loggedInUser = getLoggedInUser(); // Hämta den inloggade användaren här\r\n\r\nexport async function displayForm(forumId: string) {\r\n    const forumContainer = document.getElementById(`${forumId}Container`);\r\n    if (!forumContainer) return;\r\n\r\n    if (createdForm === forumId) return;\r\n\r\n    forumContainer.innerHTML = '';\r\n\r\n    const comments = await getComments(forumId);\r\n\r\n    const forumForm = `\r\n        <form id=\"${forumId}Form\" class=\"forum-form\">\r\n            <label for=\"title\">Title:</label><br>\r\n            <input type=\"text\" id=\"title\" name=\"title\" required><br>\r\n            <label for=\"message\">Message:</label><br>\r\n            <textarea id=\"message\" name=\"message\" required></textarea><br>\r\n            <input type=\"submit\" value=\"Send\" id=\"sendMsgBtn\">\r\n        </form>`;\r\n\r\n    forumContainer.insertAdjacentHTML('beforebegin', forumForm);\r\n\r\n    createdForm = forumId;\r\n\r\n    if (comments.length > 0) {\r\n        comments.forEach(comment => displayComments(comment, forumContainer, forumId));\r\n    }\r\n\r\n    const form = document.getElementById(`${forumId}Form`);\r\n\r\n    form?.addEventListener('submit', async (event) => {\r\n        event.preventDefault();\r\n\r\n        const titleInput = form.querySelector('input[name=\"title\"]') as HTMLInputElement;\r\n        const messageInput = form.querySelector('textarea[name=\"message\"]') as HTMLTextAreaElement;\r\n        const title = titleInput.value;\r\n        const message = messageInput.value;\r\n        const userName = loggedInUser ? loggedInUser.userName : 'Guest';\r\n        const userId = loggedInUser ? loggedInUser.id: '';\r\n\r\n        const newComment: Com = {\r\n            userId: userId,\r\n            userName: userName,\r\n            title: title,\r\n            message: message,\r\n            commentId: '',\r\n        };\r\n\r\n        // const commentId = await postComments(newComment,forumId);\r\n        // if(commentId !== null){\r\n        //     newComment.commentId = commentId;\r\n        //     // console.log('comment Id', commentId);\r\n            \r\n        // }else {\r\n        //     console.error('error while creating comment.comment id is null')\r\n        // }\r\n        \r\n\r\n        await postComments(newComment, forumId);\r\n\r\n        titleInput.value = '';\r\n        messageInput.value = '';\r\n\r\n        displayComments(newComment, forumContainer, forumId);\r\n    });\r\n}\r\n\r\nexport async function loadComments(forumId: string) {\r\n    const comments = await getComments(forumId);\r\n    const container = document.getElementById(`${forumId}Container`);\r\n    if (container) {\r\n\r\n        const otherForumIds = ['forum1', 'forum2', 'forum3'].filter(id => id !== forumId);\r\n        otherForumIds.forEach(id => {\r\n            const otherContainer = document.getElementById(`${id}Container`);\r\n            if (otherContainer) {\r\n                otherContainer.innerHTML = '';\r\n            }\r\n        });\r\n\r\n        container.innerHTML = '';\r\n        comments.forEach(comment => displayComments(comment, container, forumId));\r\n    }\r\n}\r\n\r\nexport function isFormCreated(forumId: string): boolean {\r\n    return createdForm === forumId;\r\n}\r\n\r\nfunction displayComments(comment: Com, container: HTMLElement, forumId: string) {\r\n    const commentDiv = document.createElement('div');\r\n    commentDiv.classList.add('comment-wrapper', `forum-${forumId}-comments`);\r\n\r\n    const commentContent = document.createElement('div');\r\n    commentContent.classList.add('comment-content');\r\n\r\n    const usernameEl = document.createElement('h1');\r\n    usernameEl.textContent = comment.userName;\r\n\r\n    const loggedInUser = getLoggedInUser();\r\n    if (loggedInUser) {\r\n  \r\n      const profilePicEl = document.createElement(\"img\");\r\n      const profilePic = localStorage.getItem(\"chosenProfilePic\");\r\n      if (profilePic) {\r\n        if (profilePic == \"profilePicRed\") {\r\n          profilePicEl.src = redProfilePic;\r\n        } else if(profilePic == 'profilePicHat'){\r\n          profilePicEl.src = hatProfilePic;\r\n        } else if(profilePic == 'profilePicPunk'){\r\n          profilePicEl.src = punkProfilePic;\r\n        }\r\n        profilePicEl.classList.add(\"forumImg\");\r\n        console.log(localStorage.getItem(\"chosenProfilePic\"));\r\n      }\r\n      commentContent.appendChild(profilePicEl);\r\n    }\r\n\r\n    const titleEl = document.createElement('h2');\r\n    titleEl.textContent = comment.title;\r\n\r\n    const messageEl = document.createElement('p');\r\n    messageEl.textContent = comment.message;\r\n\r\n    if (comment.userId === loggedInUser?.id) {\r\n        const deleteBtn = document.createElement('button');\r\n        deleteBtn.textContent ='X';\r\n        deleteBtn.addEventListener('click', async () =>{\r\n            await deleteComment(comment.commentId, forumId);\r\n            container.removeChild(commentDiv);\r\n\r\n    });\r\n    commentDiv.appendChild(deleteBtn);\r\n}\r\n\r\n    commentContent.appendChild(usernameEl);\r\n    commentDiv.appendChild(commentContent);\r\n    commentDiv.appendChild(titleEl);\r\n    commentDiv.appendChild(messageEl);\r\n    container.prepend(commentDiv);\r\n}\r\n\r\nexport async function getCommentsByUserId(userId: string): Promise<Com[]> {\r\n    const forumIds = [\"forum1\", \"forum2\", \"forum3\"];\r\n    const promises = forumIds.map(forumId => getComments(forumId));\r\n    \r\n    return Promise.all(promises)\r\n      .then(forumComments => {\r\n        const allComments = forumComments.flat(); //Sammanfogar forumen\r\n        const commentsByUser = allComments.filter(comment => comment.userId === userId);\r\n        return commentsByUser;\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching comments by user ID:', error);\r\n        return [];\r\n      });\r\n}\r\n\r\nasync function getCommentsByUsername(username: string, forumId: string): Promise<Com[]> {\r\n    const allComments = await getComments(forumId);\r\n  \r\n    const userComments = allComments.filter(comment => comment.userName === username);\r\n  \r\n    return userComments;\r\n  }\r\n\r\n\r\n//för att tömma forum vid profilsida\r\nfunction clearAllForums() {\r\n    ['forum1', 'forum2', 'forum3'].forEach(forumId => {\r\n        const container = document.getElementById(`${forumId}Container`);\r\n        if (container) {\r\n            container.innerHTML = '';\r\n        }\r\n    });\r\n}\r\n\r\nconst myPage = document.getElementById('myPage') as HTMLButtonElement;\r\n\r\nmyPage.addEventListener('click', () => {\r\n    const forumForm = document.querySelector('.forum-form') as HTMLElement;\r\n    const memberSite = document.getElementById('memberSite') as HTMLElement;\r\n\r\n    if (forumForm) {\r\n        forumForm.style.display = 'none';\r\n        clearAllForums();\r\n    }\r\n    if (memberSite) {\r\n        memberSite.style.display = 'none';\r\n    }\r\n});\r\n\r\nasync function displayUsernames() {\r\n    const usernamesContainer = document.getElementById('usernamesContainer');\r\n    const memberSite = document.getElementById('memberSite') as HTMLElement;\r\n    memberSite.style.display = 'block';\r\n    clearAllForums();\r\n\r\n    const forumForm = document.querySelector('.forum-form') as HTMLElement;\r\n    if (forumForm) {\r\n        forumForm.style.display = 'none';\r\n    }\r\n\r\n    if (!usernamesContainer) return;\r\n  \r\n    const usernames = await getAllUsernames();\r\n  \r\n    usernames.forEach(async username => {\r\n        const usernameElement = document.createElement('div');\r\n        usernameElement.textContent = username;\r\n        usernameElement.addEventListener('click', async () => {\r\n            const forumIds = ['forum1', 'forum2', 'forum3'];\r\n            const commentsPromises = forumIds.map(forumId => getCommentsByUsername(username, forumId));\r\n            const commentsArray = await Promise.all(commentsPromises);\r\n            const allComments = commentsArray.flat();\r\n            console.log(`Comments by ${username} from all forums:`, allComments);\r\n        });\r\n        usernamesContainer.appendChild(usernameElement);\r\n    });\r\n}\r\n\r\n\r\n\r\n  \r\n  const memberSiteBtn = document.getElementById('members') as HTMLButtonElement;\r\n\r\n  memberSiteBtn.addEventListener('click', displayUsernames);\r\n\r\n  const forum1 = document.getElementById('forum1') as HTMLButtonElement;\r\n  const forum2 = document.getElementById('forum2') as HTMLButtonElement;\r\n  const forum3 = document.getElementById('forum3') as HTMLButtonElement;\r\n\r\n  function memberListOff (forum: HTMLButtonElement) {\r\n    forum.addEventListener('click', ()=>{\r\n        const memberSite = document.getElementById('memberSite') as HTMLElement;\r\n        memberSite.style.display = 'none';\r\n    })\r\n}\r\n\r\nmemberListOff(forum1);\r\nmemberListOff(forum2);\r\nmemberListOff(forum3);","import {getLoggedInUser, Newuser} from \"./login.ts\"\r\n\r\ntype Com = {\r\n  userId: string,\r\n  userName: string;\r\n  title: string;\r\n  message: string;\r\n  commentId: string;\r\n}\r\n\r\n// async function postComments(comment: Com, forumId: string): Promise<string | null> {\r\n//   const loggedInUser = getLoggedInUser();\r\n//   if (!loggedInUser) {\r\n//       console.error('No logged in user found.');\r\n//       return null;\r\n//   }\r\n\r\n//   // Användar-ID för den inloggade användaren\r\n//   const userId = loggedInUser.id;\r\n//   comment.userId = userId;\r\n\r\n//   // Posta kommentaren till databasen\r\n//   const baseUrl = 'https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/';\r\n//   const url = `${baseUrl}${forumId}.json`;\r\n\r\n//   const headers: Headers = new Headers();\r\n//   headers.set('Content-Type', 'application/json');\r\n//   headers.set('Accept', 'application/json');\r\n\r\n//   const request: RequestInfo = new Request(url, {\r\n//       method: 'POST',\r\n//       headers: headers,\r\n//       body: JSON.stringify(comment)\r\n//   });\r\n\r\n//   try {\r\n//       const response = await fetch(request);\r\n//       if (response.ok) {\r\n//           const data = await response.json();\r\n//           const commentId = data.name; // Det unika ID:t som Firebase tilldelar inlägget\r\n//           // console.log('comment posted', commentId);\r\n//           console.log(\"Comment posted!\", response);\r\n//           return commentId;\r\n//       } else {\r\n//           console.error('Failed to post comment:', response.statusText);\r\n//           return null;\r\n//       }\r\n//   } catch (error) {\r\n//       console.error('Error posting comment:', error);\r\n//       return null;\r\n//   }\r\n// }\r\n\r\nasync function postComments(comment: Com, forumId: string): Promise<void> {\r\n  const loggedInUser = getLoggedInUser();\r\n  if (!loggedInUser) {\r\n    console.error('No logged in user found.');\r\n    return;\r\n  }\r\n\r\n  const userId = loggedInUser.id; // Användar-ID för den inloggade användaren\r\n  comment.userId = userId; // Tilldela användarens Firebase ID till kommentaren\r\n\r\n  // Posta kommentaren till databasen\r\n  const baseUrl = 'https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/';\r\n  const url = `${baseUrl}${forumId}.json`;\r\n\r\n  const headers: Headers = new Headers();\r\n  headers.set('Content-Type', 'application/json');\r\n  headers.set('Accept', 'application/json');\r\n\r\n  const request: RequestInfo = new Request(url, {\r\n    method: 'POST',\r\n    headers: headers,\r\n    body: JSON.stringify(comment)\r\n  });\r\n\r\n  return fetch(request)\r\n    .then(res => {\r\n      console.log(\"Comment posted!\", res);\r\n    });\r\n}\r\n\r\n\r\nasync function getComments(forumId: string): Promise<Com[]> {\r\n  const baseUrl = 'https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/';\r\n  const url = `${baseUrl}${forumId}.json`;\r\n\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n\r\n  if (!data) {\r\n    console.error(`No comments found for forum ${forumId}.`);\r\n    return [];\r\n  }\r\n\r\n  const comments: Com[] = Object.keys(data).map(key => {\r\n    const comment = data[key];\r\n    return { ...comment, userName: comment.userName };\r\n  });\r\n\r\n  return comments;\r\n}\r\n\r\n\r\n// async function deleteComment(commentId: string, forumId: string): Promise<void> {\r\n//   const baseUrl = 'https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/';\r\n//   const url = `${baseUrl}${forumId}/${commentId}.json`;\r\n\r\n//   const headers: Headers = new Headers();\r\n//   headers.set('Content-Type', 'application/json');\r\n\r\n//   const request: RequestInfo = new Request(url, {\r\n//       method: 'DELETE',\r\n//       headers: headers,\r\n//   });\r\n\r\n//   try {\r\n//       const response = await fetch(request);\r\n//       if (response.ok) {\r\n//           console.log(`Comment with ID ${commentId} deleted successfully.`);\r\n//       } else {\r\n//           console.error(`Failed to delete comment with ID ${commentId}.`);\r\n//       }\r\n//   } catch (error) {\r\n//       console.error('Error deleting comment:', error);\r\n//   }\r\n// }\r\n\r\n\r\nasync function deleteComment(commentId: string, forumId: string): Promise<void> {\r\n  const baseUrl = 'https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/';\r\n  const url = `${baseUrl}${forumId}/${commentId}.json`;\r\n\r\n  const headers: Headers = new Headers();\r\n  headers.set('Content-Type', 'application/json');\r\n\r\n  const request: RequestInfo = new Request(url, {\r\n    method: 'DELETE',\r\n    headers: headers,\r\n  });\r\n\r\n  return fetch(request)\r\n    .then(res => {\r\n      console.log(\"post deleted:\", res);\r\n    });\r\n}\r\n\r\nexport async function saveProfileText(profileText: string): Promise<void> {\r\n  const loggedInUser = getLoggedInUser();\r\n  if (!loggedInUser) {\r\n    console.error('No logged in user found.');\r\n    return;\r\n  }\r\n\r\n  const userId = loggedInUser.userName; // Användar-ID för den inloggade användaren\r\n\r\n  const baseUrl = 'https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/';\r\n  const url = `${baseUrl}users/${userId}/profileText.json`;\r\n\r\n  const headers: Headers = new Headers();\r\n  headers.set('Content-Type', 'application/json');\r\n  headers.set('Accept', 'application/json');\r\n\r\n  const request: RequestInfo = new Request(url, {\r\n    method: 'PUT',\r\n    headers: headers,\r\n    body: JSON.stringify({ profileText: profileText })\r\n  });\r\n\r\n  return fetch(request)\r\n    .then(res => {\r\n      console.log(\"Profile text saved!\", res);\r\n    });\r\n}\r\n\r\n\r\n\r\nexport async function getProfileText(userId: string): Promise<string | null> {\r\n  const baseUrl = 'https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/';\r\n  const url = `${baseUrl}users/${userId}/profileText.json`;\r\n\r\n  try {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    if (data !== null && 'profileText' in data) {\r\n      return data.profileText;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching profile text:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function getAllUsernames(): Promise<string[]> {\r\n  const usersUrl = 'https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/users.json';\r\n  const usernames: string[] = [];\r\n  \r\n  try {\r\n    const response = await fetch(usersUrl);\r\n    const usersData: { [userId: string]: Newuser } = await response.json();\r\n\r\n    for (const userId in usersData) {\r\n      const user = usersData[userId];\r\n      usernames.push(user.userName);\r\n    }\r\n\r\n    return usernames;\r\n  } catch (error) {\r\n    console.error('Error fetching users data:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\nasync function deleteUser(userId: string): Promise<void> {\r\n  const deleteUserUrl = `https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/users/${userId}.json`;\r\n\r\n  const headers: Headers = new Headers();\r\n  headers.set('Content-Type', 'application/json');\r\n  headers.set('Accept', 'application/json');\r\n\r\n  const request: RequestInfo = new Request(deleteUserUrl, {\r\n    method: 'DELETE',\r\n    headers: headers,\r\n  });\r\n\r\n  try {\r\n    const response = await fetch(request);\r\n    if (response.ok) {\r\n      console.log(`User with ID ${userId} deleted successfully.`);\r\n    } else {\r\n      console.error(`Failed to delete user with ID ${userId}.`);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error deleting user:', error);\r\n  }\r\n}\r\n\r\nexport { Com, getComments, postComments, deleteComment, getAllUsernames, deleteUser };\r\n","import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { profileSite } from \"./profile.ts\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCMe09850eI5d3S_MZw8Rt9BTtSg4qb0rc\",\r\n  authDomain: \"slutprojekt-js2-2b1f0.firebaseapp.com\",\r\n  databaseURL: \"https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"slutprojekt-js2-2b1f0\",\r\n  storageBucket: \"slutprojekt-js2-2b1f0.appspot.com\",\r\n  messagingSenderId: \"1003067095805\",\r\n  appId: \"1:1003067095805:web:a854bbf61459c0cb679c94\",\r\n  measurementId: \"G-15E59VFZSL\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\ntype Newuser = {\r\n    userName: string,\r\n    userEmail: string,\r\n    userPassword: string,\r\n    id: string\r\n  }\r\n  \r\n\r\n  async function loginUser(userEmail: string, userPassword: string): Promise<void> {\r\n    const usersUrl = 'https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/users.json';\r\n  \r\n    try {\r\n      const response = await fetch(usersUrl);\r\n      const usersData: { [userId: string]: Newuser & { id: string } } = await response.json();\r\n  \r\n      let loggedInUser: Newuser | null = null;\r\n  \r\n      for (const userId in usersData) {\r\n        const user = usersData[userId];\r\n        if (user.userEmail === userEmail && user.userPassword === userPassword) {\r\n          console.log('User logged in successfully');\r\n          loggedInUser = { ...user, id: userId }; // Adding Firebase ID to loggedInUser\r\n          hidePopupScreen();\r\n          showUser();\r\n          profileSite();\r\n  \r\n          localStorage.setItem('loggedInUser', JSON.stringify(loggedInUser));\r\n  \r\n          return;\r\n        }\r\n      }\r\n      alert('Invalid email or password');\r\n      console.log('Invalid email or password');\r\n    } catch (error) {\r\n      console.error('Error fetching users data:', error);\r\n    }\r\n  }\r\n  \r\n\r\n// Function to retrieve logged-in user's data from localStorage\r\nfunction getLoggedInUser(): Newuser | null {\r\n  const userJson = localStorage.getItem('loggedInUser');\r\n  if (userJson) {\r\n    const loggedInUser = JSON.parse(userJson);\r\n    // Om id finns i loggedInUser, returnera hela objektet\r\n    if ('id' in loggedInUser) {\r\n      return loggedInUser;\r\n    } else {\r\n      // Om det inte finns, returnera null\r\n      return null;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nfunction hidePopupScreen() {\r\n  const signinupBtn = (document.getElementById(\"signInBtn\") as HTMLButtonElement);\r\n  const popupScreen = (document.getElementById(\"loginPopup\") as HTMLDivElement) ;\r\n  if (popupScreen) {\r\n      popupScreen.style.display = \"none\";\r\n  }\r\n  if (signinupBtn) {\r\n    signinupBtn.style.display = \"none\";\r\n  }\r\n}\r\n\r\n\r\nfunction showUser() {\r\n  const profilePicContainer = document.getElementById(\"profilePicContainer\") as HTMLDivElement;\r\n  const foto = document.getElementById('foto') as HTMLDivElement;\r\n  profilePicContainer.style.display = \"flex\";\r\n\r\n  profilePicContainer.innerHTML = '';\r\n  const chosenPicId = localStorage.getItem('chosenProfilePic');\r\n  \r\n  if (chosenPicId) {\r\n\r\n    const chosenPicElement = document.getElementById(chosenPicId);\r\n    if (chosenPicElement && chosenPicElement instanceof HTMLImageElement) {\r\n\r\n      const chosenPic = document.createElement('img');\r\n      chosenPic.src = chosenPicElement.src; \r\n      chosenPic.classList.add('chosen');\r\n      profilePicContainer.appendChild(chosenPic);\r\n      const chosenPicCopy = chosenPic.cloneNode(true) as HTMLImageElement;\r\n      foto.appendChild(chosenPicCopy);\r\n    } else {\r\n      console.error('Chosen picture element not found or not an image:', chosenPicId);\r\n    }\r\n  } else {\r\n    console.error('No chosen picture ID found in localStorage.');\r\n  }\r\n  const loggedInUser = localStorage.getItem('loggedInUser');\r\n  \r\n  if (loggedInUser) {\r\n\r\n    const userData = JSON.parse(loggedInUser);\r\n    \r\n\r\n    const usernameElement = document.createElement('div');\r\n    usernameElement.textContent = userData.userName; \r\n\r\n\r\n    profilePicContainer.appendChild(usernameElement);\r\n  } else {\r\n    console.error('No logged-in user found in localStorage.');\r\n  }\r\n\r\n}\r\n\r\n  async function createUser(Newuser: Newuser): Promise<void> {\r\n    const createUserUrl = 'https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/users.json';\r\n  \r\n    const headers: Headers = new Headers();\r\n    headers.set('Content-Type', 'application/json');\r\n    headers.set('Accept', 'application/json');\r\n  \r\n    const request: RequestInfo = new Request(createUserUrl, {\r\n      method: 'POST',\r\n      headers: headers,\r\n      body: JSON.stringify(Newuser)\r\n    });\r\n  \r\n    return fetch(request)\r\n      .then(res => {\r\n        console.log(\"User created!\", res);\r\n      });\r\n  }\r\n  \r\n  async function checkUserName(userName: string): Promise<void> {\r\n    const usersUrl = 'https://slutprojekt-js2-2b1f0-default-rtdb.europe-west1.firebasedatabase.app/users.json';\r\n    \r\n    try {\r\n      const response = await fetch(usersUrl);\r\n      const usersData: { [userId: string]: Newuser } = await response.json();\r\n\r\n      for (const userId in usersData) {\r\n          const user = usersData[userId];\r\n          if (user.userName === userName) {\r\n              return;\r\n          }\r\n        }        console.log(usersData);\r\n        return;\r\n  } catch (error) {\r\n      console.error('Error fetching users data:', error);\r\n      return;\r\n  }\r\n}\r\n  \r\ndocument.querySelectorAll('.createUserProfilePic').forEach(pic => {\r\n  pic.addEventListener('click', () => {\r\n    \r\n    document.querySelectorAll('.createUserProfilePic').forEach(pic => {\r\n      pic.classList.remove('chosen');\r\n    });\r\n    \r\n    pic.classList.add('chosen');\r\n    \r\n    localStorage.setItem('chosenProfilePic', pic.id);\r\n  });\r\n});\r\n\r\n// Function to highlight the chosen profile picture\r\nfunction highlightChosenProfilePic() {\r\n  const chosenPicId = localStorage.getItem('chosenProfilePic');\r\n  if (chosenPicId) {\r\n    const chosenPic = document.getElementById(chosenPicId);\r\n    if (chosenPic) {\r\n      chosenPic.classList.add('chosen');\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  export { Newuser, createUser, loginUser, checkUserName, getLoggedInUser, highlightChosenProfilePic, showUser };\r\n  ","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"10.11.0\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, isBrowser, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.10.1\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"10.11.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * @internal\r\n */\r\nconst _serverApps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    for (const serverApp of _serverApps.values()) {\r\n        _addComponent(serverApp, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n *\r\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\r\n *\r\n * @returns true if the provide object is of type FirebaseApp.\r\n *\r\n * @internal\r\n */\r\nfunction _isFirebaseApp(obj) {\r\n    return obj.options !== undefined;\r\n}\r\n/**\r\n *\r\n * @param obj - an object of type FirebaseApp.\r\n *\r\n * @returns true if the provided object is of type FirebaseServerAppImpl.\r\n *\r\n * @internal\r\n */\r\nfunction _isFirebaseServerApp(obj) {\r\n    return obj.settings !== undefined;\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call initializeApp() first',\r\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}'\",\r\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */]: 'Firebase Server App has been deleted',\r\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */]: 'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\r\n    [\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */]: 'FirebaseServerApp is not for use in browser environments.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseServerAppImpl extends FirebaseAppImpl {\r\n    constructor(options, serverConfig, name, container) {\r\n        // Build configuration parameters for the FirebaseAppImpl base class.\r\n        const automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined\r\n            ? serverConfig.automaticDataCollectionEnabled\r\n            : false;\r\n        // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\r\n        const config = {\r\n            name,\r\n            automaticDataCollectionEnabled\r\n        };\r\n        if (options.apiKey !== undefined) {\r\n            // Construct the parent FirebaseAppImp object.\r\n            super(options, config, container);\r\n        }\r\n        else {\r\n            const appImpl = options;\r\n            super(appImpl.options, config, container);\r\n        }\r\n        // Now construct the data for the FirebaseServerAppImpl.\r\n        this._serverConfig = Object.assign({ automaticDataCollectionEnabled }, serverConfig);\r\n        this._finalizationRegistry = new FinalizationRegistry(() => {\r\n            this.automaticCleanup();\r\n        });\r\n        this._refCount = 0;\r\n        this.incRefCount(this._serverConfig.releaseOnDeref);\r\n        // Do not retain a hard reference to the dref object, otherwise the FinalizationRegisry\r\n        // will never trigger.\r\n        this._serverConfig.releaseOnDeref = undefined;\r\n        serverConfig.releaseOnDeref = undefined;\r\n        registerVersion(name$o, version$1, 'serverapp');\r\n    }\r\n    toJSON() {\r\n        return undefined;\r\n    }\r\n    get refCount() {\r\n        return this._refCount;\r\n    }\r\n    // Increment the reference count of this server app. If an object is provided, register it\r\n    // with the finalization registry.\r\n    incRefCount(obj) {\r\n        if (this.isDeleted) {\r\n            return;\r\n        }\r\n        this._refCount++;\r\n        if (obj !== undefined) {\r\n            this._finalizationRegistry.register(obj, this);\r\n        }\r\n    }\r\n    // Decrement the reference count.\r\n    decRefCount() {\r\n        if (this.isDeleted) {\r\n            return 0;\r\n        }\r\n        return --this._refCount;\r\n    }\r\n    // Invoked by the FinalizationRegistry callback to note that this app should go through its\r\n    // reference counts and delete itself if no reference count remain. The coordinating logic that\r\n    // handles this is in deleteApp(...).\r\n    automaticCleanup() {\r\n        void deleteApp(this);\r\n    }\r\n    get settings() {\r\n        this.checkDestroyed();\r\n        return this._serverConfig;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(_options, rawConfig = {}) {\r\n    let options = _options;\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    options || (options = getDefaultAppConfig());\r\n    if (!options) {\r\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\nfunction initializeServerApp(_options, _serverAppConfig) {\r\n    if (isBrowser()) {\r\n        // FirebaseServerApp isn't designed to be run in browsers.\r\n        throw ERROR_FACTORY.create(\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */);\r\n    }\r\n    if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\r\n        _serverAppConfig.automaticDataCollectionEnabled = false;\r\n    }\r\n    let appOptions;\r\n    if (_isFirebaseApp(_options)) {\r\n        appOptions = _options.options;\r\n    }\r\n    else {\r\n        appOptions = _options;\r\n    }\r\n    // Build an app name based on a hash of the configuration options.\r\n    const nameObj = Object.assign(Object.assign({}, _serverAppConfig), appOptions);\r\n    // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\r\n    // construction of FirebaseServerApp instances. For example, if the object is the request headers.\r\n    if (nameObj.releaseOnDeref !== undefined) {\r\n        delete nameObj.releaseOnDeref;\r\n    }\r\n    const hashCode = (s) => {\r\n        return [...s].reduce((hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0, 0);\r\n    };\r\n    if (_serverAppConfig.releaseOnDeref !== undefined) {\r\n        if (typeof FinalizationRegistry === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */, {});\r\n        }\r\n    }\r\n    const nameString = '' + hashCode(JSON.stringify(nameObj));\r\n    const existingApp = _serverApps.get(nameString);\r\n    if (existingApp) {\r\n        existingApp.incRefCount(_serverAppConfig.releaseOnDeref);\r\n        return existingApp;\r\n    }\r\n    const container = new ComponentContainer(nameString);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseServerAppImpl(appOptions, _serverAppConfig, nameString, container);\r\n    _serverApps.set(nameString, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\r\n        return initializeApp();\r\n    }\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    let cleanupProviders = false;\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        cleanupProviders = true;\r\n        _apps.delete(name);\r\n    }\r\n    else if (_serverApps.has(name)) {\r\n        const firebaseServerApp = app;\r\n        if (firebaseServerApp.decRefCount() <= 0) {\r\n            _serverApps.delete(name);\r\n            cleanupProviders = true;\r\n        }\r\n    }\r\n    if (cleanupProviders) {\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        try {\r\n                            db.createObjectStore(STORE_NAME);\r\n                        }\r\n                        catch (e) {\r\n                            // Safari/iOS browsers throw occasional exceptions on\r\n                            // db.createObjectStore() that may be a bug. Avoid blocking\r\n                            // the rest of the app functionality.\r\n                            console.warn(e);\r\n                        }\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME);\r\n        const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\r\n        // We already have the value but tx.done can throw,\r\n        // so we need to await it here to catch errors\r\n        await tx.done;\r\n        return result;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        await tx.done;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        var _a, _b;\r\n        const platformLogger = this.container\r\n            .getProvider('platform-logger')\r\n            .getImmediate();\r\n        // This is the \"Firebase user agent\" string from the platform logger\r\n        // service, not the browser user agent.\r\n        const agent = platformLogger.getPlatformInfoString();\r\n        const date = getUTCDateString();\r\n        if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null) {\r\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n            // If we failed to construct a heartbeats cache, then return immediately.\r\n            if (((_b = this._heartbeatsCache) === null || _b === void 0 ? void 0 : _b.heartbeats) == null) {\r\n                return;\r\n            }\r\n        }\r\n        // Do not store a heartbeat if one is already stored for this day\r\n        // or if a header has already been sent today.\r\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n            this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n            return;\r\n        }\r\n        else {\r\n            // There is no entry for this date. Create one.\r\n            this._heartbeatsCache.heartbeats.push({ date, agent });\r\n        }\r\n        // Remove entries older than 30 days.\r\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n            const now = Date.now();\r\n            return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n        });\r\n        return this._storage.overwrite(this._heartbeatsCache);\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        var _a;\r\n        if (this._heartbeatsCache === null) {\r\n            await this._heartbeatsCachePromise;\r\n        }\r\n        // If it's still null or the array is empty, there is no data to send.\r\n        if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null ||\r\n            this._heartbeatsCache.heartbeats.length === 0) {\r\n            return '';\r\n        }\r\n        const date = getUTCDateString();\r\n        // Extract as many heartbeats from the cache as will fit under the size limit.\r\n        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n        const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n        // Store last sent date to prevent another being logged/sent for the same day.\r\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n        if (unsentEntries.length > 0) {\r\n            // Store any unsent entries if they exist.\r\n            this._heartbeatsCache.heartbeats = unsentEntries;\r\n            // This seems more likely than emptying the array (below) to lead to some odd state\r\n            // since the cache isn't empty and this will be called again on the next request,\r\n            // and is probably safest if we await it.\r\n            await this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        else {\r\n            this._heartbeatsCache.heartbeats = [];\r\n            // Do not wait for this, to reduce latency.\r\n            void this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        return headerString;\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            if (idbHeartbeatObject === null || idbHeartbeatObject === void 0 ? void 0 : idbHeartbeatObject.heartbeats) {\r\n                return idbHeartbeatObject;\r\n            }\r\n            else {\r\n                return { heartbeats: [] };\r\n            }\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _isFirebaseApp, _isFirebaseServerApp, _registerComponent, _removeServiceInstance, _serverApps, deleteApp, getApp, getApps, initializeApp, initializeServerApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseServerApp\n} from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * @internal\n */\nexport const _serverApps = new Map<string, FirebaseServerApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  for (const serverApp of _serverApps.values()) {\n    _addComponent(serverApp as FirebaseServerAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nexport function _isFirebaseApp(\n  obj: FirebaseApp | FirebaseOptions\n): obj is FirebaseApp {\n  return (obj as FirebaseApp).options !== undefined;\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nexport function _isFirebaseServerApp(\n  obj: FirebaseApp | FirebaseServerApp\n): obj is FirebaseServerApp {\n  return (obj as FirebaseServerApp).settings !== undefined;\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  SERVER_APP_DELETED = 'server-app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete',\n  FINALIZATION_REGISTRY_NOT_SUPPORTED = 'finalization-registry-not-supported',\n  INVALID_SERVER_APP_ENVIRONMENT = 'invalid-server-app-environment'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}'\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.SERVER_APP_DELETED]: 'Firebase Server App has been deleted',\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]:\n    'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n  [AppError.INVALID_SERVER_APP_ENVIRONMENT]:\n    'FirebaseServerApp is not for use in browser environments.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]: { appName?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  protected readonly _options: FirebaseOptions;\n  protected readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  protected _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseAppSettings,\n  FirebaseServerApp,\n  FirebaseServerAppSettings,\n  FirebaseOptions\n} from './public-types';\nimport { deleteApp, registerVersion } from './api';\nimport { ComponentContainer } from '@firebase/component';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { name as packageName, version } from '../package.json';\n\nexport class FirebaseServerAppImpl\n  extends FirebaseAppImpl\n  implements FirebaseServerApp\n{\n  private readonly _serverConfig: FirebaseServerAppSettings;\n  private _finalizationRegistry: FinalizationRegistry<object>;\n  private _refCount: number;\n\n  constructor(\n    options: FirebaseOptions | FirebaseAppImpl,\n    serverConfig: FirebaseServerAppSettings,\n    name: string,\n    container: ComponentContainer\n  ) {\n    // Build configuration parameters for the FirebaseAppImpl base class.\n    const automaticDataCollectionEnabled =\n      serverConfig.automaticDataCollectionEnabled !== undefined\n        ? serverConfig.automaticDataCollectionEnabled\n        : false;\n\n    // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n    const config: Required<FirebaseAppSettings> = {\n      name,\n      automaticDataCollectionEnabled\n    };\n\n    if ((options as FirebaseOptions).apiKey !== undefined) {\n      // Construct the parent FirebaseAppImp object.\n      super(options as FirebaseOptions, config, container);\n    } else {\n      const appImpl: FirebaseAppImpl = options as FirebaseAppImpl;\n      super(appImpl.options, config, container);\n    }\n\n    // Now construct the data for the FirebaseServerAppImpl.\n    this._serverConfig = {\n      automaticDataCollectionEnabled,\n      ...serverConfig\n    };\n\n    this._finalizationRegistry = new FinalizationRegistry(() => {\n      this.automaticCleanup();\n    });\n\n    this._refCount = 0;\n    this.incRefCount(this._serverConfig.releaseOnDeref);\n\n    // Do not retain a hard reference to the dref object, otherwise the FinalizationRegisry\n    // will never trigger.\n    this._serverConfig.releaseOnDeref = undefined;\n    serverConfig.releaseOnDeref = undefined;\n\n    registerVersion(packageName, version, 'serverapp');\n  }\n\n  toJSON(): undefined {\n    return undefined;\n  }\n\n  get refCount(): number {\n    return this._refCount;\n  }\n\n  // Increment the reference count of this server app. If an object is provided, register it\n  // with the finalization registry.\n  incRefCount(obj: object | undefined): void {\n    if (this.isDeleted) {\n      return;\n    }\n    this._refCount++;\n    if (obj !== undefined) {\n      this._finalizationRegistry.register(obj, this);\n    }\n  }\n\n  // Decrement the reference count.\n  decRefCount(): number {\n    if (this.isDeleted) {\n      return 0;\n    }\n    return --this._refCount;\n  }\n\n  // Invoked by the FinalizationRegistry callback to note that this app should go through its\n  // reference counts and delete itself if no reference count remain. The coordinating logic that\n  // handles this is in deleteApp(...).\n  private automaticCleanup(): void {\n    void deleteApp(this);\n  }\n\n  get settings(): FirebaseServerAppSettings {\n    this.checkDestroyed();\n    return this._serverConfig;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.SERVER_APP_DELETED);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseServerApp,\n  FirebaseOptions,\n  FirebaseAppSettings,\n  FirebaseServerAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\nimport {\n  _apps,\n  _components,\n  _isFirebaseApp,\n  _registerComponent,\n  _serverApps\n} from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig, isBrowser } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseServerApp} instance.\n *\n * The `FirebaseServerApp` is similar to `FirebaseApp`, but is intended for execution in\n * server side rendering environments only. Initialization will fail if invoked from a\n * browser environment.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize an instance of `FirebaseServerApp`.\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeServerApp({\n *     apiKey: \"AIza....\",                             // Auth / General Use\n *     authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *     databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *     storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *     messagingSenderId: \"123456789\"                  // Cloud Messaging\n *   },\n *   {\n *    authIdToken: \"Your Auth ID Token\"\n *   });\n * ```\n *\n * @param options - `Firebase.AppOptions` to configure the app's services, or a\n *   a `FirebaseApp` instance which contains the `AppOptions` within.\n * @param config - `FirebaseServerApp` configuration.\n *\n * @returns The initialized `FirebaseServerApp`.\n *\n * @public\n */\nexport function initializeServerApp(\n  options: FirebaseOptions | FirebaseApp,\n  config: FirebaseServerAppSettings\n): FirebaseServerApp;\n\nexport function initializeServerApp(\n  _options: FirebaseOptions | FirebaseApp,\n  _serverAppConfig: FirebaseServerAppSettings\n): FirebaseServerApp {\n  if (isBrowser()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(AppError.INVALID_SERVER_APP_ENVIRONMENT);\n  }\n\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = false;\n  }\n\n  let appOptions: FirebaseOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n\n  // Build an app name based on a hash of the configuration options.\n  const nameObj = {\n    ..._serverAppConfig,\n    ...appOptions\n  };\n\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n\n  const hashCode = (s: string): number => {\n    return [...s].reduce(\n      (hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0,\n      0\n    );\n  };\n\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\n        AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED,\n        {}\n      );\n    }\n  }\n\n  const nameString = '' + hashCode(JSON.stringify(nameObj));\n  const existingApp = _serverApps.get(nameString) as FirebaseServerApp;\n  if (existingApp) {\n    (existingApp as FirebaseServerAppImpl).incRefCount(\n      _serverAppConfig.releaseOnDeref\n    );\n    return existingApp;\n  }\n\n  const container = new ComponentContainer(nameString);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseServerAppImpl(\n    appOptions,\n    _serverAppConfig,\n    nameString,\n    container\n  );\n\n  _serverApps.set(nameString, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  let cleanupProviders = false;\n  const name = app.name;\n  if (_apps.has(name)) {\n    cleanupProviders = true;\n    _apps.delete(name);\n  } else if (_serverApps.has(name)) {\n    const firebaseServerApp = app as FirebaseServerAppImpl;\n    if (firebaseServerApp.decRefCount() <= 0) {\n      _serverApps.delete(name);\n      cleanupProviders = true;\n    }\n  }\n\n  if (cleanupProviders) {\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache?.heartbeats == null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n      // If we failed to construct a heartbeats cache, then return immediately.\n      if (this._heartbeatsCache?.heartbeats == null) {\n        return;\n      }\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache?.heartbeats == null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw new DecodeBase64StringError();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * An error encountered while decoding base64 string.\r\n */\r\nclass DecodeBase64StringError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'DecodeBase64StringError';\r\n    }\r\n}\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;\r\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */\r\nconst getDefaultsFromEnvVariable = () => {\r\n    if (typeof process === 'undefined' || typeof process.env === 'undefined') {\r\n        return;\r\n    }\r\n    const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\r\n    if (defaultsJsonString) {\r\n        return JSON.parse(defaultsJsonString);\r\n    }\r\n};\r\nconst getDefaultsFromCookie = () => {\r\n    if (typeof document === 'undefined') {\r\n        return;\r\n    }\r\n    let match;\r\n    try {\r\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\r\n    }\r\n    catch (e) {\r\n        // Some environments such as Angular Universal SSR have a\r\n        // `document` object but error on accessing `document.cookie`.\r\n        return;\r\n    }\r\n    const decoded = match && base64Decode(match[1]);\r\n    return decoded && JSON.parse(decoded);\r\n};\r\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */\r\nconst getDefaults = () => {\r\n    try {\r\n        return (getDefaultsFromGlobal() ||\r\n            getDefaultsFromEnvVariable() ||\r\n            getDefaultsFromCookie());\r\n    }\r\n    catch (e) {\r\n        /**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */\r\n        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\r\n        return;\r\n    }\r\n};\r\n/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHost = (productName) => { var _a, _b; return (_b = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName]; };\r\n/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHostnameAndPort = (productName) => {\r\n    const host = getDefaultEmulatorHost(productName);\r\n    if (!host) {\r\n        return undefined;\r\n    }\r\n    const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\r\n    if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\r\n        throw new Error(`Invalid host ${host} with no separate hostname and port!`);\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    const port = parseInt(host.substring(separatorIndex + 1), 10);\r\n    if (host[0] === '[') {\r\n        // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\r\n        return [host.substring(1, separatorIndex - 1), port];\r\n    }\r\n    else {\r\n        return [host.substring(0, separatorIndex), port];\r\n    }\r\n};\r\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */\r\nconst getDefaultAppConfig = () => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config; };\r\n/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */\r\nconst getExperimentalSetting = (name) => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a[`_${name}`]; };\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected or specified.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    var _a;\r\n    const forceEnvironment = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\r\n    if (forceEnvironment === 'node') {\r\n        return true;\r\n    }\r\n    else if (forceEnvironment === 'browser') {\r\n        return false;\r\n    }\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        !!navigator.userAgent &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    try {\r\n        return typeof indexedDB === 'object';\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */\r\nfunction promiseWithTimeout(promise, timeInMS = 2000) {\r\n    const deferredPromise = new Deferred();\r\n    setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\r\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\r\n    return deferredPromise.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */\r\nconst uuidv4 = function () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, DecodeBase64StringError, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getDefaultAppConfig, getDefaultEmulatorHost, getDefaultEmulatorHostnameAndPort, getDefaults, getExperimentalSetting, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, promiseWithTimeout, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, uuidv4, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    !!navigator.userAgent &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Copied from https://stackoverflow.com/a/2117523\n * Generates a new uuid.\n * @public\n */\nexport const uuidv4 = function (): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { saveProfileText, getProfileText, deleteUser } from './fetchdata';\r\nimport {getLoggedInUser} from \"./login.ts\";\r\nimport {getCommentsByUserId} from \"./displayForum.ts\";\r\n\r\nexport function profileSite() {\r\n    const changeProfileTextButton = document.getElementById('changeProfileText') as HTMLElement;\r\n    const pElement = document.getElementById('profilText') as HTMLElement;\r\n    const ptext = document.getElementById('ptext') as HTMLFormElement;\r\n    const writeProfilText = document.getElementById('writeProfilText') as HTMLInputElement;\r\n    const proSite = document.getElementById('proSite') as HTMLElement;\r\n    const postsContainer = document.getElementById('postsContainer') as HTMLElement;\r\n    const deleteProfile = document.getElementById('deleteProfile') as HTMLButtonElement;\r\n\r\n\r\n    const loggedInUser = getLoggedInUser();\r\n    if (loggedInUser) {\r\n        const userDel = loggedInUser.id;\r\n        deleteProfile.addEventListener('click', () => {\r\n        deleteUser(userDel);\r\n        alert('Profile deleted!')\r\n        });\r\n    } else {\r\n        console.error('Deletion failed');\r\n    }\r\n\r\n    async function loadProfileText() {\r\n        const loggedInUser = getLoggedInUser();\r\n        if (loggedInUser) {\r\n            const userId = loggedInUser.userName;\r\n            const profileText = await getProfileText(userId);\r\n            if (profileText !== null) {\r\n                pElement.innerText = profileText;\r\n            } else {\r\n                pElement.innerText = \"No profile text available\";\r\n            }\r\n        } else {\r\n            console.error('No logged in user found.');\r\n        }\r\n      }\r\n      \r\n    \r\n    async function loadPostHistory() {\r\n        const loggedInUser = getLoggedInUser();\r\n        if (loggedInUser) {\r\n            const userId = loggedInUser.id;\r\n            const postHistory = await getCommentsByUserId(userId);\r\n            renderPostHistory(postHistory);\r\n        } else {\r\n            console.error('No logged in user found.');\r\n        }\r\n    }\r\n\r\n    function renderPostHistory(postHistory) {\r\n        postsContainer.innerHTML = '';\r\n        \r\n        postHistory.forEach(post => {\r\n            const postDiv = document.createElement('div');\r\n            postDiv.classList.add('post');\r\n\r\n            const titleEl = document.createElement('h2');\r\n            titleEl.textContent = post.title;\r\n\r\n            const messageEl = document.createElement('p');\r\n            messageEl.textContent = post.message;\r\n\r\n            postDiv.appendChild(titleEl);\r\n            postDiv.appendChild(messageEl);\r\n\r\n            postsContainer.appendChild(postDiv);\r\n        });\r\n    }\r\n    \r\n    loadProfileText();\r\n    loadPostHistory();\r\n\r\n    changeProfileTextButton.addEventListener('click', () => {\r\n        ptext.style.display = 'block';\r\n        changeProfileTextButton.style.display = 'none';\r\n        pElement.innerText = '';\r\n    });\r\n\r\n    ptext.addEventListener('submit', async (event: Event) => {\r\n        event.preventDefault();\r\n        ptext.style.display = 'none';\r\n        changeProfileTextButton.style.display = 'block';\r\n\r\n        const newProfileText = writeProfilText.value;\r\n\r\n       \r\n        await saveProfileText(newProfileText);\r\n\r\n        pElement.innerText = newProfileText;\r\n    });\r\n    proSite.style.display = 'block';\r\n\r\n    const forum1 = document.getElementById('forum1') as HTMLButtonElement;\r\n    const forum2 = document.getElementById('forum2') as HTMLButtonElement;\r\n    const forum3 = document.getElementById('forum3') as HTMLButtonElement;\r\n    const members = document.getElementById('members') as HTMLButtonElement;\r\n\r\nfunction profileOff (forum: HTMLButtonElement) {\r\n    forum.addEventListener('click', ()=>{\r\n        proSite.style.display = 'none';\r\n    })\r\n}\r\nprofileOff(forum1);\r\nprofileOff(forum2);\r\nprofileOff(forum3);\r\nprofileOff(members);\r\n}\r\n\r\n","module.exports = new __parcel__URL__(\"red.80d2d9bf.jpg\").toString();","module.exports = new __parcel__URL__(\"punk.d2080a5b.jpg\").toString();","module.exports = new __parcel__URL__(\"hat.fc65eed2.jpg\").toString();"],"names":["$e67bf383372d72f4$var$idbProxyableTypes","$e67bf383372d72f4$var$cursorAdvanceMethods","oldTraps","$parcel$interopDefault","a","__esModule","default","LogLevel","$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$currentQueue","$45b460d9de9b230f$export$243e62d78d3b544d","$parcel$global","globalThis","$cfae44f0dfdf62c0$exports","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$var$defaultSetTimout","Error","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","setTimeout","e","call","clearTimeout","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","length","concat","$cfae44f0dfdf62c0$var$drainQueue","timeout","len","run","$cfae44f0dfdf62c0$var$runClearTimeout","marker","$cfae44f0dfdf62c0$var$Item","array","$cfae44f0dfdf62c0$var$noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","$c38e0f42709c826a$var$stringToByteArray$1","str","out","p","c","charCodeAt","$c38e0f42709c826a$var$byteArrayToString","bytes","pos","c1","String","fromCharCode","c2","u","c3","c4","join","$c38e0f42709c826a$export$b3b2de96497acc47","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","isArray","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","charAt","byte4","haveByte4","$c38e0f42709c826a$export$55ca9d4bee46aeb3","constructor","$c38e0f42709c826a$export$e510a73ee562749","utf8Bytes","$c38e0f42709c826a$export$4b5284a3025a455","replace","$c38e0f42709c826a$export$c62426fdd000a97e","console","error","$c38e0f42709c826a$var$getDefaultsFromGlobal","$c38e0f42709c826a$export$a4e55266d2135a7f","self","window","__FIREBASE_DEFAULTS__","$c38e0f42709c826a$var$getDefaultsFromEnvVariable","defaultsJsonString","undefined","JSON","parse","$c38e0f42709c826a$var$getDefaultsFromCookie","match","document","cookie","decoded","$c38e0f42709c826a$export$212bb2fc580a90a8","info","$c38e0f42709c826a$export$3dfb6827a9f89756","_a","config","$c38e0f42709c826a$export$85f6557964517f1a","reject","resolve","promise","Promise","wrapCallback","callback","value","catch","$c38e0f42709c826a$export$dd24e9cd51226c56","code","message","customData","Object","setPrototypeOf","captureStackTrace","$c38e0f42709c826a$export$3fa6e1b18a3b2d40","create","service","serviceName","errors","data","fullCode","template","$c38e0f42709c826a$var$PATTERN","_","key","fullMessage","$c38e0f42709c826a$export$9cb4719e2e525b7a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","$c38e0f42709c826a$var$isObject","thing","$a83e7ccd68ca8d4e$export$16fa2f45be04daa8","instanceFactory","type","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","$a83e7ccd68ca8d4e$var$DEFAULT_ENTRY_NAME","$a83e7ccd68ca8d4e$export$2881499e37b75b9a","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","get","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","set","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","getImmediate","options","optional","getComponent","setComponent","instanceDeferred","entries","clearInstance","delete","services","from","values","all","filter","map","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","$a83e7ccd68ca8d4e$export$436a80eea5d5c0c5","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","$45b460d9de9b230f$var$instances","$45b460d9de9b230f$var$levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","$45b460d9de9b230f$var$defaultLogLevel","$45b460d9de9b230f$var$ConsoleMethod","$45b460d9de9b230f$var$defaultLogHandler","logType","logLevel","now","Date","toISOString","method","$e67bf383372d72f4$export$23f2a1d2818174ef","object","constructors","some","$e67bf383372d72f4$var$cursorRequestMap","WeakMap","$e67bf383372d72f4$var$transactionDoneMap","$e67bf383372d72f4$var$transactionStoreNamesMap","$e67bf383372d72f4$var$transformCache","$e67bf383372d72f4$export$407448d2b89b1813","$e67bf383372d72f4$var$idbProxyTraps","target","prop","receiver","IDBTransaction","objectStoreNames","objectStore","$e67bf383372d72f4$export$efccba1c4a2ef57b","IDBRequest","$e67bf383372d72f4$var$promisifyRequest","request","unlisten","removeEventListener","success","result","addEventListener","then","IDBCursor","newValue","func","IDBDatabase","transaction","$e67bf383372d72f4$var$getCursorAdvanceMethods","advance","continue","continuePrimaryKey","$e67bf383372d72f4$export$3b14a55fb2447963","storeNames","tx","sort","$e67bf383372d72f4$var$cacheDonePromiseForTransaction","done","complete","DOMException","IDBObjectStore","IDBIndex","Proxy","$da032767b57a4aa4$var$readMethods","$da032767b57a4aa4$var$writeMethods","$da032767b57a4aa4$var$cachedMethods","$da032767b57a4aa4$var$getMethod","targetFuncName","useIndex","isWrite","storeName","store","index","shift","$57d436074e210fb5$var$PlatformLoggerServiceImpl","getPlatformInfoString","$57d436074e210fb5$var$isVersionServiceProvider","library","logString","$57d436074e210fb5$var$name$o","$57d436074e210fb5$var$version$1","$57d436074e210fb5$var$logger","_logLevel","_logHandler","_userLogHandler","val","TypeError","setLogLevel","logHandler","userLogHandler","debug","log","warn","$57d436074e210fb5$var$PLATFORM_LOG_STRING","$57d436074e210fb5$export$b4e3c36c855b14b5","$57d436074e210fb5$export$fb03ad8d3d5c5f76","$57d436074e210fb5$export$9566bce3835c0f28","$57d436074e210fb5$export$fa5244b94c62d36a","app","$57d436074e210fb5$export$c930050e7bb63965","componentName","serverApp","$57d436074e210fb5$var$ERROR_FACTORY","$57d436074e210fb5$var$FirebaseAppImpl","_isDeleted","_options","assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","$57d436074e210fb5$export$d29d5299a7137abc","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","$57d436074e210fb5$var$STORE_NAME","$57d436074e210fb5$var$dbPromise","$57d436074e210fb5$var$getDbPromise","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","createObjectStore","originalErrorMessage","$57d436074e210fb5$var$readHeartbeatsFromIndexedDB","$57d436074e210fb5$var$computeKey","idbGetError","$57d436074e210fb5$var$writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","$57d436074e210fb5$var$HeartbeatServiceImpl","_heartbeatsCache","_storage","$57d436074e210fb5$var$HeartbeatStorageImpl","_heartbeatsCachePromise","read","triggerHeartbeat","_b","agent","platformLogger","date","$57d436074e210fb5$var$getUTCDateString","heartbeats","lastSentHeartbeatDate","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","getHeartbeatsHeader","heartbeatsToSend","unsentEntries","$57d436074e210fb5$var$extractHeartbeatsForHeader","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","$57d436074e210fb5$var$countBytes","pop","headerString","stringify","today","substring","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","onerror","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","$c5272c87d5623534$export$f3583a45935410d8","changeProfileTextButton","getElementById","pElement","ptext","writeProfilText","proSite","postsContainer","deleteProfile","loggedInUser","$737e81580589129f$export$16a26516684ef0bc","userDel","id","$c57b70e986778409$export$7d0f10f273c0438a","alert","loadPostHistory","postHistory","userId","$2a951a2c9ce0c4df$export$6c032d8e70001436","innerHTML","forEach","post","postDiv","createElement","classList","titleEl","textContent","messageEl","appendChild","loadProfileText","userName","profileText","$c57b70e986778409$export$ff9b2511e76a5562","innerText","style","display","preventDefault","newProfileText","$c57b70e986778409$export$db3409dddd670b53","forum1","forum2","forum3","members","profileOff","forum","$737e81580589129f$export$692b4a7cc7a486ce","userEmail","userPassword","response","fetch","usersData","json","user","$737e81580589129f$var$hidePopupScreen","signinupBtn","popupScreen","$737e81580589129f$export$eab8f0ccdb89d626","profilePicContainer","foto","chosenPicId","localStorage","getItem","chosenPicElement","HTMLImageElement","chosenPic","src","chosenPicCopy","cloneNode","userData","usernameElement","setItem","userJson","$737e81580589129f$export$3493b8991d49f558","Newuser","headers","Headers","Request","body","res","$c57b70e986778409$export$f518015fdf2fdd54","comment","forumId","url","$c57b70e986778409$export$5320f7bd627cf19","$c57b70e986778409$export$2e6e3ad634e3776","commentId","$c57b70e986778409$export$fda43615d58bef76","usernames","deleteUserUrl","ok","rawConfig","existingApp","newApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","measurementId","querySelectorAll","pic","remove","$6d25dcc733803973$exports","URL","toString","$c55dfafc368cfbf1$exports","$2d454e617e878e8f$exports","$2a951a2c9ce0c4df$var$createdForm","$2a951a2c9ce0c4df$var$loggedInUser","$2a951a2c9ce0c4df$export$a40329fd5fdda0d9","forumContainer","comments","forumForm","insertAdjacentHTML","$2a951a2c9ce0c4df$var$displayComments","form","titleInput","querySelector","messageInput","newComment","$2a951a2c9ce0c4df$export$3f32ea3d499bee84","otherForumIds","otherContainer","commentDiv","commentContent","usernameEl","profilePicEl","profilePic","deleteBtn","removeChild","prepend","forumIds","forumComments","allComments","flat","$2a951a2c9ce0c4df$var$getCommentsByUsername","username","$2a951a2c9ce0c4df$var$clearAllForums","$2a951a2c9ce0c4df$var$displayUsernames","usernamesContainer","memberSite","commentsPromises","commentsArray","$2a951a2c9ce0c4df$var$myPage","$2a951a2c9ce0c4df$var$memberSiteBtn","$2a951a2c9ce0c4df$var$forum1","$2a951a2c9ce0c4df$var$forum2","$2a951a2c9ce0c4df$var$forum3","$2a951a2c9ce0c4df$var$memberListOff","$ad2bcec7a0192558$var$loggedInUser","$ad2bcec7a0192558$var$myPage","activeForumId","forumButton","previousForm","$ad2bcec7a0192558$var$cr8UsrBtn","newName","newEmail","newPassword","loginWrap","loginPopup","$ad2bcec7a0192558$var$loginBtn","$ad2bcec7a0192558$var$loginLink","$ad2bcec7a0192558$var$closeBtn","$ad2bcec7a0192558$var$closeBtn2","$ad2bcec7a0192558$var$signInBtn","email","password","appCompatName","analyticsName","analyticsCompatName","appCheckName","appCheckCompatName","authName","authCompatName","databaseName","databaseCompatName","functionsName","functionsCompatName","installationsName","installationsCompatName","messagingName","messagingCompatName","performanceName","performanceCompatName","remoteConfigName","remoteConfigCompatName","storageName","storageCompatName","firestoreName","firestoreCompatName","packageName","setLogLevelImpl","stringToByteArray"],"version":3,"file":"index.8ba6b041.js.map"}